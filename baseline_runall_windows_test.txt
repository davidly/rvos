Thu 02/27/2025 14:44:42.48 
test c_tests\bin0\tcmp 
uint8_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int8_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint16_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int16_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint32_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int32_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint64_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int64_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint128_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int128_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
floating point:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
test c_tests\bin0\t 
a: 0 4000000000000000
a: 4 0
ua: 0 4000000000000000
ua: 4 0
a: ffffffffffffffff ffffffffffffffff
a: ffffffffffffffff ffffffffffffffdf = -33
int8_t result: 6
uint8_t result: 6
int16_t result: 6
uint16_t result: 6
int32_t result: 6
uint32_t result: 6
int64_t result: 6
uint64_t result: 6
int128_t result: 6
uint128_t result: 6
end of the app
test c_tests\bin0\e 
271828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319
done
test c_tests\bin0\printint 
n -13
test c_tests\bin0\sieve 
1899 primes.
test c_tests\bin0\simple 
argument 0: c_tests/bin0/simple
environment variable 0: TZ=PacificStandardTime+8
environment variable 1: OS=RVOS
test c_tests\bin0\tmuldiv 
app start
i8 3 * 14: 42
i8 3 % 14: 3
i8 3 / 14: 0
i8 17 * 14: -18
i8 17 % 14: 3
i8 17 / 14: 1
i8 -3 * 14: -42
i8 -3 % 14: -3
i8 -3 / 14: 0
i8 -17 * 14: 18
i8 -17 % 14: -3
i8 -17 / 14: -1
i8 -3 * -14: 42
i8 -3 % -14: -3
i8 -3 / -14: 0
i8 -17 * -14: -18
i8 -17 % -14: -3
i8 -17 / -14: 1
ui8 3 * 14: 42
ui8 3 % 14: 3
ui8 3 / 14: 0
ui8 17 * 14: 238
ui8 17 % 14: 3
ui8 17 / 14: 1
ui8 253 * 14: 214
ui8 253 % 14: 1
ui8 253 / 14: 18
ui8 239 * 14: 18
ui8 239 % 14: 1
ui8 239 / 14: 17
ui8 253 * 242: 42
ui8 253 % 242: 11
ui8 253 / 242: 1
ui8 239 * 242: 238
ui8 239 % 242: 239
ui8 239 / 242: 0
i16 3 * 14: 42
i16 3 % 14: 3
i16 3 / 14: 0
i16 3700 * 14: -13736
i16 3700 % 14: 4
i16 3700 / 14: 264
i16 -3 * 14: -42
i16 -3 % 14: -3
i16 -3 / 14: 0
i16 -3700 * 14: 13736
i16 -3700 % 14: -4
i16 -3700 / 14: -264
i16 -3 * -14: 42
i16 -3 % -14: -3
i16 -3 / -14: 0
i16 -3700 * -14: -13736
i16 -3700 % -14: -4
i16 -3700 / -14: 264
ui16 3 * 14: 42
ui16 3 % 14: 3
ui16 3 / 14: 0
ui16 3700 * 14: 51800
ui16 3700 % 14: 4
ui16 3700 / 14: 264
ui16 65533 * 14: 65494
ui16 65533 % 14: 13
ui16 65533 / 14: 4680
ui16 61836 * 14: 13736
ui16 61836 % 14: 12
ui16 61836 / 14: 4416
ui16 65533 * 65522: 42
ui16 65533 % 65522: 11
ui16 65533 / 65522: 1
ui16 61836 * 65522: 51800
ui16 61836 % 65522: 61836
ui16 61836 / 65522: 0
i32 3 * 14: 42
i32 3 % 14: 3
i32 3 / 14: 0
i32 37000 * 14: 518000
i32 37000 % 14: 12
i32 37000 / 14: 2642
i32 -3 * 14: -42
i32 -3 % 14: -3
i32 -3 / 14: 0
i32 -37000 * 14: -518000
i32 -37000 % 14: -12
i32 -37000 / 14: -2642
i32 -3 * -14: 42
i32 -3 % -14: -3
i32 -3 / -14: 0
i32 -37000 * -14: 518000
i32 -37000 % -14: -12
i32 -37000 / -14: 2642
ui32 3 * 14: 42
ui32 3 % 14: 3
ui32 3 / 14: 0
ui32 37000 * 14: 518000
ui32 37000 % 14: 12
ui32 37000 / 14: 2642
ui32 4294967293 * 14: 4294967254
ui32 4294967293 % 14: 1
ui32 4294967293 / 14: 306783378
ui32 4294930296 * 14: 4294449296
ui32 4294930296 % 14: 6
ui32 4294930296 / 14: 306780735
ui32 4294967293 * 4294967282: 42
ui32 4294967293 % 4294967282: 11
ui32 4294967293 / 4294967282: 1
ui32 4294930296 * 4294967282: 518000
ui32 4294930296 % 4294967282: 4294930296
ui32 4294930296 / 4294967282: 0
i64 3 * 14: 42
i64 3 % 14: 3
i64 3 / 14: 0
i64 370000000 * 14: 5180000000
i64 370000000 % 14: 6
i64 370000000 / 14: 26428571
i64 -3 * 14: -42
i64 -3 % 14: -3
i64 -3 / 14: 0
i64 -370000000 * 14: -5180000000
i64 -370000000 % 14: -6
i64 -370000000 / 14: -26428571
i64 -3 * -14: 42
i64 -3 % -14: -3
i64 -3 / -14: 0
i64 -370000000 * -14: 5180000000
i64 -370000000 % -14: -6
i64 -370000000 / -14: 26428571
ui64 3 * 14: 42
ui64 3 % 14: 3
ui64 3 / 14: 0
ui64 370000000 * 14: 5180000000
ui64 370000000 % 14: 6
ui64 370000000 / 14: 26428571
ui64 18446744073709551613 * 14: 18446744073709551574
ui64 18446744073709551613 % 14: 13
ui64 18446744073709551613 / 14: 1317624576693539400
ui64 18446744073339551616 * 14: 18446744068529551616
ui64 18446744073339551616 % 14: 10
ui64 18446744073339551616 / 14: 1317624576667110829
ui64 18446744073709551613 * 18446744073709551602: 42
ui64 18446744073709551613 % 18446744073709551602: 11
ui64 18446744073709551613 / 18446744073709551602: 1
ui64 18446744073339551616 * 18446744073709551602: 5180000000
ui64 18446744073339551616 % 18446744073709551602: 18446744073339551616
ui64 18446744073339551616 / 18446744073709551602: 0
tmuldiv ended with great success
test c_tests\bin0\tpi 
314159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535
test c_tests\bin0\ts 
top of app
print an int 27
print an int64_t 27
sizeof T: 1, result: ff
sizeof T: 1, result: 7f
sizeof T: 2, result: ffff
sizeof T: 2, result: 7fff
sizeof T: 4, result: ffffffff
sizeof T: 4, result: 7fffffff
sizeof T: 8, result: ffffffffffffffff
sizeof T: 8, result: 7fffffffffffffff
now test left shifts
sizeof T: 1, result: fe
sizeof T: 1, result: fe
sizeof T: 2, result: fffe
sizeof T: 2, result: fffe
sizeof T: 4, result: fffffffe
sizeof T: 4, result: fffffffe
sizeof T: 8, result: fffffffffffffffe
sizeof T: 8, result: fffffffffffffffe
now test comparisons
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
testing printf
  string: 'hello'
  char: 'h'
  int: 27, 1b
  negative int: -27, ffffffe5
  int64_t: 27, 1b
  negative int64_t: -27, ffffffffffffffe5
stop
test c_tests\bin0\ttt 
starting...
done
64930 moves
test c_tests\bin0\tarray 
sum: 0xf8
sum: 0xf8
sum: 0xfff8
sum: 0xfff8
sum: 0xfffffff8
sum: 0xfffffff8
sum: 0xfffffffffffffff8
sum: 0xfffffffffffffff8
sum: 0xf8
sum: 0xf8
sum: 0xfff8
sum: 0xfff8
sum: 0xfffffff8
sum: 0xfffffff8
sum: 0xfffffffffffffff8
sum: 0xfffffffffffffff8
sum: 0xfff8
sum: 0xfff8
sum: 0xf8
sum: 0xf8
    0000  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 08  ................................
    0020  00 00 00 00 00 00 00 02 00 04 00 00 00 ff f8 ff : ff ff ff ff ff ff fe ff fc ff ff ff 02 10 00 00  ................................
    0040  00 00 00 00 00 04 00 08 00 00 00 fe f0 ff ff ff : ff ff ff ff fc ff f8 ff ff ff 03 18 00 00 00 00  ................................
    0060  00 00 00 06 00 0c 00 00 00 fd e8 ff ff ff ff ff : ff ff fa ff f4 ff ff ff 04 20 00 00 00 00 00 00  ......................... ......
    0080  00 08 00 10 00 00 00 fc e0 ff ff ff ff ff ff ff : f8 ff f0 ff ff ff 05 28 00 00 00 00 00 00 00 0a  .......................(........
    00a0  00 14 00 00 00 fb d8 ff ff ff ff ff ff ff f6 ff : ec ff ff ff 06 30 00 00 00 00 00 00 00 0c 00 18  .....................0..........
    00c0  00 00 00 fa d0 ff ff ff ff ff ff ff f4 ff e8 ff : ff ff 07 38 00 00 00 00 00 00 00 0e 00 1c 00 00  ...................8............
    00e0  00 f9 c8 ff ff ff ff ff ff ff f2 ff e4 ff ff ff : 08 40 00 00 00 00 00 00 00 10 00 20 00 00 00 f8  .................@......... ....
    0100  c0 ff ff ff ff ff ff ff f0 ff e0 ff ff ff 09 48 : 00 00 00 00 00 00 00 12 00 24 00 00 00 f7 b8 ff  ...............H.........$......
    0120  ff ff ff ff ff ff ee ff dc ff ff ff 0a 50 00 00 : 00 00 00 00 00 14 00 28 00 00 00 f6 b0 ff ff ff  .............P.........(........
    0140  ff ff ff ff ec ff d8 ff ff ff 0b 58 00 00 00 00 : 00 00 00 16 00 2c 00 00 00 f5 a8 ff ff ff ff ff  ...........X.........,..........
    0160  ff ff ea ff d4 ff ff ff 0c 60 00 00 00 00 00 00 : 00 18 00 30 00 00 00 f4 a0 ff ff ff ff ff ff ff  .........`.........0............
    0180  e8 ff d0 ff ff ff 0d 68 00 00 00 00 00 00 00 1a : 00 34 00 00 00 f3 98 ff ff ff ff ff ff ff e6 ff  .......h.........4..............
    01a0  cc ff ff ff 0e 70 00 00 00 00 00 00 00 1c 00 38 : 00 00 00 f2 90 ff ff ff ff ff ff ff e4 ff c8 ff  .....p.........8................
    01c0  ff ff 0f 78 00 00 00 00 00 00 00 1e 00 3c 00 00 : 00 f1 88 ff ff ff ff ff ff ff e2 ff c4 ff ff ff  ...x.........<..................
    01e0  10 80 00 00 00 00 00 00 00 20 00 40 00 00 00 f0 : 80 ff ff ff ff ff ff ff e0 ff c0 ff ff ff 11 88  ......... .@....................
    0200  00 00 00 00 00 00 00 22 00 44 00 00 00 ef 78 ff : ff ff ff ff ff ff de ff bc ff ff ff 12 90 00 00  .......".D....x.................
    0220  00 00 00 00 00 24 00 48 00 00 00 ee 70 ff ff ff : ff ff ff ff dc ff b8 ff ff ff 13 98 00 00 00 00  .....$.H....p...................
    0240  00 00 00 26 00 4c 00 00 00 ed 68 ff ff ff ff ff : ff ff da ff b4 ff ff ff                          ...&.L....h.............
tarray completed with great success
test c_tests\bin0\tbits 
uint8_t:
  and 3, or 7, xor 4, nota f8, notb fc
  and 5, or ff, xor fa, nota f8, notb 2
  and 1, or fb, xor fa, nota 6, notb fc
  and f9, or fd, xor 4, nota 6, notb 2
  and ff, or ff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota 8, notb fc
  and f5, or ff, xor a, nota 8, notb 2
  and 1, or b, xor a, nota f6, notb fc
  and 9, or 9, xor 0, nota f6, notb f6
int8_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or fffffffffffffff7, xor fffffffffffffff4, nota 8, notb fffffffffffffffc
  and fffffffffffffff5, or ffffffffffffffff, xor a, nota 8, notb 2
  and 1, or b, xor a, nota fffffffffffffff6, notb fffffffffffffffc
  and 9, or 9, xor 0, nota fffffffffffffff6, notb fffffffffffffff6
uint16_t:
  and 3, or 7, xor 4, nota fff8, notb fffc
  and 5, or ffff, xor fffa, nota fff8, notb 2
  and 1, or fffb, xor fffa, nota 6, notb fffc
  and fff9, or fffd, xor 4, nota 6, notb 2
  and ffff, or ffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ff08, notb fffc
  and f5, or ffff, xor ff0a, nota ff08, notb 2
  and 1, or ff0b, xor ff0a, nota f6, notb fffc
  and ff09, or ff09, xor 0, nota f6, notb f6
int16_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
uint32_t:
  and 3, or 7, xor 4, nota fffffff8, notb fffffffc
  and 5, or ffffffff, xor fffffffa, nota fffffff8, notb 2
  and 1, or fffffffb, xor fffffffa, nota 6, notb fffffffc
  and fffffff9, or fffffffd, xor 4, nota 6, notb 2
  and ffffffff, or ffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffff08, notb fffffffc
  and f5, or ffffffff, xor ffffff0a, nota ffffff08, notb 2
  and 1, or ffffff0b, xor ffffff0a, nota f6, notb fffffffc
  and ffffff09, or ffffff09, xor 0, nota f6, notb f6
int32_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
uint64_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
int64_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
test c_tests\bin0\trw 
trw completed with great success
test c_tests\bin0\tmmap 
MAP_PRIVATE: 0x2
MAP_ANONYMOUS: 0x20
MREMAP_MAYMOVE: 0x1
PROT_READ: 0x1
PROT_WRITE: 0x2
mmap test completed with great success
test c_tests\bin0\tstr 
testing strlen
testing strchr and strrchr
testing strstr
testing memcpy and memcmp
testing printf
34 (34): stuvwxyzabcdefghijklmnopqrstuvwxyz
13 (13): efghijklmnopq
 3 ( 3): hij
50 (50): pqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklm
23 (23): yzabcdefghijklmnopqrstu
16 (16): yzabcdefghijklmn
21 (21): efghijklmnopqrstuvwxy
17 (17): lmnopqrstuvwxyzab
56 (56): zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabc
24 (24): xyzabcdefghijklmnopqrstu
55 (55): xyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
58 (58): pqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstu
18 (18): nopqrstuvwxyzabcde
22 (22): tuvwxyzabcdefghijklmno
49 (49): stuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmno
42 (42): defghijklmnopqrstuvwxyzabcdefghijklmnopqrs
62 (62): rstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyza
11 (11): xyzabcdefgh
45 (45): ijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyza
11 (11): rstuvwxyzab
testing wcslen
testing wcschr and wcsrchr
testing wcsstr
tstr completed with great success
test c_tests\bin0\fileops 
current offset: 0
result of fseek: 0
file length from ftell: 0
empty file length: 0
result of fseek: 0
result of fwrite (should be 1): 1
current offset: 8320
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length from portable_filelen: 8320
result of fseek to middle of file: 0
result of fwrite to middle of file (should be 1): 1
current offset: 0
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length: 8320
result of read at offset 0: 512
result of read at offset 512: 512
result of read at offset 1024: 512
result of read at offset 1536: 512
result of read at offset 2048: 512
result of read at offset 2560: 512
result of read at offset 3072: 512
result of read at offset 3584: 512
result of read at offset 4096: 512
result of read at offset 4608: 512
result of read at offset 5120: 512
result of read at offset 5632: 512
result of read at offset 6144: 512
result of read at offset 6656: 512
result of read at offset 7168: 512
result of read at offset 7680: 512
result of read at offset 8192: 128
testing backwards read
result of read at offset 8192: 128
result of read at offset 7680: 512
result of read at offset 7168: 512
result of read at offset 6656: 512
result of read at offset 6144: 512
result of read at offset 5632: 512
result of read at offset 5120: 512
result of read at offset 4608: 512
result of read at offset 4096: 512
result of read at offset 3584: 512
result of read at offset 3072: 512
result of read at offset 2560: 512
result of read at offset 2048: 512
result of read at offset 1536: 512
result of read at offset 1024: 512
result of read at offset 512: 512
result of read at offset 0: 512
fileops has completed with great success
test c_tests\bin0\ttime 
before TZ is set: tz: 'PacificStandardTime+8', year: 2025, month 2, day 27, hour 14, min 44, sec 44
east coast time: set tz 'TZ=EST+5' tz: 'EST+5', year: 2025, month 2, day 27, hour 17, min 44, sec 44
west coast time: set tz 'TZ=PST+8' tz: 'PST+8', year: 2025, month 2, day 27, hour 14, min 44, sec 44
TZ=<blank>: set tz 'TZ=' tz: '', year: 2025, month 2, day 27, hour 22, min 44, sec 44
test c_tests\bin0\tm 
tm has completed with great success
test c_tests\bin0\glob 
in CTest constructor
top main
value of ctest::foo: 666
end of main
in ~CTest destructor
test c_tests\bin0\tap 
starting, should tend towards 1.2020569031595942854...
  at           10 iterations: 1.19753198567419305576
  at          100 iterations: 1.20200740065967814907
  at         1000 iterations: 1.20205640365934329772
  at        10000 iterations: 1.20205689816009808624
  at       100000 iterations: 1.20205690310973234425
next implementation...
  at           10 iterations: 1.25000000000000000000
  at          100 iterations: 1.14942528735632176762
  at         1000 iterations: 1.21802679658952506259
  at        10000 iterations: 1.20293516179477921746
tap completed with great success
test c_tests\bin0\tsimplef 
float 3.141593
f1 2.500000 * f2 3.500000 = 8.750000
    div = 0.714286
    add = 6.000000
    sub = -1.000000
d1 9.720000 * d2 13.321000 = 129.480120
    div = 0.729675
    add = 23.041000
    sub = -3.601000
double from int128: 1000.000000
tsimplef completed with great success
test c_tests\bin0\tf 
float converted by floattoa: -1.23456699
float converted by floattoa: 1.23456699
float converted by floattoa: 34.56700000
float from printf: 45.678000
division result: 333.333344, square root 18.257420
float converted with floattoa: -27.108400
result of 20.2 * -1.342: -27.108400
result of 20.2 * -1.342 as a double: -27.108400
pi in radians: 0.523599
sinf of 30 degress is 0.500000
cosf of 30 degrees is 0.866025
tanf of 30 degrees is 0.577350
atanf of 1.000000 is 0.785398
atan2f of 0.3, 0.2 is 0.982794
acosf of 0.3 is 1.266104
asinf of 0.3 is 0.304693
tanhf of 2.2 is 0.304693
logf of 0.3: -1.203973
log10f of 300: 2.477121
pi has mantissa: 0.785398, exponent 2
l,le,l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,g,ge,
test tf completed with great success
test c_tests\bin0\td 
sprintf double 3.14159265358979311600
double from printf: 3.14159265358979311600
float from printf: 1.202057
double from printf r: -3.776373
sqrt of pi: 1.772454
pi in radians: 0.523599
sin of 30 degress is 0.500000
cos of 30 degrees is 0.866025
tan of 30 degrees is 0.577350
atan of 1.000000 is 0.785398
atan2 of 0.3, 0.2 is 0.982794
acos of 0.3 is 1.266104
asin of 0.3 is 0.304693
tanh of 2.2 is 0.304693
log of 0.3: -1.203973
log10 of 300: 2.477121
l,le,l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,
pi has mantissa: 0.785398, exponent 2
r should be 1.0: 1.000000
  r high point 3187071009115104228782838925952666189789578010509155762176.000000
stop
test c_tests\bin0\terrno 
errno opening a file for read that doesn't exist: 2 (2 file not found expected)
errno doing write to stdin file descriptor: 13. (13 permission denied expected)
errno opening a file for read with invalid open flags: 22 (22 invalid argument expected)
success
test c_tests\bin0\t_setjmp 
second
back in main
falling out of main
test c_tests\bin0\tex 
top of tex
I am unwound, x should be 44: 44
caught exception exceptional
attempting large allocations
caught a standard execption: std::bad_alloc
leaving main
test c_tests\bin0\mm 
float dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
float dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
float dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
float dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
float dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
float dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
float dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
float dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
float dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
float dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
float dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
float dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
float dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
float dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
float dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
float dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
float dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
float dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
float dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
float dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
double dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
double dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
double dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
double dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
double dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
double dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
double dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
double dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
double dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
double dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
double dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
double dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
double dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
double dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
double dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
double dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
double dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
double dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
double dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
double dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
ldouble_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
ldouble_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
ldouble_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
ldouble_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
ldouble_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
ldouble_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
ldouble_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
ldouble_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
ldouble_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
ldouble_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
ldouble_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
ldouble_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
ldouble_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
ldouble_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
ldouble_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
ldouble_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
ldouble_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
ldouble_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
ldouble_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
ldouble_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
int8_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int8_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int8_t dim 3: sum -28.0, mag -28.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int8_t dim 4: sum -62.0, mag -62.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum -94.0, sqrtsum 95.0
int8_t dim 5: sum -117.0, mag 7.0, min, -126.0 max 110.0, fmodsum 22.000, dotsum 47.0, sqrtsum -74.0
int8_t dim 6: sum -83.0, mag -31.0, min, -119.0 max 122.0, fmodsum 31.000, dotsum 10.0, sqrtsum 21.0
int8_t dim 7: sum 40.0, mag -66.0, min, -128.0 max 127.0, fmodsum 30.000, dotsum 47.0, sqrtsum -108.0
int8_t dim 8: sum 52.0, mag 34.0, min, -126.0 max 124.0, fmodsum 8.000, dotsum -65.0, sqrtsum 34.0
int8_t dim 9: sum -127.0, mag -7.0, min, -128.0 max 127.0, fmodsum -14.000, dotsum -67.0, sqrtsum -116.0
int8_t dim 10: sum -37.0, mag -83.0, min, -125.0 max 127.0, fmodsum -26.000, dotsum 68.0, sqrtsum 4.0
int8_t dim 11: sum -108.0, mag 108.0, min, -128.0 max 127.0, fmodsum -29.000, dotsum 70.0, sqrtsum 89.0
int8_t dim 12: sum -126.0, mag 78.0, min, -127.0 max 126.0, fmodsum -35.000, dotsum 13.0, sqrtsum -37.0
int8_t dim 13: sum -69.0, mag -43.0, min, -127.0 max 126.0, fmodsum 8.000, dotsum 105.0, sqrtsum -124.0
int8_t dim 14: sum 119.0, mag 33.0, min, -125.0 max 127.0, fmodsum -17.000, dotsum -118.0, sqrtsum 71.0
int8_t dim 15: sum -78.0, mag -64.0, min, -128.0 max 127.0, fmodsum -16.000, dotsum 126.0, sqrtsum 16.0
int8_t dim 16: sum 64.0, mag 72.0, min, -128.0 max 127.0, fmodsum -42.000, dotsum 106.0, sqrtsum -14.0
int8_t dim 17: sum 20.0, mag 102.0, min, -126.0 max 127.0, fmodsum 16.000, dotsum 30.0, sqrtsum -6.0
int8_t dim 18: sum -62.0, mag -90.0, min, -128.0 max 127.0, fmodsum -12.000, dotsum 1.0, sqrtsum -25.0
int8_t dim 19: sum 14.0, mag 32.0, min, -128.0 max 127.0, fmodsum 13.000, dotsum -58.0, sqrtsum -64.0
int8_t dim 20: sum -40.0, mag 12.0, min, -128.0 max 127.0, fmodsum -15.000, dotsum -35.0, sqrtsum 55.0
uint8_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint8_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint8_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint8_t dim 4: sum 194.0, mag 194.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint8_t dim 5: sum 139.0, mag 139.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 47.0, sqrtsum 188.0
uint8_t dim 6: sum 173.0, mag 173.0, min, 18.0 max 247.0, fmodsum 45.000, dotsum 10.0, sqrtsum 54.0
uint8_t dim 7: sum 40.0, mag 40.0, min, 17.0 max 238.0, fmodsum 58.000, dotsum 47.0, sqrtsum 212.0
uint8_t dim 8: sum 52.0, mag 52.0, min, 18.0 max 250.0, fmodsum 70.000, dotsum 191.0, sqrtsum 146.0
uint8_t dim 9: sum 129.0, mag 129.0, min, 6.0 max 254.0, fmodsum 99.000, dotsum 189.0, sqrtsum 118.0
uint8_t dim 10: sum 219.0, mag 219.0, min, 1.0 max 253.0, fmodsum 113.000, dotsum 68.0, sqrtsum 64.0
uint8_t dim 11: sum 148.0, mag 148.0, min, 0.0 max 255.0, fmodsum 144.000, dotsum 70.0, sqrtsum 57.0
uint8_t dim 12: sum 130.0, mag 130.0, min, 1.0 max 255.0, fmodsum 144.000, dotsum 13.0, sqrtsum 246.0
uint8_t dim 13: sum 187.0, mag 187.0, min, 0.0 max 255.0, fmodsum 203.000, dotsum 105.0, sqrtsum 188.0
uint8_t dim 14: sum 119.0, mag 119.0, min, 1.0 max 254.0, fmodsum 196.000, dotsum 138.0, sqrtsum 185.0
uint8_t dim 15: sum 178.0, mag 178.0, min, 0.0 max 255.0, fmodsum 231.000, dotsum 126.0, sqrtsum 254.0
uint8_t dim 16: sum 64.0, mag 64.0, min, 0.0 max 254.0, fmodsum 8.000, dotsum 106.0, sqrtsum 27.0
uint8_t dim 17: sum 20.0, mag 20.0, min, 0.0 max 255.0, fmodsum 73.000, dotsum 30.0, sqrtsum 76.0
uint8_t dim 18: sum 194.0, mag 194.0, min, 0.0 max 251.0, fmodsum 100.000, dotsum 1.0, sqrtsum 161.0
uint8_t dim 19: sum 14.0, mag 14.0, min, 0.0 max 254.0, fmodsum 156.000, dotsum 198.0, sqrtsum 254.0
uint8_t dim 20: sum 216.0, mag 216.0, min, 0.0 max 255.0, fmodsum 189.000, dotsum 221.0, sqrtsum 230.0
int16_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int16_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int16_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int16_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int16_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int16_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int16_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int16_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int16_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int16_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int16_t dim 11: sum -25452.0, mag -25452.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int16_t dim 12: sum -8062.0, mag -8062.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int16_t dim 13: sum 14011.0, mag 14011.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int16_t dim 14: sum -23433.0, mag -23433.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int16_t dim 15: sum 11698.0, mag 11698.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int16_t dim 16: sum -10176.0, mag -10176.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int16_t dim 17: sum -23532.0, mag -23532.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int16_t dim 18: sum -25406.0, mag -25406.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int16_t dim 19: sum -16370.0, mag -16370.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int16_t dim 20: sum 7128.0, mag 7128.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint16_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint16_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint16_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint16_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint16_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint16_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint16_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint16_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint16_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint16_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint16_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint16_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint16_t dim 13: sum 14011.0, mag 14011.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint16_t dim 14: sum 42103.0, mag 42103.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint16_t dim 15: sum 11698.0, mag 11698.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint16_t dim 16: sum 55360.0, mag 55360.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint16_t dim 17: sum 42004.0, mag 42004.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint16_t dim 18: sum 40130.0, mag 40130.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint16_t dim 19: sum 49166.0, mag 49166.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint16_t dim 20: sum 7128.0, mag 7128.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
int32_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int32_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int32_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int32_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int32_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int32_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int32_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int32_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int32_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int32_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int32_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int32_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int32_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int32_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int32_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int32_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int32_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int32_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int32_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int32_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint32_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint32_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint32_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint32_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint32_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint32_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint32_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint32_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint32_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint32_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint32_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint32_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint32_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint32_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint32_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint32_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint32_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint32_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint32_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint32_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
int64_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int64_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int64_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int64_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int64_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int64_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int64_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int64_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int64_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int64_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int64_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int64_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int64_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int64_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int64_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int64_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int64_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int64_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int64_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int64_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint64_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint64_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint64_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint64_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint64_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint64_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint64_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint64_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint64_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint64_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint64_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint64_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint64_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint64_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint64_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint64_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint64_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint64_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint64_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint64_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
matrix multiply test completed with great success
test c_tests\bin0\pis 
startingOffset128: 0, startingOffset: 0, countGenerated128 1, countGenerated 128
startInChunks: 0, limitInChunks 4
percent complete: 25.000000
percent complete: 50.000000
percent complete: 75.000000
percent complete: 100.000000
results are valid
final: 243f6a8885a308d313198a2e03707344a4093822299f31d0082efa98ec4e6c89452821e638d01377be5466cf34e90c6cc0ac29b7c97c50dd3f84d5b5b5470917
test c_tests\bin0\sleeptm 
clk_tck / number of linux ticks per second: 100
sleepy time ended with great success
test c_tests\bin0\tatomic 
test atomic completed with great success
test c_tests\bin0\lenum 
linux file system enumeration completed with great success
test c_tests\bin0\tregex 
regex test completed with great success
test c_tests\bin0\an 
a delve id
a delved i
a die veld
a dive led
a dived le
a led vied
add ive le
add le vie
addle ive
addle vie
aid delve
aide veld
ale dived
ave did le
ave id led
ave idled
dad ive le
dad le vie
dale dive
dale vied
david eel
david lee
dead evil
dead levi
dead live
dead veil
dead vile
deal dive
deal vied
dee valid
deed vial
did leave
died vale
died veal
dive lade
dive lead
dived lea
evade lid
eve id lad
id leaved
idea veld
lade vied
lead vied
test c_tests\bin0\ba 
parsing input file tp.bas
783 ms for 1 iterations
final move count 6493
exiting the basic interpreter
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
test c_tests\bin1\tcmp 
uint8_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int8_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint16_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int16_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint32_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int32_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint64_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int64_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint128_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int128_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
floating point:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
test c_tests\bin1\t 
a: 0 4000000000000000
a: 4 0
ua: 0 4000000000000000
ua: 4 0
a: ffffffffffffffff ffffffffffffffff
a: ffffffffffffffff ffffffffffffffdf = -33
int8_t result: 6
uint8_t result: 6
int16_t result: 6
uint16_t result: 6
int32_t result: 6
uint32_t result: 6
int64_t result: 6
uint64_t result: 6
int128_t result: 6
uint128_t result: 6
end of the app
test c_tests\bin1\e 
271828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319
done
test c_tests\bin1\printint 
n -13
test c_tests\bin1\sieve 
1899 primes.
test c_tests\bin1\simple 
argument 0: c_tests/bin1/simple
environment variable 0: TZ=PacificStandardTime+8
environment variable 1: OS=RVOS
test c_tests\bin1\tmuldiv 
app start
i8 3 * 14: 42
i8 3 % 14: 3
i8 3 / 14: 0
i8 17 * 14: -18
i8 17 % 14: 3
i8 17 / 14: 1
i8 -3 * 14: -42
i8 -3 % 14: -3
i8 -3 / 14: 0
i8 -17 * 14: 18
i8 -17 % 14: -3
i8 -17 / 14: -1
i8 -3 * -14: 42
i8 -3 % -14: -3
i8 -3 / -14: 0
i8 -17 * -14: -18
i8 -17 % -14: -3
i8 -17 / -14: 1
ui8 3 * 14: 42
ui8 3 % 14: 3
ui8 3 / 14: 0
ui8 17 * 14: 238
ui8 17 % 14: 3
ui8 17 / 14: 1
ui8 253 * 14: 214
ui8 253 % 14: 1
ui8 253 / 14: 18
ui8 239 * 14: 18
ui8 239 % 14: 1
ui8 239 / 14: 17
ui8 253 * 242: 42
ui8 253 % 242: 11
ui8 253 / 242: 1
ui8 239 * 242: 238
ui8 239 % 242: 239
ui8 239 / 242: 0
i16 3 * 14: 42
i16 3 % 14: 3
i16 3 / 14: 0
i16 3700 * 14: -13736
i16 3700 % 14: 4
i16 3700 / 14: 264
i16 -3 * 14: -42
i16 -3 % 14: -3
i16 -3 / 14: 0
i16 -3700 * 14: 13736
i16 -3700 % 14: -4
i16 -3700 / 14: -264
i16 -3 * -14: 42
i16 -3 % -14: -3
i16 -3 / -14: 0
i16 -3700 * -14: -13736
i16 -3700 % -14: -4
i16 -3700 / -14: 264
ui16 3 * 14: 42
ui16 3 % 14: 3
ui16 3 / 14: 0
ui16 3700 * 14: 51800
ui16 3700 % 14: 4
ui16 3700 / 14: 264
ui16 65533 * 14: 65494
ui16 65533 % 14: 13
ui16 65533 / 14: 4680
ui16 61836 * 14: 13736
ui16 61836 % 14: 12
ui16 61836 / 14: 4416
ui16 65533 * 65522: 42
ui16 65533 % 65522: 11
ui16 65533 / 65522: 1
ui16 61836 * 65522: 51800
ui16 61836 % 65522: 61836
ui16 61836 / 65522: 0
i32 3 * 14: 42
i32 3 % 14: 3
i32 3 / 14: 0
i32 37000 * 14: 518000
i32 37000 % 14: 12
i32 37000 / 14: 2642
i32 -3 * 14: -42
i32 -3 % 14: -3
i32 -3 / 14: 0
i32 -37000 * 14: -518000
i32 -37000 % 14: -12
i32 -37000 / 14: -2642
i32 -3 * -14: 42
i32 -3 % -14: -3
i32 -3 / -14: 0
i32 -37000 * -14: 518000
i32 -37000 % -14: -12
i32 -37000 / -14: 2642
ui32 3 * 14: 42
ui32 3 % 14: 3
ui32 3 / 14: 0
ui32 37000 * 14: 518000
ui32 37000 % 14: 12
ui32 37000 / 14: 2642
ui32 4294967293 * 14: 4294967254
ui32 4294967293 % 14: 1
ui32 4294967293 / 14: 306783378
ui32 4294930296 * 14: 4294449296
ui32 4294930296 % 14: 6
ui32 4294930296 / 14: 306780735
ui32 4294967293 * 4294967282: 42
ui32 4294967293 % 4294967282: 11
ui32 4294967293 / 4294967282: 1
ui32 4294930296 * 4294967282: 518000
ui32 4294930296 % 4294967282: 4294930296
ui32 4294930296 / 4294967282: 0
i64 3 * 14: 42
i64 3 % 14: 3
i64 3 / 14: 0
i64 370000000 * 14: 5180000000
i64 370000000 % 14: 6
i64 370000000 / 14: 26428571
i64 -3 * 14: -42
i64 -3 % 14: -3
i64 -3 / 14: 0
i64 -370000000 * 14: -5180000000
i64 -370000000 % 14: -6
i64 -370000000 / 14: -26428571
i64 -3 * -14: 42
i64 -3 % -14: -3
i64 -3 / -14: 0
i64 -370000000 * -14: 5180000000
i64 -370000000 % -14: -6
i64 -370000000 / -14: 26428571
ui64 3 * 14: 42
ui64 3 % 14: 3
ui64 3 / 14: 0
ui64 370000000 * 14: 5180000000
ui64 370000000 % 14: 6
ui64 370000000 / 14: 26428571
ui64 18446744073709551613 * 14: 18446744073709551574
ui64 18446744073709551613 % 14: 13
ui64 18446744073709551613 / 14: 1317624576693539400
ui64 18446744073339551616 * 14: 18446744068529551616
ui64 18446744073339551616 % 14: 10
ui64 18446744073339551616 / 14: 1317624576667110829
ui64 18446744073709551613 * 18446744073709551602: 42
ui64 18446744073709551613 % 18446744073709551602: 11
ui64 18446744073709551613 / 18446744073709551602: 1
ui64 18446744073339551616 * 18446744073709551602: 5180000000
ui64 18446744073339551616 % 18446744073709551602: 18446744073339551616
ui64 18446744073339551616 / 18446744073709551602: 0
tmuldiv ended with great success
test c_tests\bin1\tpi 
314159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535
test c_tests\bin1\ts 
top of app
print an int 27
print an int64_t 27
sizeof T: 1, result: ff
sizeof T: 1, result: 7f
sizeof T: 2, result: ffff
sizeof T: 2, result: 7fff
sizeof T: 4, result: ffffffff
sizeof T: 4, result: 7fffffff
sizeof T: 8, result: ffffffffffffffff
sizeof T: 8, result: 7fffffffffffffff
now test left shifts
sizeof T: 1, result: fe
sizeof T: 1, result: fe
sizeof T: 2, result: fffe
sizeof T: 2, result: fffe
sizeof T: 4, result: fffffffe
sizeof T: 4, result: fffffffe
sizeof T: 8, result: fffffffffffffffe
sizeof T: 8, result: fffffffffffffffe
now test comparisons
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
testing printf
  string: 'hello'
  char: 'h'
  int: 27, 1b
  negative int: -27, ffffffe5
  int64_t: 27, 1b
  negative int64_t: -27, ffffffffffffffe5
stop
test c_tests\bin1\ttt 
starting...
done
64930 moves
test c_tests\bin1\tarray 
sum: 0xf8
sum: 0xf8
sum: 0xfff8
sum: 0xfff8
sum: 0xfffffff8
sum: 0xfffffff8
sum: 0xfffffffffffffff8
sum: 0xfffffffffffffff8
sum: 0xf8
sum: 0xf8
sum: 0xfff8
sum: 0xfff8
sum: 0xfffffff8
sum: 0xfffffff8
sum: 0xfffffffffffffff8
sum: 0xfffffffffffffff8
sum: 0xfff8
sum: 0xfff8
sum: 0xf8
sum: 0xf8
    0000  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 08  ................................
    0020  00 00 00 00 00 00 00 02 00 04 00 00 00 ff f8 ff : ff ff ff ff ff ff fe ff fc ff ff ff 02 10 00 00  ................................
    0040  00 00 00 00 00 04 00 08 00 00 00 fe f0 ff ff ff : ff ff ff ff fc ff f8 ff ff ff 03 18 00 00 00 00  ................................
    0060  00 00 00 06 00 0c 00 00 00 fd e8 ff ff ff ff ff : ff ff fa ff f4 ff ff ff 04 20 00 00 00 00 00 00  ......................... ......
    0080  00 08 00 10 00 00 00 fc e0 ff ff ff ff ff ff ff : f8 ff f0 ff ff ff 05 28 00 00 00 00 00 00 00 0a  .......................(........
    00a0  00 14 00 00 00 fb d8 ff ff ff ff ff ff ff f6 ff : ec ff ff ff 06 30 00 00 00 00 00 00 00 0c 00 18  .....................0..........
    00c0  00 00 00 fa d0 ff ff ff ff ff ff ff f4 ff e8 ff : ff ff 07 38 00 00 00 00 00 00 00 0e 00 1c 00 00  ...................8............
    00e0  00 f9 c8 ff ff ff ff ff ff ff f2 ff e4 ff ff ff : 08 40 00 00 00 00 00 00 00 10 00 20 00 00 00 f8  .................@......... ....
    0100  c0 ff ff ff ff ff ff ff f0 ff e0 ff ff ff 09 48 : 00 00 00 00 00 00 00 12 00 24 00 00 00 f7 b8 ff  ...............H.........$......
    0120  ff ff ff ff ff ff ee ff dc ff ff ff 0a 50 00 00 : 00 00 00 00 00 14 00 28 00 00 00 f6 b0 ff ff ff  .............P.........(........
    0140  ff ff ff ff ec ff d8 ff ff ff 0b 58 00 00 00 00 : 00 00 00 16 00 2c 00 00 00 f5 a8 ff ff ff ff ff  ...........X.........,..........
    0160  ff ff ea ff d4 ff ff ff 0c 60 00 00 00 00 00 00 : 00 18 00 30 00 00 00 f4 a0 ff ff ff ff ff ff ff  .........`.........0............
    0180  e8 ff d0 ff ff ff 0d 68 00 00 00 00 00 00 00 1a : 00 34 00 00 00 f3 98 ff ff ff ff ff ff ff e6 ff  .......h.........4..............
    01a0  cc ff ff ff 0e 70 00 00 00 00 00 00 00 1c 00 38 : 00 00 00 f2 90 ff ff ff ff ff ff ff e4 ff c8 ff  .....p.........8................
    01c0  ff ff 0f 78 00 00 00 00 00 00 00 1e 00 3c 00 00 : 00 f1 88 ff ff ff ff ff ff ff e2 ff c4 ff ff ff  ...x.........<..................
    01e0  10 80 00 00 00 00 00 00 00 20 00 40 00 00 00 f0 : 80 ff ff ff ff ff ff ff e0 ff c0 ff ff ff 11 88  ......... .@....................
    0200  00 00 00 00 00 00 00 22 00 44 00 00 00 ef 78 ff : ff ff ff ff ff ff de ff bc ff ff ff 12 90 00 00  .......".D....x.................
    0220  00 00 00 00 00 24 00 48 00 00 00 ee 70 ff ff ff : ff ff ff ff dc ff b8 ff ff ff 13 98 00 00 00 00  .....$.H....p...................
    0240  00 00 00 26 00 4c 00 00 00 ed 68 ff ff ff ff ff : ff ff da ff b4 ff ff ff                          ...&.L....h.............
tarray completed with great success
test c_tests\bin1\tbits 
uint8_t:
  and 3, or 7, xor 4, nota f8, notb fc
  and 5, or ff, xor fa, nota f8, notb 2
  and 1, or fb, xor fa, nota 6, notb fc
  and f9, or fd, xor 4, nota 6, notb 2
  and ff, or ff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota 8, notb fc
  and f5, or ff, xor a, nota 8, notb 2
  and 1, or b, xor a, nota f6, notb fc
  and 9, or 9, xor 0, nota f6, notb f6
int8_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or fffffffffffffff7, xor fffffffffffffff4, nota 8, notb fffffffffffffffc
  and fffffffffffffff5, or ffffffffffffffff, xor a, nota 8, notb 2
  and 1, or b, xor a, nota fffffffffffffff6, notb fffffffffffffffc
  and 9, or 9, xor 0, nota fffffffffffffff6, notb fffffffffffffff6
uint16_t:
  and 3, or 7, xor 4, nota fff8, notb fffc
  and 5, or ffff, xor fffa, nota fff8, notb 2
  and 1, or fffb, xor fffa, nota 6, notb fffc
  and fff9, or fffd, xor 4, nota 6, notb 2
  and ffff, or ffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ff08, notb fffc
  and f5, or ffff, xor ff0a, nota ff08, notb 2
  and 1, or ff0b, xor ff0a, nota f6, notb fffc
  and ff09, or ff09, xor 0, nota f6, notb f6
int16_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
uint32_t:
  and 3, or 7, xor 4, nota fffffff8, notb fffffffc
  and 5, or ffffffff, xor fffffffa, nota fffffff8, notb 2
  and 1, or fffffffb, xor fffffffa, nota 6, notb fffffffc
  and fffffff9, or fffffffd, xor 4, nota 6, notb 2
  and ffffffff, or ffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffff08, notb fffffffc
  and f5, or ffffffff, xor ffffff0a, nota ffffff08, notb 2
  and 1, or ffffff0b, xor ffffff0a, nota f6, notb fffffffc
  and ffffff09, or ffffff09, xor 0, nota f6, notb f6
int32_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
uint64_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
int64_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
test c_tests\bin1\trw 
trw completed with great success
test c_tests\bin1\tmmap 
MAP_PRIVATE: 0x2
MAP_ANONYMOUS: 0x20
MREMAP_MAYMOVE: 0x1
PROT_READ: 0x1
PROT_WRITE: 0x2
mmap test completed with great success
test c_tests\bin1\tstr 
testing strlen
testing strchr and strrchr
testing strstr
testing memcpy and memcmp
testing printf
34 (34): stuvwxyzabcdefghijklmnopqrstuvwxyz
13 (13): efghijklmnopq
 3 ( 3): hij
50 (50): pqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklm
23 (23): yzabcdefghijklmnopqrstu
16 (16): yzabcdefghijklmn
21 (21): efghijklmnopqrstuvwxy
17 (17): lmnopqrstuvwxyzab
56 (56): zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabc
24 (24): xyzabcdefghijklmnopqrstu
55 (55): xyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
58 (58): pqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstu
18 (18): nopqrstuvwxyzabcde
22 (22): tuvwxyzabcdefghijklmno
49 (49): stuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmno
42 (42): defghijklmnopqrstuvwxyzabcdefghijklmnopqrs
62 (62): rstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyza
11 (11): xyzabcdefgh
45 (45): ijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyza
11 (11): rstuvwxyzab
testing wcslen
testing wcschr and wcsrchr
testing wcsstr
tstr completed with great success
test c_tests\bin1\fileops 
current offset: 0
result of fseek: 0
file length from ftell: 0
empty file length: 0
result of fseek: 0
result of fwrite (should be 1): 1
current offset: 8320
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length from portable_filelen: 8320
result of fseek to middle of file: 0
result of fwrite to middle of file (should be 1): 1
current offset: 0
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length: 8320
result of read at offset 0: 512
result of read at offset 512: 512
result of read at offset 1024: 512
result of read at offset 1536: 512
result of read at offset 2048: 512
result of read at offset 2560: 512
result of read at offset 3072: 512
result of read at offset 3584: 512
result of read at offset 4096: 512
result of read at offset 4608: 512
result of read at offset 5120: 512
result of read at offset 5632: 512
result of read at offset 6144: 512
result of read at offset 6656: 512
result of read at offset 7168: 512
result of read at offset 7680: 512
result of read at offset 8192: 128
testing backwards read
result of read at offset 8192: 128
result of read at offset 7680: 512
result of read at offset 7168: 512
result of read at offset 6656: 512
result of read at offset 6144: 512
result of read at offset 5632: 512
result of read at offset 5120: 512
result of read at offset 4608: 512
result of read at offset 4096: 512
result of read at offset 3584: 512
result of read at offset 3072: 512
result of read at offset 2560: 512
result of read at offset 2048: 512
result of read at offset 1536: 512
result of read at offset 1024: 512
result of read at offset 512: 512
result of read at offset 0: 512
fileops has completed with great success
test c_tests\bin1\ttime 
before TZ is set: tz: 'PacificStandardTime+8', year: 2025, month 2, day 27, hour 14, min 44, sec 54
east coast time: set tz 'TZ=EST+5' tz: 'EST+5', year: 2025, month 2, day 27, hour 17, min 44, sec 54
west coast time: set tz 'TZ=PST+8' tz: 'PST+8', year: 2025, month 2, day 27, hour 14, min 44, sec 54
TZ=<blank>: set tz 'TZ=' tz: '', year: 2025, month 2, day 27, hour 22, min 44, sec 54
test c_tests\bin1\tm 
tm has completed with great success
test c_tests\bin1\glob 
in CTest constructor
top main
value of ctest::foo: 666
end of main
in ~CTest destructor
test c_tests\bin1\tap 
starting, should tend towards 1.2020569031595942854...
  at           10 iterations: 1.19753198567419305576
  at          100 iterations: 1.20200740065967814907
  at         1000 iterations: 1.20205640365934329772
  at        10000 iterations: 1.20205689816009808624
  at       100000 iterations: 1.20205690310973234425
next implementation...
  at           10 iterations: 1.25000000000000000000
  at          100 iterations: 1.14942528735632176762
  at         1000 iterations: 1.21802679658952506259
  at        10000 iterations: 1.20293516179477921746
tap completed with great success
test c_tests\bin1\tsimplef 
float 3.141593
f1 2.500000 * f2 3.500000 = 8.750000
    div = 0.714286
    add = 6.000000
    sub = -1.000000
d1 9.720000 * d2 13.321000 = 129.480120
    div = 0.729675
    add = 23.041000
    sub = -3.601000
double from int128: 1000.000000
tsimplef completed with great success
test c_tests\bin1\tf 
float converted by floattoa: -1.23456699
float converted by floattoa: 1.23456699
float converted by floattoa: 34.56700000
float from printf: 45.678000
division result: 333.333344, square root 18.257420
float converted with floattoa: -27.108400
result of 20.2 * -1.342: -27.108400
result of 20.2 * -1.342 as a double: -27.108400
pi in radians: 0.523599
sinf of 30 degress is 0.500000
cosf of 30 degrees is 0.866025
tanf of 30 degrees is 0.577350
atanf of 1.000000 is 0.785398
atan2f of 0.3, 0.2 is 0.982794
acosf of 0.3 is 1.266104
asinf of 0.3 is 0.304693
tanhf of 2.2 is 0.304693
logf of 0.3: -1.203973
log10f of 300: 2.477121
pi has mantissa: 0.785398, exponent 2
l,le,l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,g,ge,
test tf completed with great success
test c_tests\bin1\td 
sprintf double 3.14159265358979311600
double from printf: 3.14159265358979311600
float from printf: 1.202057
double from printf r: -3.776373
sqrt of pi: 1.772454
pi in radians: 0.523599
sin of 30 degress is 0.500000
cos of 30 degrees is 0.866025
tan of 30 degrees is 0.577350
atan of 1.000000 is 0.785398
atan2 of 0.3, 0.2 is 0.982794
acos of 0.3 is 1.266104
asin of 0.3 is 0.304693
tanh of 2.2 is 0.304693
log of 0.3: -1.203973
log10 of 300: 2.477121
l,le,l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,
pi has mantissa: 0.785398, exponent 2
r should be 1.0: 1.000000
  r high point 3187071009115104228782838925952666189789578010509155762176.000000
stop
test c_tests\bin1\terrno 
errno opening a file for read that doesn't exist: 2 (2 file not found expected)
errno doing write to stdin file descriptor: 13. (13 permission denied expected)
errno opening a file for read with invalid open flags: 22 (22 invalid argument expected)
success
test c_tests\bin1\t_setjmp 
second
back in main
falling out of main
test c_tests\bin1\tex 
top of tex
I am unwound, x should be 44: 44
caught exception exceptional
attempting large allocations
caught a standard execption: std::bad_alloc
leaving main
test c_tests\bin1\mm 
float dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
float dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
float dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
float dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
float dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
float dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
float dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
float dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
float dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
float dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
float dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
float dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
float dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
float dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
float dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
float dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
float dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
float dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
float dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
float dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
double dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
double dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
double dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
double dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
double dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
double dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
double dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
double dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
double dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
double dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
double dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
double dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
double dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
double dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
double dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
double dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
double dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
double dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
double dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
double dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
ldouble_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
ldouble_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
ldouble_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
ldouble_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
ldouble_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
ldouble_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
ldouble_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
ldouble_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
ldouble_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
ldouble_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
ldouble_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
ldouble_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
ldouble_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
ldouble_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
ldouble_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
ldouble_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
ldouble_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
ldouble_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
ldouble_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
ldouble_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
int8_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int8_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int8_t dim 3: sum -28.0, mag -28.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int8_t dim 4: sum -62.0, mag -62.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum -94.0, sqrtsum 95.0
int8_t dim 5: sum -117.0, mag 7.0, min, -126.0 max 110.0, fmodsum 22.000, dotsum 47.0, sqrtsum -74.0
int8_t dim 6: sum -83.0, mag -31.0, min, -119.0 max 122.0, fmodsum 31.000, dotsum 10.0, sqrtsum 21.0
int8_t dim 7: sum 40.0, mag -66.0, min, -128.0 max 127.0, fmodsum 30.000, dotsum 47.0, sqrtsum -108.0
int8_t dim 8: sum 52.0, mag 34.0, min, -126.0 max 124.0, fmodsum 8.000, dotsum -65.0, sqrtsum 34.0
int8_t dim 9: sum -127.0, mag -7.0, min, -128.0 max 127.0, fmodsum -14.000, dotsum -67.0, sqrtsum -116.0
int8_t dim 10: sum -37.0, mag -83.0, min, -125.0 max 127.0, fmodsum -26.000, dotsum 68.0, sqrtsum 4.0
int8_t dim 11: sum -108.0, mag 108.0, min, -128.0 max 127.0, fmodsum -29.000, dotsum 70.0, sqrtsum 89.0
int8_t dim 12: sum -126.0, mag 78.0, min, -127.0 max 126.0, fmodsum -35.000, dotsum 13.0, sqrtsum -37.0
int8_t dim 13: sum -69.0, mag -43.0, min, -127.0 max 126.0, fmodsum 8.000, dotsum 105.0, sqrtsum -124.0
int8_t dim 14: sum 119.0, mag 33.0, min, -125.0 max 127.0, fmodsum -17.000, dotsum -118.0, sqrtsum 71.0
int8_t dim 15: sum -78.0, mag -64.0, min, -128.0 max 127.0, fmodsum -16.000, dotsum 126.0, sqrtsum 16.0
int8_t dim 16: sum 64.0, mag 72.0, min, -128.0 max 127.0, fmodsum -42.000, dotsum 106.0, sqrtsum -14.0
int8_t dim 17: sum 20.0, mag 102.0, min, -126.0 max 127.0, fmodsum 16.000, dotsum 30.0, sqrtsum -6.0
int8_t dim 18: sum -62.0, mag -90.0, min, -128.0 max 127.0, fmodsum -12.000, dotsum 1.0, sqrtsum -25.0
int8_t dim 19: sum 14.0, mag 32.0, min, -128.0 max 127.0, fmodsum 13.000, dotsum -58.0, sqrtsum -64.0
int8_t dim 20: sum -40.0, mag 12.0, min, -128.0 max 127.0, fmodsum -15.000, dotsum -35.0, sqrtsum 55.0
uint8_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint8_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint8_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint8_t dim 4: sum 194.0, mag 194.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint8_t dim 5: sum 139.0, mag 139.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 47.0, sqrtsum 188.0
uint8_t dim 6: sum 173.0, mag 173.0, min, 18.0 max 247.0, fmodsum 45.000, dotsum 10.0, sqrtsum 54.0
uint8_t dim 7: sum 40.0, mag 40.0, min, 17.0 max 238.0, fmodsum 58.000, dotsum 47.0, sqrtsum 212.0
uint8_t dim 8: sum 52.0, mag 52.0, min, 18.0 max 250.0, fmodsum 70.000, dotsum 191.0, sqrtsum 146.0
uint8_t dim 9: sum 129.0, mag 129.0, min, 6.0 max 254.0, fmodsum 99.000, dotsum 189.0, sqrtsum 118.0
uint8_t dim 10: sum 219.0, mag 219.0, min, 1.0 max 253.0, fmodsum 113.000, dotsum 68.0, sqrtsum 64.0
uint8_t dim 11: sum 148.0, mag 148.0, min, 0.0 max 255.0, fmodsum 144.000, dotsum 70.0, sqrtsum 57.0
uint8_t dim 12: sum 130.0, mag 130.0, min, 1.0 max 255.0, fmodsum 144.000, dotsum 13.0, sqrtsum 246.0
uint8_t dim 13: sum 187.0, mag 187.0, min, 0.0 max 255.0, fmodsum 203.000, dotsum 105.0, sqrtsum 188.0
uint8_t dim 14: sum 119.0, mag 119.0, min, 1.0 max 254.0, fmodsum 196.000, dotsum 138.0, sqrtsum 185.0
uint8_t dim 15: sum 178.0, mag 178.0, min, 0.0 max 255.0, fmodsum 231.000, dotsum 126.0, sqrtsum 254.0
uint8_t dim 16: sum 64.0, mag 64.0, min, 0.0 max 254.0, fmodsum 8.000, dotsum 106.0, sqrtsum 27.0
uint8_t dim 17: sum 20.0, mag 20.0, min, 0.0 max 255.0, fmodsum 73.000, dotsum 30.0, sqrtsum 76.0
uint8_t dim 18: sum 194.0, mag 194.0, min, 0.0 max 251.0, fmodsum 100.000, dotsum 1.0, sqrtsum 161.0
uint8_t dim 19: sum 14.0, mag 14.0, min, 0.0 max 254.0, fmodsum 156.000, dotsum 198.0, sqrtsum 254.0
uint8_t dim 20: sum 216.0, mag 216.0, min, 0.0 max 255.0, fmodsum 189.000, dotsum 221.0, sqrtsum 230.0
int16_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int16_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int16_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int16_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int16_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int16_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int16_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int16_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int16_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int16_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int16_t dim 11: sum -25452.0, mag -25452.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int16_t dim 12: sum -8062.0, mag -8062.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int16_t dim 13: sum 14011.0, mag 14011.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int16_t dim 14: sum -23433.0, mag -23433.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int16_t dim 15: sum 11698.0, mag 11698.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int16_t dim 16: sum -10176.0, mag -10176.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int16_t dim 17: sum -23532.0, mag -23532.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int16_t dim 18: sum -25406.0, mag -25406.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int16_t dim 19: sum -16370.0, mag -16370.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int16_t dim 20: sum 7128.0, mag 7128.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint16_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint16_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint16_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint16_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint16_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint16_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint16_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint16_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint16_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint16_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint16_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint16_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint16_t dim 13: sum 14011.0, mag 14011.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint16_t dim 14: sum 42103.0, mag 42103.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint16_t dim 15: sum 11698.0, mag 11698.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint16_t dim 16: sum 55360.0, mag 55360.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint16_t dim 17: sum 42004.0, mag 42004.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint16_t dim 18: sum 40130.0, mag 40130.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint16_t dim 19: sum 49166.0, mag 49166.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint16_t dim 20: sum 7128.0, mag 7128.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
int32_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int32_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int32_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int32_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int32_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int32_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int32_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int32_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int32_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int32_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int32_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int32_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int32_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int32_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int32_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int32_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int32_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int32_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int32_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int32_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint32_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint32_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint32_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint32_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint32_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint32_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint32_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint32_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint32_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint32_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint32_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint32_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint32_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint32_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint32_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint32_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint32_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint32_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint32_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint32_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
int64_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int64_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int64_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int64_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int64_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int64_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int64_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int64_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int64_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int64_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int64_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int64_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int64_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int64_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int64_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int64_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int64_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int64_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int64_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int64_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint64_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint64_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint64_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint64_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint64_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint64_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint64_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint64_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint64_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint64_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint64_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint64_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint64_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint64_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint64_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint64_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint64_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint64_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint64_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint64_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
matrix multiply test completed with great success
test c_tests\bin1\pis 
startingOffset128: 0, startingOffset: 0, countGenerated128 1, countGenerated 128
startInChunks: 0, limitInChunks 4
percent complete: 25.000000
percent complete: 50.000000
percent complete: 75.000000
percent complete: 100.000000
results are valid
final: 243f6a8885a308d313198a2e03707344a4093822299f31d0082efa98ec4e6c89452821e638d01377be5466cf34e90c6cc0ac29b7c97c50dd3f84d5b5b5470917
test c_tests\bin1\sleeptm 
clk_tck / number of linux ticks per second: 100
sleepy time ended with great success
test c_tests\bin1\tatomic 
test atomic completed with great success
test c_tests\bin1\lenum 
linux file system enumeration completed with great success
test c_tests\bin1\tregex 
regex test completed with great success
test c_tests\bin1\an 
a delve id
a delved i
a die veld
a dive led
a dived le
a led vied
add ive le
add le vie
addle ive
addle vie
aid delve
aide veld
ale dived
ave did le
ave id led
ave idled
dad ive le
dad le vie
dale dive
dale vied
david eel
david lee
dead evil
dead levi
dead live
dead veil
dead vile
deal dive
deal vied
dee valid
deed vial
did leave
died vale
died veal
dive lade
dive lead
dived lea
evade lid
eve id lad
id leaved
idea veld
lade vied
lead vied
test c_tests\bin1\ba 
parsing input file tp.bas
172 ms for 1 iterations
final move count 6493
exiting the basic interpreter
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
test c_tests\bin2\tcmp 
uint8_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int8_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint16_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int16_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint32_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int32_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint64_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int64_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint128_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int128_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
floating point:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
test c_tests\bin2\t 
a: 0 4000000000000000
a: 4 0
ua: 0 4000000000000000
ua: 4 0
a: ffffffffffffffff ffffffffffffffff
a: ffffffffffffffff ffffffffffffffdf = -33
int8_t result: 6
uint8_t result: 6
int16_t result: 6
uint16_t result: 6
int32_t result: 6
uint32_t result: 6
int64_t result: 6
uint64_t result: 6
int128_t result: 6
uint128_t result: 6
end of the app
test c_tests\bin2\e 
271828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319
done
test c_tests\bin2\printint 
n -13
test c_tests\bin2\sieve 
1899 primes.
test c_tests\bin2\simple 
argument 0: c_tests/bin2/simple
environment variable 0: TZ=PacificStandardTime+8
environment variable 1: OS=RVOS
test c_tests\bin2\tmuldiv 
app start
i8 3 * 14: 42
i8 3 % 14: 3
i8 3 / 14: 0
i8 17 * 14: -18
i8 17 % 14: 3
i8 17 / 14: 1
i8 -3 * 14: -42
i8 -3 % 14: -3
i8 -3 / 14: 0
i8 -17 * 14: 18
i8 -17 % 14: -3
i8 -17 / 14: -1
i8 -3 * -14: 42
i8 -3 % -14: -3
i8 -3 / -14: 0
i8 -17 * -14: -18
i8 -17 % -14: -3
i8 -17 / -14: 1
ui8 3 * 14: 42
ui8 3 % 14: 3
ui8 3 / 14: 0
ui8 17 * 14: 238
ui8 17 % 14: 3
ui8 17 / 14: 1
ui8 253 * 14: 214
ui8 253 % 14: 1
ui8 253 / 14: 18
ui8 239 * 14: 18
ui8 239 % 14: 1
ui8 239 / 14: 17
ui8 253 * 242: 42
ui8 253 % 242: 11
ui8 253 / 242: 1
ui8 239 * 242: 238
ui8 239 % 242: 239
ui8 239 / 242: 0
i16 3 * 14: 42
i16 3 % 14: 3
i16 3 / 14: 0
i16 3700 * 14: -13736
i16 3700 % 14: 4
i16 3700 / 14: 264
i16 -3 * 14: -42
i16 -3 % 14: -3
i16 -3 / 14: 0
i16 -3700 * 14: 13736
i16 -3700 % 14: -4
i16 -3700 / 14: -264
i16 -3 * -14: 42
i16 -3 % -14: -3
i16 -3 / -14: 0
i16 -3700 * -14: -13736
i16 -3700 % -14: -4
i16 -3700 / -14: 264
ui16 3 * 14: 42
ui16 3 % 14: 3
ui16 3 / 14: 0
ui16 3700 * 14: 51800
ui16 3700 % 14: 4
ui16 3700 / 14: 264
ui16 65533 * 14: 65494
ui16 65533 % 14: 13
ui16 65533 / 14: 4680
ui16 61836 * 14: 13736
ui16 61836 % 14: 12
ui16 61836 / 14: 4416
ui16 65533 * 65522: 42
ui16 65533 % 65522: 11
ui16 65533 / 65522: 1
ui16 61836 * 65522: 51800
ui16 61836 % 65522: 61836
ui16 61836 / 65522: 0
i32 3 * 14: 42
i32 3 % 14: 3
i32 3 / 14: 0
i32 37000 * 14: 518000
i32 37000 % 14: 12
i32 37000 / 14: 2642
i32 -3 * 14: -42
i32 -3 % 14: -3
i32 -3 / 14: 0
i32 -37000 * 14: -518000
i32 -37000 % 14: -12
i32 -37000 / 14: -2642
i32 -3 * -14: 42
i32 -3 % -14: -3
i32 -3 / -14: 0
i32 -37000 * -14: 518000
i32 -37000 % -14: -12
i32 -37000 / -14: 2642
ui32 3 * 14: 42
ui32 3 % 14: 3
ui32 3 / 14: 0
ui32 37000 * 14: 518000
ui32 37000 % 14: 12
ui32 37000 / 14: 2642
ui32 4294967293 * 14: 4294967254
ui32 4294967293 % 14: 1
ui32 4294967293 / 14: 306783378
ui32 4294930296 * 14: 4294449296
ui32 4294930296 % 14: 6
ui32 4294930296 / 14: 306780735
ui32 4294967293 * 4294967282: 42
ui32 4294967293 % 4294967282: 11
ui32 4294967293 / 4294967282: 1
ui32 4294930296 * 4294967282: 518000
ui32 4294930296 % 4294967282: 4294930296
ui32 4294930296 / 4294967282: 0
i64 3 * 14: 42
i64 3 % 14: 3
i64 3 / 14: 0
i64 370000000 * 14: 5180000000
i64 370000000 % 14: 6
i64 370000000 / 14: 26428571
i64 -3 * 14: -42
i64 -3 % 14: -3
i64 -3 / 14: 0
i64 -370000000 * 14: -5180000000
i64 -370000000 % 14: -6
i64 -370000000 / 14: -26428571
i64 -3 * -14: 42
i64 -3 % -14: -3
i64 -3 / -14: 0
i64 -370000000 * -14: 5180000000
i64 -370000000 % -14: -6
i64 -370000000 / -14: 26428571
ui64 3 * 14: 42
ui64 3 % 14: 3
ui64 3 / 14: 0
ui64 370000000 * 14: 5180000000
ui64 370000000 % 14: 6
ui64 370000000 / 14: 26428571
ui64 18446744073709551613 * 14: 18446744073709551574
ui64 18446744073709551613 % 14: 13
ui64 18446744073709551613 / 14: 1317624576693539400
ui64 18446744073339551616 * 14: 18446744068529551616
ui64 18446744073339551616 % 14: 10
ui64 18446744073339551616 / 14: 1317624576667110829
ui64 18446744073709551613 * 18446744073709551602: 42
ui64 18446744073709551613 % 18446744073709551602: 11
ui64 18446744073709551613 / 18446744073709551602: 1
ui64 18446744073339551616 * 18446744073709551602: 5180000000
ui64 18446744073339551616 % 18446744073709551602: 18446744073339551616
ui64 18446744073339551616 / 18446744073709551602: 0
tmuldiv ended with great success
test c_tests\bin2\tpi 
314159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535
test c_tests\bin2\ts 
top of app
print an int 27
print an int64_t 27
sizeof T: 1, result: ff
sizeof T: 1, result: 7f
sizeof T: 2, result: ffff
sizeof T: 2, result: 7fff
sizeof T: 4, result: ffffffff
sizeof T: 4, result: 7fffffff
sizeof T: 8, result: ffffffffffffffff
sizeof T: 8, result: 7fffffffffffffff
now test left shifts
sizeof T: 1, result: fe
sizeof T: 1, result: fe
sizeof T: 2, result: fffe
sizeof T: 2, result: fffe
sizeof T: 4, result: fffffffe
sizeof T: 4, result: fffffffe
sizeof T: 8, result: fffffffffffffffe
sizeof T: 8, result: fffffffffffffffe
now test comparisons
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
testing printf
  string: 'hello'
  char: 'h'
  int: 27, 1b
  negative int: -27, ffffffe5
  int64_t: 27, 1b
  negative int64_t: -27, ffffffffffffffe5
stop
test c_tests\bin2\ttt 
starting...
done
64930 moves
test c_tests\bin2\tarray 
sum: 0xf8
sum: 0xf8
sum: 0xfff8
sum: 0xfff8
sum: 0xfffffff8
sum: 0xfffffff8
sum: 0xfffffffffffffff8
sum: 0xfffffffffffffff8
sum: 0xf8
sum: 0xf8
sum: 0xfff8
sum: 0xfff8
sum: 0xfffffff8
sum: 0xfffffff8
sum: 0xfffffffffffffff8
sum: 0xfffffffffffffff8
sum: 0xfff8
sum: 0xfff8
sum: 0xf8
sum: 0xf8
    0000  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 08  ................................
    0020  00 00 00 00 00 00 00 02 00 04 00 00 00 ff f8 ff : ff ff ff ff ff ff fe ff fc ff ff ff 02 10 00 00  ................................
    0040  00 00 00 00 00 04 00 08 00 00 00 fe f0 ff ff ff : ff ff ff ff fc ff f8 ff ff ff 03 18 00 00 00 00  ................................
    0060  00 00 00 06 00 0c 00 00 00 fd e8 ff ff ff ff ff : ff ff fa ff f4 ff ff ff 04 20 00 00 00 00 00 00  ......................... ......
    0080  00 08 00 10 00 00 00 fc e0 ff ff ff ff ff ff ff : f8 ff f0 ff ff ff 05 28 00 00 00 00 00 00 00 0a  .......................(........
    00a0  00 14 00 00 00 fb d8 ff ff ff ff ff ff ff f6 ff : ec ff ff ff 06 30 00 00 00 00 00 00 00 0c 00 18  .....................0..........
    00c0  00 00 00 fa d0 ff ff ff ff ff ff ff f4 ff e8 ff : ff ff 07 38 00 00 00 00 00 00 00 0e 00 1c 00 00  ...................8............
    00e0  00 f9 c8 ff ff ff ff ff ff ff f2 ff e4 ff ff ff : 08 40 00 00 00 00 00 00 00 10 00 20 00 00 00 f8  .................@......... ....
    0100  c0 ff ff ff ff ff ff ff f0 ff e0 ff ff ff 09 48 : 00 00 00 00 00 00 00 12 00 24 00 00 00 f7 b8 ff  ...............H.........$......
    0120  ff ff ff ff ff ff ee ff dc ff ff ff 0a 50 00 00 : 00 00 00 00 00 14 00 28 00 00 00 f6 b0 ff ff ff  .............P.........(........
    0140  ff ff ff ff ec ff d8 ff ff ff 0b 58 00 00 00 00 : 00 00 00 16 00 2c 00 00 00 f5 a8 ff ff ff ff ff  ...........X.........,..........
    0160  ff ff ea ff d4 ff ff ff 0c 60 00 00 00 00 00 00 : 00 18 00 30 00 00 00 f4 a0 ff ff ff ff ff ff ff  .........`.........0............
    0180  e8 ff d0 ff ff ff 0d 68 00 00 00 00 00 00 00 1a : 00 34 00 00 00 f3 98 ff ff ff ff ff ff ff e6 ff  .......h.........4..............
    01a0  cc ff ff ff 0e 70 00 00 00 00 00 00 00 1c 00 38 : 00 00 00 f2 90 ff ff ff ff ff ff ff e4 ff c8 ff  .....p.........8................
    01c0  ff ff 0f 78 00 00 00 00 00 00 00 1e 00 3c 00 00 : 00 f1 88 ff ff ff ff ff ff ff e2 ff c4 ff ff ff  ...x.........<..................
    01e0  10 80 00 00 00 00 00 00 00 20 00 40 00 00 00 f0 : 80 ff ff ff ff ff ff ff e0 ff c0 ff ff ff 11 88  ......... .@....................
    0200  00 00 00 00 00 00 00 22 00 44 00 00 00 ef 78 ff : ff ff ff ff ff ff de ff bc ff ff ff 12 90 00 00  .......".D....x.................
    0220  00 00 00 00 00 24 00 48 00 00 00 ee 70 ff ff ff : ff ff ff ff dc ff b8 ff ff ff 13 98 00 00 00 00  .....$.H....p...................
    0240  00 00 00 26 00 4c 00 00 00 ed 68 ff ff ff ff ff : ff ff da ff b4 ff ff ff                          ...&.L....h.............
tarray completed with great success
test c_tests\bin2\tbits 
uint8_t:
  and 3, or 7, xor 4, nota f8, notb fc
  and 5, or ff, xor fa, nota f8, notb 2
  and 1, or fb, xor fa, nota 6, notb fc
  and f9, or fd, xor 4, nota 6, notb 2
  and ff, or ff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota 8, notb fc
  and f5, or ff, xor a, nota 8, notb 2
  and 1, or b, xor a, nota f6, notb fc
  and 9, or 9, xor 0, nota f6, notb f6
int8_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or fffffffffffffff7, xor fffffffffffffff4, nota 8, notb fffffffffffffffc
  and fffffffffffffff5, or ffffffffffffffff, xor a, nota 8, notb 2
  and 1, or b, xor a, nota fffffffffffffff6, notb fffffffffffffffc
  and 9, or 9, xor 0, nota fffffffffffffff6, notb fffffffffffffff6
uint16_t:
  and 3, or 7, xor 4, nota fff8, notb fffc
  and 5, or ffff, xor fffa, nota fff8, notb 2
  and 1, or fffb, xor fffa, nota 6, notb fffc
  and fff9, or fffd, xor 4, nota 6, notb 2
  and ffff, or ffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ff08, notb fffc
  and f5, or ffff, xor ff0a, nota ff08, notb 2
  and 1, or ff0b, xor ff0a, nota f6, notb fffc
  and ff09, or ff09, xor 0, nota f6, notb f6
int16_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
uint32_t:
  and 3, or 7, xor 4, nota fffffff8, notb fffffffc
  and 5, or ffffffff, xor fffffffa, nota fffffff8, notb 2
  and 1, or fffffffb, xor fffffffa, nota 6, notb fffffffc
  and fffffff9, or fffffffd, xor 4, nota 6, notb 2
  and ffffffff, or ffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffff08, notb fffffffc
  and f5, or ffffffff, xor ffffff0a, nota ffffff08, notb 2
  and 1, or ffffff0b, xor ffffff0a, nota f6, notb fffffffc
  and ffffff09, or ffffff09, xor 0, nota f6, notb f6
int32_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
uint64_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
int64_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
test c_tests\bin2\trw 
trw completed with great success
test c_tests\bin2\tmmap 
MAP_PRIVATE: 0x2
MAP_ANONYMOUS: 0x20
MREMAP_MAYMOVE: 0x1
PROT_READ: 0x1
PROT_WRITE: 0x2
mmap test completed with great success
test c_tests\bin2\tstr 
testing strlen
testing strchr and strrchr
testing strstr
testing memcpy and memcmp
testing printf
34 (34): stuvwxyzabcdefghijklmnopqrstuvwxyz
13 (13): efghijklmnopq
 3 ( 3): hij
50 (50): pqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklm
23 (23): yzabcdefghijklmnopqrstu
16 (16): yzabcdefghijklmn
21 (21): efghijklmnopqrstuvwxy
17 (17): lmnopqrstuvwxyzab
56 (56): zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabc
24 (24): xyzabcdefghijklmnopqrstu
55 (55): xyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
58 (58): pqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstu
18 (18): nopqrstuvwxyzabcde
22 (22): tuvwxyzabcdefghijklmno
49 (49): stuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmno
42 (42): defghijklmnopqrstuvwxyzabcdefghijklmnopqrs
62 (62): rstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyza
11 (11): xyzabcdefgh
45 (45): ijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyza
11 (11): rstuvwxyzab
testing wcslen
testing wcschr and wcsrchr
testing wcsstr
tstr completed with great success
test c_tests\bin2\fileops 
current offset: 0
result of fseek: 0
file length from ftell: 0
empty file length: 0
result of fseek: 0
result of fwrite (should be 1): 1
current offset: 8320
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length from portable_filelen: 8320
result of fseek to middle of file: 0
result of fwrite to middle of file (should be 1): 1
current offset: 0
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length: 8320
result of read at offset 0: 512
result of read at offset 512: 512
result of read at offset 1024: 512
result of read at offset 1536: 512
result of read at offset 2048: 512
result of read at offset 2560: 512
result of read at offset 3072: 512
result of read at offset 3584: 512
result of read at offset 4096: 512
result of read at offset 4608: 512
result of read at offset 5120: 512
result of read at offset 5632: 512
result of read at offset 6144: 512
result of read at offset 6656: 512
result of read at offset 7168: 512
result of read at offset 7680: 512
result of read at offset 8192: 128
testing backwards read
result of read at offset 8192: 128
result of read at offset 7680: 512
result of read at offset 7168: 512
result of read at offset 6656: 512
result of read at offset 6144: 512
result of read at offset 5632: 512
result of read at offset 5120: 512
result of read at offset 4608: 512
result of read at offset 4096: 512
result of read at offset 3584: 512
result of read at offset 3072: 512
result of read at offset 2560: 512
result of read at offset 2048: 512
result of read at offset 1536: 512
result of read at offset 1024: 512
result of read at offset 512: 512
result of read at offset 0: 512
fileops has completed with great success
test c_tests\bin2\ttime 
before TZ is set: tz: 'PacificStandardTime+8', year: 2025, month 2, day 27, hour 14, min 45, sec 1
east coast time: set tz 'TZ=EST+5' tz: 'EST+5', year: 2025, month 2, day 27, hour 17, min 45, sec 1
west coast time: set tz 'TZ=PST+8' tz: 'PST+8', year: 2025, month 2, day 27, hour 14, min 45, sec 1
TZ=<blank>: set tz 'TZ=' tz: '', year: 2025, month 2, day 27, hour 22, min 45, sec 1
test c_tests\bin2\tm 
tm has completed with great success
test c_tests\bin2\glob 
in CTest constructor
top main
value of ctest::foo: 666
end of main
in ~CTest destructor
test c_tests\bin2\tap 
starting, should tend towards 1.2020569031595942854...
  at           10 iterations: 1.19753198567419305576
  at          100 iterations: 1.20200740065967814907
  at         1000 iterations: 1.20205640365934329772
  at        10000 iterations: 1.20205689816009808624
  at       100000 iterations: 1.20205690310973234425
next implementation...
  at           10 iterations: 1.25000000000000000000
  at          100 iterations: 1.14942528735632176762
  at         1000 iterations: 1.21802679658952506259
  at        10000 iterations: 1.20293516179477921746
tap completed with great success
test c_tests\bin2\tsimplef 
float 3.141593
f1 2.500000 * f2 3.500000 = 8.750000
    div = 0.714286
    add = 6.000000
    sub = -1.000000
d1 9.720000 * d2 13.321000 = 129.480120
    div = 0.729675
    add = 23.041000
    sub = -3.601000
double from int128: 1000.000000
tsimplef completed with great success
test c_tests\bin2\tf 
float converted by floattoa: -1.23456699
float converted by floattoa: 1.23456699
float converted by floattoa: 34.56700000
float from printf: 45.678000
division result: 333.333344, square root 18.257420
float converted with floattoa: -27.108400
result of 20.2 * -1.342: -27.108400
result of 20.2 * -1.342 as a double: -27.108400
pi in radians: 0.523599
sinf of 30 degress is 0.500000
cosf of 30 degrees is 0.866025
tanf of 30 degrees is 0.577350
atanf of 1.000000 is 0.785398
atan2f of 0.3, 0.2 is 0.982794
acosf of 0.3 is 1.266104
asinf of 0.3 is 0.304693
tanhf of 2.2 is 0.304693
logf of 0.3: -1.203973
log10f of 300: 2.477121
pi has mantissa: 0.785398, exponent 2
l,le,l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,g,ge,
test tf completed with great success
test c_tests\bin2\td 
sprintf double 3.14159265358979311600
double from printf: 3.14159265358979311600
float from printf: 1.202057
double from printf r: -3.776373
sqrt of pi: 1.772454
pi in radians: 0.523599
sin of 30 degress is 0.500000
cos of 30 degrees is 0.866025
tan of 30 degrees is 0.577350
atan of 1.000000 is 0.785398
atan2 of 0.3, 0.2 is 0.982794
acos of 0.3 is 1.266104
asin of 0.3 is 0.304693
tanh of 2.2 is 0.304693
log of 0.3: -1.203973
log10 of 300: 2.477121
l,le,l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,
pi has mantissa: 0.785398, exponent 2
r should be 1.0: 1.000000
  r high point 3187071009115104228782838925952666189789578010509155762176.000000
stop
test c_tests\bin2\terrno 
errno opening a file for read that doesn't exist: 2 (2 file not found expected)
errno doing write to stdin file descriptor: 13. (13 permission denied expected)
errno opening a file for read with invalid open flags: 22 (22 invalid argument expected)
success
test c_tests\bin2\t_setjmp 
second
back in main
falling out of main
test c_tests\bin2\tex 
top of tex
I am unwound, x should be 44: 44
caught exception exceptional
attempting large allocations
caught a standard execption: std::bad_alloc
leaving main
test c_tests\bin2\mm 
float dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
float dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
float dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
float dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
float dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
float dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
float dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
float dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
float dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
float dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
float dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
float dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
float dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
float dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
float dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
float dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
float dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
float dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
float dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
float dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
double dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
double dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
double dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
double dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
double dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
double dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
double dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
double dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
double dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
double dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
double dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
double dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
double dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
double dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
double dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
double dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
double dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
double dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
double dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
double dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
ldouble_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
ldouble_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
ldouble_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
ldouble_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
ldouble_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
ldouble_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
ldouble_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
ldouble_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
ldouble_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
ldouble_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
ldouble_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
ldouble_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
ldouble_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
ldouble_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
ldouble_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
ldouble_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
ldouble_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
ldouble_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
ldouble_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
ldouble_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
int8_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int8_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int8_t dim 3: sum -28.0, mag -28.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int8_t dim 4: sum -62.0, mag -62.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum -94.0, sqrtsum 95.0
int8_t dim 5: sum -117.0, mag 7.0, min, -126.0 max 110.0, fmodsum 22.000, dotsum 47.0, sqrtsum -74.0
int8_t dim 6: sum -83.0, mag -31.0, min, -119.0 max 122.0, fmodsum 31.000, dotsum 10.0, sqrtsum 21.0
int8_t dim 7: sum 40.0, mag -66.0, min, -128.0 max 127.0, fmodsum 30.000, dotsum 47.0, sqrtsum -108.0
int8_t dim 8: sum 52.0, mag 34.0, min, -126.0 max 124.0, fmodsum 8.000, dotsum -65.0, sqrtsum 34.0
int8_t dim 9: sum -127.0, mag -7.0, min, -128.0 max 127.0, fmodsum -14.000, dotsum -67.0, sqrtsum -116.0
int8_t dim 10: sum -37.0, mag -83.0, min, -125.0 max 127.0, fmodsum -26.000, dotsum 68.0, sqrtsum 4.0
int8_t dim 11: sum -108.0, mag 108.0, min, -128.0 max 127.0, fmodsum -29.000, dotsum 70.0, sqrtsum 89.0
int8_t dim 12: sum -126.0, mag 78.0, min, -127.0 max 126.0, fmodsum -35.000, dotsum 13.0, sqrtsum -37.0
int8_t dim 13: sum -69.0, mag -43.0, min, -127.0 max 126.0, fmodsum 8.000, dotsum 105.0, sqrtsum -124.0
int8_t dim 14: sum 119.0, mag 33.0, min, -125.0 max 127.0, fmodsum -17.000, dotsum -118.0, sqrtsum 71.0
int8_t dim 15: sum -78.0, mag -64.0, min, -128.0 max 127.0, fmodsum -16.000, dotsum 126.0, sqrtsum 16.0
int8_t dim 16: sum 64.0, mag 72.0, min, -128.0 max 127.0, fmodsum -42.000, dotsum 106.0, sqrtsum -14.0
int8_t dim 17: sum 20.0, mag 102.0, min, -126.0 max 127.0, fmodsum 16.000, dotsum 30.0, sqrtsum -6.0
int8_t dim 18: sum -62.0, mag -90.0, min, -128.0 max 127.0, fmodsum -12.000, dotsum 1.0, sqrtsum -25.0
int8_t dim 19: sum 14.0, mag 32.0, min, -128.0 max 127.0, fmodsum 13.000, dotsum -58.0, sqrtsum -64.0
int8_t dim 20: sum -40.0, mag 12.0, min, -128.0 max 127.0, fmodsum -15.000, dotsum -35.0, sqrtsum 55.0
uint8_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint8_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint8_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint8_t dim 4: sum 194.0, mag 194.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint8_t dim 5: sum 139.0, mag 139.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 47.0, sqrtsum 188.0
uint8_t dim 6: sum 173.0, mag 173.0, min, 18.0 max 247.0, fmodsum 45.000, dotsum 10.0, sqrtsum 54.0
uint8_t dim 7: sum 40.0, mag 40.0, min, 17.0 max 238.0, fmodsum 58.000, dotsum 47.0, sqrtsum 212.0
uint8_t dim 8: sum 52.0, mag 52.0, min, 18.0 max 250.0, fmodsum 70.000, dotsum 191.0, sqrtsum 146.0
uint8_t dim 9: sum 129.0, mag 129.0, min, 6.0 max 254.0, fmodsum 99.000, dotsum 189.0, sqrtsum 118.0
uint8_t dim 10: sum 219.0, mag 219.0, min, 1.0 max 253.0, fmodsum 113.000, dotsum 68.0, sqrtsum 64.0
uint8_t dim 11: sum 148.0, mag 148.0, min, 0.0 max 255.0, fmodsum 144.000, dotsum 70.0, sqrtsum 57.0
uint8_t dim 12: sum 130.0, mag 130.0, min, 1.0 max 255.0, fmodsum 144.000, dotsum 13.0, sqrtsum 246.0
uint8_t dim 13: sum 187.0, mag 187.0, min, 0.0 max 255.0, fmodsum 203.000, dotsum 105.0, sqrtsum 188.0
uint8_t dim 14: sum 119.0, mag 119.0, min, 1.0 max 254.0, fmodsum 196.000, dotsum 138.0, sqrtsum 185.0
uint8_t dim 15: sum 178.0, mag 178.0, min, 0.0 max 255.0, fmodsum 231.000, dotsum 126.0, sqrtsum 254.0
uint8_t dim 16: sum 64.0, mag 64.0, min, 0.0 max 254.0, fmodsum 8.000, dotsum 106.0, sqrtsum 27.0
uint8_t dim 17: sum 20.0, mag 20.0, min, 0.0 max 255.0, fmodsum 73.000, dotsum 30.0, sqrtsum 76.0
uint8_t dim 18: sum 194.0, mag 194.0, min, 0.0 max 251.0, fmodsum 100.000, dotsum 1.0, sqrtsum 161.0
uint8_t dim 19: sum 14.0, mag 14.0, min, 0.0 max 254.0, fmodsum 156.000, dotsum 198.0, sqrtsum 254.0
uint8_t dim 20: sum 216.0, mag 216.0, min, 0.0 max 255.0, fmodsum 189.000, dotsum 221.0, sqrtsum 230.0
int16_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int16_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int16_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int16_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int16_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int16_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int16_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int16_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int16_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int16_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int16_t dim 11: sum -25452.0, mag -25452.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int16_t dim 12: sum -8062.0, mag -8062.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int16_t dim 13: sum 14011.0, mag 14011.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int16_t dim 14: sum -23433.0, mag -23433.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int16_t dim 15: sum 11698.0, mag 11698.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int16_t dim 16: sum -10176.0, mag -10176.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int16_t dim 17: sum -23532.0, mag -23532.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int16_t dim 18: sum -25406.0, mag -25406.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int16_t dim 19: sum -16370.0, mag -16370.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int16_t dim 20: sum 7128.0, mag 7128.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint16_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint16_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint16_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint16_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint16_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint16_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint16_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint16_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint16_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint16_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint16_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint16_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint16_t dim 13: sum 14011.0, mag 14011.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint16_t dim 14: sum 42103.0, mag 42103.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint16_t dim 15: sum 11698.0, mag 11698.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint16_t dim 16: sum 55360.0, mag 55360.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint16_t dim 17: sum 42004.0, mag 42004.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint16_t dim 18: sum 40130.0, mag 40130.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint16_t dim 19: sum 49166.0, mag 49166.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint16_t dim 20: sum 7128.0, mag 7128.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
int32_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int32_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int32_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int32_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int32_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int32_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int32_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int32_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int32_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int32_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int32_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int32_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int32_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int32_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int32_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int32_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int32_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int32_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int32_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int32_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint32_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint32_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint32_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint32_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint32_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint32_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint32_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint32_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint32_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint32_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint32_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint32_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint32_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint32_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint32_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint32_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint32_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint32_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint32_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint32_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
int64_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int64_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int64_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int64_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int64_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int64_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int64_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int64_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int64_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int64_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int64_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int64_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int64_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int64_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int64_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int64_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int64_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int64_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int64_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int64_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint64_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint64_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint64_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint64_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint64_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint64_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint64_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint64_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint64_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint64_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint64_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint64_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint64_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint64_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint64_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint64_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint64_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint64_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint64_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint64_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
matrix multiply test completed with great success
test c_tests\bin2\pis 
startingOffset128: 0, startingOffset: 0, countGenerated128 1, countGenerated 128
startInChunks: 0, limitInChunks 4
percent complete: 25.000000
percent complete: 50.000000
percent complete: 75.000000
percent complete: 100.000000
results are valid
final: 243f6a8885a308d313198a2e03707344a4093822299f31d0082efa98ec4e6c89452821e638d01377be5466cf34e90c6cc0ac29b7c97c50dd3f84d5b5b5470917
test c_tests\bin2\sleeptm 
clk_tck / number of linux ticks per second: 100
sleepy time ended with great success
test c_tests\bin2\tatomic 
test atomic completed with great success
test c_tests\bin2\lenum 
linux file system enumeration completed with great success
test c_tests\bin2\tregex 
regex test completed with great success
test c_tests\bin2\an 
a delve id
a delved i
a die veld
a dive led
a dived le
a led vied
add ive le
add le vie
addle ive
addle vie
aid delve
aide veld
ale dived
ave did le
ave id led
ave idled
dad ive le
dad le vie
dale dive
dale vied
david eel
david lee
dead evil
dead levi
dead live
dead veil
dead vile
deal dive
deal vied
dee valid
deed vial
did leave
died vale
died veal
dive lade
dive lead
dived lea
evade lid
eve id lad
id leaved
idea veld
lade vied
lead vied
test c_tests\bin2\ba 
parsing input file tp.bas
167 ms for 1 iterations
final move count 6493
exiting the basic interpreter
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
test c_tests\bin3\tcmp 
uint8_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int8_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint16_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int16_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint32_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int32_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint64_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int64_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint128_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int128_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
floating point:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
test c_tests\bin3\t 
a: 0 4000000000000000
a: 4 0
ua: 0 4000000000000000
ua: 4 0
a: ffffffffffffffff ffffffffffffffff
a: ffffffffffffffff ffffffffffffffdf = -33
int8_t result: 6
uint8_t result: 6
int16_t result: 6
uint16_t result: 6
int32_t result: 6
uint32_t result: 6
int64_t result: 6
uint64_t result: 6
int128_t result: 6
uint128_t result: 6
end of the app
test c_tests\bin3\e 
271828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319
done
test c_tests\bin3\printint 
n -13
test c_tests\bin3\sieve 
1899 primes.
test c_tests\bin3\simple 
argument 0: c_tests/bin3/simple
environment variable 0: TZ=PacificStandardTime+8
environment variable 1: OS=RVOS
test c_tests\bin3\tmuldiv 
app start
i8 3 * 14: 42
i8 3 % 14: 3
i8 3 / 14: 0
i8 17 * 14: -18
i8 17 % 14: 3
i8 17 / 14: 1
i8 -3 * 14: -42
i8 -3 % 14: -3
i8 -3 / 14: 0
i8 -17 * 14: 18
i8 -17 % 14: -3
i8 -17 / 14: -1
i8 -3 * -14: 42
i8 -3 % -14: -3
i8 -3 / -14: 0
i8 -17 * -14: -18
i8 -17 % -14: -3
i8 -17 / -14: 1
ui8 3 * 14: 42
ui8 3 % 14: 3
ui8 3 / 14: 0
ui8 17 * 14: 238
ui8 17 % 14: 3
ui8 17 / 14: 1
ui8 253 * 14: 214
ui8 253 % 14: 1
ui8 253 / 14: 18
ui8 239 * 14: 18
ui8 239 % 14: 1
ui8 239 / 14: 17
ui8 253 * 242: 42
ui8 253 % 242: 11
ui8 253 / 242: 1
ui8 239 * 242: 238
ui8 239 % 242: 239
ui8 239 / 242: 0
i16 3 * 14: 42
i16 3 % 14: 3
i16 3 / 14: 0
i16 3700 * 14: -13736
i16 3700 % 14: 4
i16 3700 / 14: 264
i16 -3 * 14: -42
i16 -3 % 14: -3
i16 -3 / 14: 0
i16 -3700 * 14: 13736
i16 -3700 % 14: -4
i16 -3700 / 14: -264
i16 -3 * -14: 42
i16 -3 % -14: -3
i16 -3 / -14: 0
i16 -3700 * -14: -13736
i16 -3700 % -14: -4
i16 -3700 / -14: 264
ui16 3 * 14: 42
ui16 3 % 14: 3
ui16 3 / 14: 0
ui16 3700 * 14: 51800
ui16 3700 % 14: 4
ui16 3700 / 14: 264
ui16 65533 * 14: 65494
ui16 65533 % 14: 13
ui16 65533 / 14: 4680
ui16 61836 * 14: 13736
ui16 61836 % 14: 12
ui16 61836 / 14: 4416
ui16 65533 * 65522: 42
ui16 65533 % 65522: 11
ui16 65533 / 65522: 1
ui16 61836 * 65522: 51800
ui16 61836 % 65522: 61836
ui16 61836 / 65522: 0
i32 3 * 14: 42
i32 3 % 14: 3
i32 3 / 14: 0
i32 37000 * 14: 518000
i32 37000 % 14: 12
i32 37000 / 14: 2642
i32 -3 * 14: -42
i32 -3 % 14: -3
i32 -3 / 14: 0
i32 -37000 * 14: -518000
i32 -37000 % 14: -12
i32 -37000 / 14: -2642
i32 -3 * -14: 42
i32 -3 % -14: -3
i32 -3 / -14: 0
i32 -37000 * -14: 518000
i32 -37000 % -14: -12
i32 -37000 / -14: 2642
ui32 3 * 14: 42
ui32 3 % 14: 3
ui32 3 / 14: 0
ui32 37000 * 14: 518000
ui32 37000 % 14: 12
ui32 37000 / 14: 2642
ui32 4294967293 * 14: 4294967254
ui32 4294967293 % 14: 1
ui32 4294967293 / 14: 306783378
ui32 4294930296 * 14: 4294449296
ui32 4294930296 % 14: 6
ui32 4294930296 / 14: 306780735
ui32 4294967293 * 4294967282: 42
ui32 4294967293 % 4294967282: 11
ui32 4294967293 / 4294967282: 1
ui32 4294930296 * 4294967282: 518000
ui32 4294930296 % 4294967282: 4294930296
ui32 4294930296 / 4294967282: 0
i64 3 * 14: 42
i64 3 % 14: 3
i64 3 / 14: 0
i64 370000000 * 14: 5180000000
i64 370000000 % 14: 6
i64 370000000 / 14: 26428571
i64 -3 * 14: -42
i64 -3 % 14: -3
i64 -3 / 14: 0
i64 -370000000 * 14: -5180000000
i64 -370000000 % 14: -6
i64 -370000000 / 14: -26428571
i64 -3 * -14: 42
i64 -3 % -14: -3
i64 -3 / -14: 0
i64 -370000000 * -14: 5180000000
i64 -370000000 % -14: -6
i64 -370000000 / -14: 26428571
ui64 3 * 14: 42
ui64 3 % 14: 3
ui64 3 / 14: 0
ui64 370000000 * 14: 5180000000
ui64 370000000 % 14: 6
ui64 370000000 / 14: 26428571
ui64 18446744073709551613 * 14: 18446744073709551574
ui64 18446744073709551613 % 14: 13
ui64 18446744073709551613 / 14: 1317624576693539400
ui64 18446744073339551616 * 14: 18446744068529551616
ui64 18446744073339551616 % 14: 10
ui64 18446744073339551616 / 14: 1317624576667110829
ui64 18446744073709551613 * 18446744073709551602: 42
ui64 18446744073709551613 % 18446744073709551602: 11
ui64 18446744073709551613 / 18446744073709551602: 1
ui64 18446744073339551616 * 18446744073709551602: 5180000000
ui64 18446744073339551616 % 18446744073709551602: 18446744073339551616
ui64 18446744073339551616 / 18446744073709551602: 0
tmuldiv ended with great success
test c_tests\bin3\tpi 
314159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535
test c_tests\bin3\ts 
top of app
print an int 27
print an int64_t 27
sizeof T: 1, result: ff
sizeof T: 1, result: 7f
sizeof T: 2, result: ffff
sizeof T: 2, result: 7fff
sizeof T: 4, result: ffffffff
sizeof T: 4, result: 7fffffff
sizeof T: 8, result: ffffffffffffffff
sizeof T: 8, result: 7fffffffffffffff
now test left shifts
sizeof T: 1, result: fe
sizeof T: 1, result: fe
sizeof T: 2, result: fffe
sizeof T: 2, result: fffe
sizeof T: 4, result: fffffffe
sizeof T: 4, result: fffffffe
sizeof T: 8, result: fffffffffffffffe
sizeof T: 8, result: fffffffffffffffe
now test comparisons
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
testing printf
  string: 'hello'
  char: 'h'
  int: 27, 1b
  negative int: -27, ffffffe5
  int64_t: 27, 1b
  negative int64_t: -27, ffffffffffffffe5
stop
test c_tests\bin3\ttt 
starting...
done
64930 moves
test c_tests\bin3\tarray 
sum: 0xf8
sum: 0xf8
sum: 0xfff8
sum: 0xfff8
sum: 0xfffffff8
sum: 0xfffffff8
sum: 0xfffffffffffffff8
sum: 0xfffffffffffffff8
sum: 0xf8
sum: 0xf8
sum: 0xfff8
sum: 0xfff8
sum: 0xfffffff8
sum: 0xfffffff8
sum: 0xfffffffffffffff8
sum: 0xfffffffffffffff8
sum: 0xfff8
sum: 0xfff8
sum: 0xf8
sum: 0xf8
    0000  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 08  ................................
    0020  00 00 00 00 00 00 00 02 00 04 00 00 00 ff f8 ff : ff ff ff ff ff ff fe ff fc ff ff ff 02 10 00 00  ................................
    0040  00 00 00 00 00 04 00 08 00 00 00 fe f0 ff ff ff : ff ff ff ff fc ff f8 ff ff ff 03 18 00 00 00 00  ................................
    0060  00 00 00 06 00 0c 00 00 00 fd e8 ff ff ff ff ff : ff ff fa ff f4 ff ff ff 04 20 00 00 00 00 00 00  ......................... ......
    0080  00 08 00 10 00 00 00 fc e0 ff ff ff ff ff ff ff : f8 ff f0 ff ff ff 05 28 00 00 00 00 00 00 00 0a  .......................(........
    00a0  00 14 00 00 00 fb d8 ff ff ff ff ff ff ff f6 ff : ec ff ff ff 06 30 00 00 00 00 00 00 00 0c 00 18  .....................0..........
    00c0  00 00 00 fa d0 ff ff ff ff ff ff ff f4 ff e8 ff : ff ff 07 38 00 00 00 00 00 00 00 0e 00 1c 00 00  ...................8............
    00e0  00 f9 c8 ff ff ff ff ff ff ff f2 ff e4 ff ff ff : 08 40 00 00 00 00 00 00 00 10 00 20 00 00 00 f8  .................@......... ....
    0100  c0 ff ff ff ff ff ff ff f0 ff e0 ff ff ff 09 48 : 00 00 00 00 00 00 00 12 00 24 00 00 00 f7 b8 ff  ...............H.........$......
    0120  ff ff ff ff ff ff ee ff dc ff ff ff 0a 50 00 00 : 00 00 00 00 00 14 00 28 00 00 00 f6 b0 ff ff ff  .............P.........(........
    0140  ff ff ff ff ec ff d8 ff ff ff 0b 58 00 00 00 00 : 00 00 00 16 00 2c 00 00 00 f5 a8 ff ff ff ff ff  ...........X.........,..........
    0160  ff ff ea ff d4 ff ff ff 0c 60 00 00 00 00 00 00 : 00 18 00 30 00 00 00 f4 a0 ff ff ff ff ff ff ff  .........`.........0............
    0180  e8 ff d0 ff ff ff 0d 68 00 00 00 00 00 00 00 1a : 00 34 00 00 00 f3 98 ff ff ff ff ff ff ff e6 ff  .......h.........4..............
    01a0  cc ff ff ff 0e 70 00 00 00 00 00 00 00 1c 00 38 : 00 00 00 f2 90 ff ff ff ff ff ff ff e4 ff c8 ff  .....p.........8................
    01c0  ff ff 0f 78 00 00 00 00 00 00 00 1e 00 3c 00 00 : 00 f1 88 ff ff ff ff ff ff ff e2 ff c4 ff ff ff  ...x.........<..................
    01e0  10 80 00 00 00 00 00 00 00 20 00 40 00 00 00 f0 : 80 ff ff ff ff ff ff ff e0 ff c0 ff ff ff 11 88  ......... .@....................
    0200  00 00 00 00 00 00 00 22 00 44 00 00 00 ef 78 ff : ff ff ff ff ff ff de ff bc ff ff ff 12 90 00 00  .......".D....x.................
    0220  00 00 00 00 00 24 00 48 00 00 00 ee 70 ff ff ff : ff ff ff ff dc ff b8 ff ff ff 13 98 00 00 00 00  .....$.H....p...................
    0240  00 00 00 26 00 4c 00 00 00 ed 68 ff ff ff ff ff : ff ff da ff b4 ff ff ff                          ...&.L....h.............
tarray completed with great success
test c_tests\bin3\tbits 
uint8_t:
  and 3, or 7, xor 4, nota f8, notb fc
  and 5, or ff, xor fa, nota f8, notb 2
  and 1, or fb, xor fa, nota 6, notb fc
  and f9, or fd, xor 4, nota 6, notb 2
  and ff, or ff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota 8, notb fc
  and f5, or ff, xor a, nota 8, notb 2
  and 1, or b, xor a, nota f6, notb fc
  and 9, or 9, xor 0, nota f6, notb f6
int8_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or fffffffffffffff7, xor fffffffffffffff4, nota 8, notb fffffffffffffffc
  and fffffffffffffff5, or ffffffffffffffff, xor a, nota 8, notb 2
  and 1, or b, xor a, nota fffffffffffffff6, notb fffffffffffffffc
  and 9, or 9, xor 0, nota fffffffffffffff6, notb fffffffffffffff6
uint16_t:
  and 3, or 7, xor 4, nota fff8, notb fffc
  and 5, or ffff, xor fffa, nota fff8, notb 2
  and 1, or fffb, xor fffa, nota 6, notb fffc
  and fff9, or fffd, xor 4, nota 6, notb 2
  and ffff, or ffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ff08, notb fffc
  and f5, or ffff, xor ff0a, nota ff08, notb 2
  and 1, or ff0b, xor ff0a, nota f6, notb fffc
  and ff09, or ff09, xor 0, nota f6, notb f6
int16_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
uint32_t:
  and 3, or 7, xor 4, nota fffffff8, notb fffffffc
  and 5, or ffffffff, xor fffffffa, nota fffffff8, notb 2
  and 1, or fffffffb, xor fffffffa, nota 6, notb fffffffc
  and fffffff9, or fffffffd, xor 4, nota 6, notb 2
  and ffffffff, or ffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffff08, notb fffffffc
  and f5, or ffffffff, xor ffffff0a, nota ffffff08, notb 2
  and 1, or ffffff0b, xor ffffff0a, nota f6, notb fffffffc
  and ffffff09, or ffffff09, xor 0, nota f6, notb f6
int32_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
uint64_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
int64_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
test c_tests\bin3\trw 
trw completed with great success
test c_tests\bin3\tmmap 
MAP_PRIVATE: 0x2
MAP_ANONYMOUS: 0x20
MREMAP_MAYMOVE: 0x1
PROT_READ: 0x1
PROT_WRITE: 0x2
mmap test completed with great success
test c_tests\bin3\tstr 
testing strlen
testing strchr and strrchr
testing strstr
testing memcpy and memcmp
testing printf
34 (34): stuvwxyzabcdefghijklmnopqrstuvwxyz
13 (13): efghijklmnopq
 3 ( 3): hij
50 (50): pqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklm
23 (23): yzabcdefghijklmnopqrstu
16 (16): yzabcdefghijklmn
21 (21): efghijklmnopqrstuvwxy
17 (17): lmnopqrstuvwxyzab
56 (56): zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabc
24 (24): xyzabcdefghijklmnopqrstu
55 (55): xyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
58 (58): pqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstu
18 (18): nopqrstuvwxyzabcde
22 (22): tuvwxyzabcdefghijklmno
49 (49): stuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmno
42 (42): defghijklmnopqrstuvwxyzabcdefghijklmnopqrs
62 (62): rstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyza
11 (11): xyzabcdefgh
45 (45): ijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyza
11 (11): rstuvwxyzab
testing wcslen
testing wcschr and wcsrchr
testing wcsstr
tstr completed with great success
test c_tests\bin3\fileops 
current offset: 0
result of fseek: 0
file length from ftell: 0
empty file length: 0
result of fseek: 0
result of fwrite (should be 1): 1
current offset: 8320
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length from portable_filelen: 8320
result of fseek to middle of file: 0
result of fwrite to middle of file (should be 1): 1
current offset: 0
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length: 8320
result of read at offset 0: 512
result of read at offset 512: 512
result of read at offset 1024: 512
result of read at offset 1536: 512
result of read at offset 2048: 512
result of read at offset 2560: 512
result of read at offset 3072: 512
result of read at offset 3584: 512
result of read at offset 4096: 512
result of read at offset 4608: 512
result of read at offset 5120: 512
result of read at offset 5632: 512
result of read at offset 6144: 512
result of read at offset 6656: 512
result of read at offset 7168: 512
result of read at offset 7680: 512
result of read at offset 8192: 128
testing backwards read
result of read at offset 8192: 128
result of read at offset 7680: 512
result of read at offset 7168: 512
result of read at offset 6656: 512
result of read at offset 6144: 512
result of read at offset 5632: 512
result of read at offset 5120: 512
result of read at offset 4608: 512
result of read at offset 4096: 512
result of read at offset 3584: 512
result of read at offset 3072: 512
result of read at offset 2560: 512
result of read at offset 2048: 512
result of read at offset 1536: 512
result of read at offset 1024: 512
result of read at offset 512: 512
result of read at offset 0: 512
fileops has completed with great success
test c_tests\bin3\ttime 
before TZ is set: tz: 'PacificStandardTime+8', year: 2025, month 2, day 27, hour 14, min 45, sec 8
east coast time: set tz 'TZ=EST+5' tz: 'EST+5', year: 2025, month 2, day 27, hour 17, min 45, sec 8
west coast time: set tz 'TZ=PST+8' tz: 'PST+8', year: 2025, month 2, day 27, hour 14, min 45, sec 8
TZ=<blank>: set tz 'TZ=' tz: '', year: 2025, month 2, day 27, hour 22, min 45, sec 8
test c_tests\bin3\tm 
tm has completed with great success
test c_tests\bin3\glob 
in CTest constructor
top main
value of ctest::foo: 666
end of main
in ~CTest destructor
test c_tests\bin3\tap 
starting, should tend towards 1.2020569031595942854...
  at           10 iterations: 1.19753198567419305576
  at          100 iterations: 1.20200740065967814907
  at         1000 iterations: 1.20205640365934329772
  at        10000 iterations: 1.20205689816009808624
  at       100000 iterations: 1.20205690310973234425
next implementation...
  at           10 iterations: 1.25000000000000000000
  at          100 iterations: 1.14942528735632176762
  at         1000 iterations: 1.21802679658952506259
  at        10000 iterations: 1.20293516179477921746
tap completed with great success
test c_tests\bin3\tsimplef 
float 3.141593
f1 2.500000 * f2 3.500000 = 8.750000
    div = 0.714286
    add = 6.000000
    sub = -1.000000
d1 9.720000 * d2 13.321000 = 129.480120
    div = 0.729675
    add = 23.041000
    sub = -3.601000
double from int128: 1000.000000
tsimplef completed with great success
test c_tests\bin3\tf 
float converted by floattoa: -1.23456699
float converted by floattoa: 1.23456699
float converted by floattoa: 34.56700000
float from printf: 45.678000
division result: 333.333344, square root 18.257420
float converted with floattoa: -27.108400
result of 20.2 * -1.342: -27.108400
result of 20.2 * -1.342 as a double: -27.108400
pi in radians: 0.523599
sinf of 30 degress is 0.500000
cosf of 30 degrees is 0.866025
tanf of 30 degrees is 0.577350
atanf of 1.000000 is 0.785398
atan2f of 0.3, 0.2 is 0.982794
acosf of 0.3 is 1.266104
asinf of 0.3 is 0.304693
tanhf of 2.2 is 0.304693
logf of 0.3: -1.203973
log10f of 300: 2.477121
pi has mantissa: 0.785398, exponent 2
l,le,l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,g,ge,
test tf completed with great success
test c_tests\bin3\td 
sprintf double 3.14159265358979311600
double from printf: 3.14159265358979311600
float from printf: 1.202057
double from printf r: -3.776373
sqrt of pi: 1.772454
pi in radians: 0.523599
sin of 30 degress is 0.500000
cos of 30 degrees is 0.866025
tan of 30 degrees is 0.577350
atan of 1.000000 is 0.785398
atan2 of 0.3, 0.2 is 0.982794
acos of 0.3 is 1.266104
asin of 0.3 is 0.304693
tanh of 2.2 is 0.304693
log of 0.3: -1.203973
log10 of 300: 2.477121
l,le,l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,
pi has mantissa: 0.785398, exponent 2
r should be 1.0: 1.000000
  r high point 3187071009115104228782838925952666189789578010509155762176.000000
stop
test c_tests\bin3\terrno 
errno opening a file for read that doesn't exist: 2 (2 file not found expected)
errno doing write to stdin file descriptor: 13. (13 permission denied expected)
errno opening a file for read with invalid open flags: 22 (22 invalid argument expected)
success
test c_tests\bin3\t_setjmp 
second
back in main
falling out of main
test c_tests\bin3\tex 
top of tex
I am unwound, x should be 44: 44
caught exception exceptional
attempting large allocations
caught a standard execption: std::bad_alloc
leaving main
test c_tests\bin3\mm 
float dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
float dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
float dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
float dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
float dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
float dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
float dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
float dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
float dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
float dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
float dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
float dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
float dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
float dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
float dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
float dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
float dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
float dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
float dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
float dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
double dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
double dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
double dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
double dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
double dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
double dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
double dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
double dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
double dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
double dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
double dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
double dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
double dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
double dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
double dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
double dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
double dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
double dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
double dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
double dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
ldouble_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
ldouble_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
ldouble_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
ldouble_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
ldouble_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
ldouble_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
ldouble_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
ldouble_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
ldouble_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
ldouble_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
ldouble_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
ldouble_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
ldouble_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
ldouble_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
ldouble_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
ldouble_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
ldouble_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
ldouble_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
ldouble_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
ldouble_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
int8_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int8_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int8_t dim 3: sum -28.0, mag -28.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int8_t dim 4: sum -62.0, mag -62.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum -94.0, sqrtsum 95.0
int8_t dim 5: sum -117.0, mag 7.0, min, -126.0 max 110.0, fmodsum 22.000, dotsum 47.0, sqrtsum -74.0
int8_t dim 6: sum -83.0, mag -31.0, min, -119.0 max 122.0, fmodsum 31.000, dotsum 10.0, sqrtsum 21.0
int8_t dim 7: sum 40.0, mag -66.0, min, -128.0 max 127.0, fmodsum 30.000, dotsum 47.0, sqrtsum -108.0
int8_t dim 8: sum 52.0, mag 34.0, min, -126.0 max 124.0, fmodsum 8.000, dotsum -65.0, sqrtsum 34.0
int8_t dim 9: sum -127.0, mag -7.0, min, -128.0 max 127.0, fmodsum -14.000, dotsum -67.0, sqrtsum -116.0
int8_t dim 10: sum -37.0, mag -83.0, min, -125.0 max 127.0, fmodsum -26.000, dotsum 68.0, sqrtsum 4.0
int8_t dim 11: sum -108.0, mag 108.0, min, -128.0 max 127.0, fmodsum -29.000, dotsum 70.0, sqrtsum 89.0
int8_t dim 12: sum -126.0, mag 78.0, min, -127.0 max 126.0, fmodsum -35.000, dotsum 13.0, sqrtsum -37.0
int8_t dim 13: sum -69.0, mag -43.0, min, -127.0 max 126.0, fmodsum 8.000, dotsum 105.0, sqrtsum -124.0
int8_t dim 14: sum 119.0, mag 33.0, min, -125.0 max 127.0, fmodsum -17.000, dotsum -118.0, sqrtsum 71.0
int8_t dim 15: sum -78.0, mag -64.0, min, -128.0 max 127.0, fmodsum -16.000, dotsum 126.0, sqrtsum 16.0
int8_t dim 16: sum 64.0, mag 72.0, min, -128.0 max 127.0, fmodsum -42.000, dotsum 106.0, sqrtsum -14.0
int8_t dim 17: sum 20.0, mag 102.0, min, -126.0 max 127.0, fmodsum 16.000, dotsum 30.0, sqrtsum -6.0
int8_t dim 18: sum -62.0, mag -90.0, min, -128.0 max 127.0, fmodsum -12.000, dotsum 1.0, sqrtsum -25.0
int8_t dim 19: sum 14.0, mag 32.0, min, -128.0 max 127.0, fmodsum 13.000, dotsum -58.0, sqrtsum -64.0
int8_t dim 20: sum -40.0, mag 12.0, min, -128.0 max 127.0, fmodsum -15.000, dotsum -35.0, sqrtsum 55.0
uint8_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint8_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint8_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint8_t dim 4: sum 194.0, mag 194.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint8_t dim 5: sum 139.0, mag 139.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 47.0, sqrtsum 188.0
uint8_t dim 6: sum 173.0, mag 173.0, min, 18.0 max 247.0, fmodsum 45.000, dotsum 10.0, sqrtsum 54.0
uint8_t dim 7: sum 40.0, mag 40.0, min, 17.0 max 238.0, fmodsum 58.000, dotsum 47.0, sqrtsum 212.0
uint8_t dim 8: sum 52.0, mag 52.0, min, 18.0 max 250.0, fmodsum 70.000, dotsum 191.0, sqrtsum 146.0
uint8_t dim 9: sum 129.0, mag 129.0, min, 6.0 max 254.0, fmodsum 99.000, dotsum 189.0, sqrtsum 118.0
uint8_t dim 10: sum 219.0, mag 219.0, min, 1.0 max 253.0, fmodsum 113.000, dotsum 68.0, sqrtsum 64.0
uint8_t dim 11: sum 148.0, mag 148.0, min, 0.0 max 255.0, fmodsum 144.000, dotsum 70.0, sqrtsum 57.0
uint8_t dim 12: sum 130.0, mag 130.0, min, 1.0 max 255.0, fmodsum 144.000, dotsum 13.0, sqrtsum 246.0
uint8_t dim 13: sum 187.0, mag 187.0, min, 0.0 max 255.0, fmodsum 203.000, dotsum 105.0, sqrtsum 188.0
uint8_t dim 14: sum 119.0, mag 119.0, min, 1.0 max 254.0, fmodsum 196.000, dotsum 138.0, sqrtsum 185.0
uint8_t dim 15: sum 178.0, mag 178.0, min, 0.0 max 255.0, fmodsum 231.000, dotsum 126.0, sqrtsum 254.0
uint8_t dim 16: sum 64.0, mag 64.0, min, 0.0 max 254.0, fmodsum 8.000, dotsum 106.0, sqrtsum 27.0
uint8_t dim 17: sum 20.0, mag 20.0, min, 0.0 max 255.0, fmodsum 73.000, dotsum 30.0, sqrtsum 76.0
uint8_t dim 18: sum 194.0, mag 194.0, min, 0.0 max 251.0, fmodsum 100.000, dotsum 1.0, sqrtsum 161.0
uint8_t dim 19: sum 14.0, mag 14.0, min, 0.0 max 254.0, fmodsum 156.000, dotsum 198.0, sqrtsum 254.0
uint8_t dim 20: sum 216.0, mag 216.0, min, 0.0 max 255.0, fmodsum 189.000, dotsum 221.0, sqrtsum 230.0
int16_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int16_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int16_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int16_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int16_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int16_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int16_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int16_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int16_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int16_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int16_t dim 11: sum -25452.0, mag -25452.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int16_t dim 12: sum -8062.0, mag -8062.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int16_t dim 13: sum 14011.0, mag 14011.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int16_t dim 14: sum -23433.0, mag -23433.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int16_t dim 15: sum 11698.0, mag 11698.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int16_t dim 16: sum -10176.0, mag -10176.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int16_t dim 17: sum -23532.0, mag -23532.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int16_t dim 18: sum -25406.0, mag -25406.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int16_t dim 19: sum -16370.0, mag -16370.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int16_t dim 20: sum 7128.0, mag 7128.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint16_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint16_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint16_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint16_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint16_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint16_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint16_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint16_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint16_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint16_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint16_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint16_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint16_t dim 13: sum 14011.0, mag 14011.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint16_t dim 14: sum 42103.0, mag 42103.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint16_t dim 15: sum 11698.0, mag 11698.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint16_t dim 16: sum 55360.0, mag 55360.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint16_t dim 17: sum 42004.0, mag 42004.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint16_t dim 18: sum 40130.0, mag 40130.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint16_t dim 19: sum 49166.0, mag 49166.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint16_t dim 20: sum 7128.0, mag 7128.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
int32_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int32_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int32_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int32_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int32_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int32_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int32_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int32_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int32_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int32_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int32_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int32_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int32_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int32_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int32_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int32_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int32_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int32_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int32_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int32_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint32_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint32_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint32_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint32_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint32_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint32_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint32_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint32_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint32_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint32_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint32_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint32_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint32_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint32_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint32_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint32_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint32_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint32_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint32_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint32_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
int64_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int64_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int64_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int64_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int64_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int64_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int64_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int64_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int64_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int64_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int64_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int64_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int64_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int64_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int64_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int64_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int64_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int64_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int64_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int64_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint64_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint64_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint64_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint64_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint64_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint64_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint64_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint64_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint64_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint64_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint64_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint64_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint64_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint64_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint64_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint64_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint64_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint64_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint64_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint64_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
matrix multiply test completed with great success
test c_tests\bin3\pis 
startingOffset128: 0, startingOffset: 0, countGenerated128 1, countGenerated 128
startInChunks: 0, limitInChunks 4
percent complete: 25.000000
percent complete: 50.000000
percent complete: 75.000000
percent complete: 100.000000
results are valid
final: 243f6a8885a308d313198a2e03707344a4093822299f31d0082efa98ec4e6c89452821e638d01377be5466cf34e90c6cc0ac29b7c97c50dd3f84d5b5b5470917
test c_tests\bin3\sleeptm 
clk_tck / number of linux ticks per second: 100
sleepy time ended with great success
test c_tests\bin3\tatomic 
test atomic completed with great success
test c_tests\bin3\lenum 
linux file system enumeration completed with great success
test c_tests\bin3\tregex 
regex test completed with great success
test c_tests\bin3\an 
a delve id
a delved i
a die veld
a dive led
a dived le
a led vied
add ive le
add le vie
addle ive
addle vie
aid delve
aide veld
ale dived
ave did le
ave id led
ave idled
dad ive le
dad le vie
dale dive
dale vied
david eel
david lee
dead evil
dead levi
dead live
dead veil
dead vile
deal dive
deal vied
dee valid
deed vial
did leave
died vale
died veal
dive lade
dive lead
dived lea
evade lid
eve id lad
id leaved
idea veld
lade vied
lead vied
test c_tests\bin3\ba 
parsing input file tp.bas
175 ms for 1 iterations
final move count 6493
exiting the basic interpreter
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
test c_tests\binfast\tcmp 
uint8_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int8_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint16_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int16_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint32_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int32_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint64_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int64_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
uint128_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
int128_t:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
floating point:
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 1 le 1 eq 0 ge 0 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 1 eq 1 ge 1 gt 0
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
  lt 0 le 0 eq 0 ge 1 gt 1
test c_tests\binfast\t 
a: 0 4000000000000000
a: 4 0
ua: 0 4000000000000000
ua: 4 0
a: ffffffffffffffff ffffffffffffffff
a: ffffffffffffffff ffffffffffffffdf = -33
int8_t result: 6
uint8_t result: 6
int16_t result: 6
uint16_t result: 6
int32_t result: 6
uint32_t result: 6
int64_t result: 6
uint64_t result: 6
int128_t result: 6
uint128_t result: 6
end of the app
test c_tests\binfast\e 
271828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319
done
test c_tests\binfast\printint 
n -13
test c_tests\binfast\sieve 
1899 primes.
test c_tests\binfast\simple 
argument 0: c_tests/binfast/simple
environment variable 0: TZ=PacificStandardTime+8
environment variable 1: OS=RVOS
test c_tests\binfast\tmuldiv 
app start
i8 3 * 14: 42
i8 3 % 14: 3
i8 3 / 14: 0
i8 17 * 14: -18
i8 17 % 14: 3
i8 17 / 14: 1
i8 -3 * 14: -42
i8 -3 % 14: -3
i8 -3 / 14: 0
i8 -17 * 14: 18
i8 -17 % 14: -3
i8 -17 / 14: -1
i8 -3 * -14: 42
i8 -3 % -14: -3
i8 -3 / -14: 0
i8 -17 * -14: -18
i8 -17 % -14: -3
i8 -17 / -14: 1
ui8 3 * 14: 42
ui8 3 % 14: 3
ui8 3 / 14: 0
ui8 17 * 14: 238
ui8 17 % 14: 3
ui8 17 / 14: 1
ui8 253 * 14: 214
ui8 253 % 14: 1
ui8 253 / 14: 18
ui8 239 * 14: 18
ui8 239 % 14: 1
ui8 239 / 14: 17
ui8 253 * 242: 42
ui8 253 % 242: 11
ui8 253 / 242: 1
ui8 239 * 242: 238
ui8 239 % 242: 239
ui8 239 / 242: 0
i16 3 * 14: 42
i16 3 % 14: 3
i16 3 / 14: 0
i16 3700 * 14: -13736
i16 3700 % 14: 4
i16 3700 / 14: 264
i16 -3 * 14: -42
i16 -3 % 14: -3
i16 -3 / 14: 0
i16 -3700 * 14: 13736
i16 -3700 % 14: -4
i16 -3700 / 14: -264
i16 -3 * -14: 42
i16 -3 % -14: -3
i16 -3 / -14: 0
i16 -3700 * -14: -13736
i16 -3700 % -14: -4
i16 -3700 / -14: 264
ui16 3 * 14: 42
ui16 3 % 14: 3
ui16 3 / 14: 0
ui16 3700 * 14: 51800
ui16 3700 % 14: 4
ui16 3700 / 14: 264
ui16 65533 * 14: 65494
ui16 65533 % 14: 13
ui16 65533 / 14: 4680
ui16 61836 * 14: 13736
ui16 61836 % 14: 12
ui16 61836 / 14: 4416
ui16 65533 * 65522: 42
ui16 65533 % 65522: 11
ui16 65533 / 65522: 1
ui16 61836 * 65522: 51800
ui16 61836 % 65522: 61836
ui16 61836 / 65522: 0
i32 3 * 14: 42
i32 3 % 14: 3
i32 3 / 14: 0
i32 37000 * 14: 518000
i32 37000 % 14: 12
i32 37000 / 14: 2642
i32 -3 * 14: -42
i32 -3 % 14: -3
i32 -3 / 14: 0
i32 -37000 * 14: -518000
i32 -37000 % 14: -12
i32 -37000 / 14: -2642
i32 -3 * -14: 42
i32 -3 % -14: -3
i32 -3 / -14: 0
i32 -37000 * -14: 518000
i32 -37000 % -14: -12
i32 -37000 / -14: 2642
ui32 3 * 14: 42
ui32 3 % 14: 3
ui32 3 / 14: 0
ui32 37000 * 14: 518000
ui32 37000 % 14: 12
ui32 37000 / 14: 2642
ui32 4294967293 * 14: 4294967254
ui32 4294967293 % 14: 1
ui32 4294967293 / 14: 306783378
ui32 4294930296 * 14: 4294449296
ui32 4294930296 % 14: 6
ui32 4294930296 / 14: 306780735
ui32 4294967293 * 4294967282: 42
ui32 4294967293 % 4294967282: 11
ui32 4294967293 / 4294967282: 1
ui32 4294930296 * 4294967282: 518000
ui32 4294930296 % 4294967282: 4294930296
ui32 4294930296 / 4294967282: 0
i64 3 * 14: 42
i64 3 % 14: 3
i64 3 / 14: 0
i64 370000000 * 14: 5180000000
i64 370000000 % 14: 6
i64 370000000 / 14: 26428571
i64 -3 * 14: -42
i64 -3 % 14: -3
i64 -3 / 14: 0
i64 -370000000 * 14: -5180000000
i64 -370000000 % 14: -6
i64 -370000000 / 14: -26428571
i64 -3 * -14: 42
i64 -3 % -14: -3
i64 -3 / -14: 0
i64 -370000000 * -14: 5180000000
i64 -370000000 % -14: -6
i64 -370000000 / -14: 26428571
ui64 3 * 14: 42
ui64 3 % 14: 3
ui64 3 / 14: 0
ui64 370000000 * 14: 5180000000
ui64 370000000 % 14: 6
ui64 370000000 / 14: 26428571
ui64 18446744073709551613 * 14: 18446744073709551574
ui64 18446744073709551613 % 14: 13
ui64 18446744073709551613 / 14: 1317624576693539400
ui64 18446744073339551616 * 14: 18446744068529551616
ui64 18446744073339551616 % 14: 10
ui64 18446744073339551616 / 14: 1317624576667110829
ui64 18446744073709551613 * 18446744073709551602: 42
ui64 18446744073709551613 % 18446744073709551602: 11
ui64 18446744073709551613 / 18446744073709551602: 1
ui64 18446744073339551616 * 18446744073709551602: 5180000000
ui64 18446744073339551616 % 18446744073709551602: 18446744073339551616
ui64 18446744073339551616 / 18446744073709551602: 0
tmuldiv ended with great success
test c_tests\binfast\tpi 
314159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535
test c_tests\binfast\ts 
top of app
print an int 27
print an int64_t 27
sizeof T: 1, result: ff
sizeof T: 1, result: 7f
sizeof T: 2, result: ffff
sizeof T: 2, result: 7fff
sizeof T: 4, result: ffffffff
sizeof T: 4, result: 7fffffff
sizeof T: 8, result: ffffffffffffffff
sizeof T: 8, result: 7fffffffffffffff
now test left shifts
sizeof T: 1, result: fe
sizeof T: 1, result: fe
sizeof T: 2, result: fffe
sizeof T: 2, result: fffe
sizeof T: 4, result: fffffffe
sizeof T: 4, result: fffffffe
sizeof T: 8, result: fffffffffffffffe
sizeof T: 8, result: fffffffffffffffe
now test comparisons
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
testing printf
  string: 'hello'
  char: 'h'
  int: 27, 1b
  negative int: -27, ffffffe5
  int64_t: 27, 1b
  negative int64_t: -27, ffffffffffffffe5
stop
test c_tests\binfast\ttt 
starting...
done
64930 moves
test c_tests\binfast\tarray 
sum: 0xf8
sum: 0xf8
sum: 0xfff8
sum: 0xfff8
sum: 0xfffffff8
sum: 0xfffffff8
sum: 0xfffffffffffffff8
sum: 0xfffffffffffffff8
sum: 0xf8
sum: 0xf8
sum: 0xfff8
sum: 0xfff8
sum: 0xfffffff8
sum: 0xfffffff8
sum: 0xfffffffffffffff8
sum: 0xfffffffffffffff8
sum: 0xfff8
sum: 0xfff8
sum: 0xf8
sum: 0xf8
    0000  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 08  ................................
    0020  00 00 00 00 00 00 00 02 00 04 00 00 00 ff f8 ff : ff ff ff ff ff ff fe ff fc ff ff ff 02 10 00 00  ................................
    0040  00 00 00 00 00 04 00 08 00 00 00 fe f0 ff ff ff : ff ff ff ff fc ff f8 ff ff ff 03 18 00 00 00 00  ................................
    0060  00 00 00 06 00 0c 00 00 00 fd e8 ff ff ff ff ff : ff ff fa ff f4 ff ff ff 04 20 00 00 00 00 00 00  ......................... ......
    0080  00 08 00 10 00 00 00 fc e0 ff ff ff ff ff ff ff : f8 ff f0 ff ff ff 05 28 00 00 00 00 00 00 00 0a  .......................(........
    00a0  00 14 00 00 00 fb d8 ff ff ff ff ff ff ff f6 ff : ec ff ff ff 06 30 00 00 00 00 00 00 00 0c 00 18  .....................0..........
    00c0  00 00 00 fa d0 ff ff ff ff ff ff ff f4 ff e8 ff : ff ff 07 38 00 00 00 00 00 00 00 0e 00 1c 00 00  ...................8............
    00e0  00 f9 c8 ff ff ff ff ff ff ff f2 ff e4 ff ff ff : 08 40 00 00 00 00 00 00 00 10 00 20 00 00 00 f8  .................@......... ....
    0100  c0 ff ff ff ff ff ff ff f0 ff e0 ff ff ff 09 48 : 00 00 00 00 00 00 00 12 00 24 00 00 00 f7 b8 ff  ...............H.........$......
    0120  ff ff ff ff ff ff ee ff dc ff ff ff 0a 50 00 00 : 00 00 00 00 00 14 00 28 00 00 00 f6 b0 ff ff ff  .............P.........(........
    0140  ff ff ff ff ec ff d8 ff ff ff 0b 58 00 00 00 00 : 00 00 00 16 00 2c 00 00 00 f5 a8 ff ff ff ff ff  ...........X.........,..........
    0160  ff ff ea ff d4 ff ff ff 0c 60 00 00 00 00 00 00 : 00 18 00 30 00 00 00 f4 a0 ff ff ff ff ff ff ff  .........`.........0............
    0180  e8 ff d0 ff ff ff 0d 68 00 00 00 00 00 00 00 1a : 00 34 00 00 00 f3 98 ff ff ff ff ff ff ff e6 ff  .......h.........4..............
    01a0  cc ff ff ff 0e 70 00 00 00 00 00 00 00 1c 00 38 : 00 00 00 f2 90 ff ff ff ff ff ff ff e4 ff c8 ff  .....p.........8................
    01c0  ff ff 0f 78 00 00 00 00 00 00 00 1e 00 3c 00 00 : 00 f1 88 ff ff ff ff ff ff ff e2 ff c4 ff ff ff  ...x.........<..................
    01e0  10 80 00 00 00 00 00 00 00 20 00 40 00 00 00 f0 : 80 ff ff ff ff ff ff ff e0 ff c0 ff ff ff 11 88  ......... .@....................
    0200  00 00 00 00 00 00 00 22 00 44 00 00 00 ef 78 ff : ff ff ff ff ff ff de ff bc ff ff ff 12 90 00 00  .......".D....x.................
    0220  00 00 00 00 00 24 00 48 00 00 00 ee 70 ff ff ff : ff ff ff ff dc ff b8 ff ff ff 13 98 00 00 00 00  .....$.H....p...................
    0240  00 00 00 26 00 4c 00 00 00 ed 68 ff ff ff ff ff : ff ff da ff b4 ff ff ff                          ...&.L....h.............
tarray completed with great success
test c_tests\binfast\tbits 
uint8_t:
  and 3, or 7, xor 4, nota f8, notb fc
  and 5, or ff, xor fa, nota f8, notb 2
  and 1, or fb, xor fa, nota 6, notb fc
  and f9, or fd, xor 4, nota 6, notb 2
  and ff, or ff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota 8, notb fc
  and f5, or ff, xor a, nota 8, notb 2
  and 1, or b, xor a, nota f6, notb fc
  and 9, or 9, xor 0, nota f6, notb f6
int8_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or fffffffffffffff7, xor fffffffffffffff4, nota 8, notb fffffffffffffffc
  and fffffffffffffff5, or ffffffffffffffff, xor a, nota 8, notb 2
  and 1, or b, xor a, nota fffffffffffffff6, notb fffffffffffffffc
  and 9, or 9, xor 0, nota fffffffffffffff6, notb fffffffffffffff6
uint16_t:
  and 3, or 7, xor 4, nota fff8, notb fffc
  and 5, or ffff, xor fffa, nota fff8, notb 2
  and 1, or fffb, xor fffa, nota 6, notb fffc
  and fff9, or fffd, xor 4, nota 6, notb 2
  and ffff, or ffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ff08, notb fffc
  and f5, or ffff, xor ff0a, nota ff08, notb 2
  and 1, or ff0b, xor ff0a, nota f6, notb fffc
  and ff09, or ff09, xor 0, nota f6, notb f6
int16_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
uint32_t:
  and 3, or 7, xor 4, nota fffffff8, notb fffffffc
  and 5, or ffffffff, xor fffffffa, nota fffffff8, notb 2
  and 1, or fffffffb, xor fffffffa, nota 6, notb fffffffc
  and fffffff9, or fffffffd, xor 4, nota 6, notb 2
  and ffffffff, or ffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffff08, notb fffffffc
  and f5, or ffffffff, xor ffffff0a, nota ffffff08, notb 2
  and 1, or ffffff0b, xor ffffff0a, nota f6, notb fffffffc
  and ffffff09, or ffffff09, xor 0, nota f6, notb f6
int32_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
uint64_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
int64_t:
  and 3, or 7, xor 4, nota fffffffffffffff8, notb fffffffffffffffc
  and 5, or ffffffffffffffff, xor fffffffffffffffa, nota fffffffffffffff8, notb 2
  and 1, or fffffffffffffffb, xor fffffffffffffffa, nota 6, notb fffffffffffffffc
  and fffffffffffffff9, or fffffffffffffffd, xor 4, nota 6, notb 2
  and ffffffffffffffff, or ffffffffffffffff, xor 0, nota 0, notb 0
  and 3, or f7, xor f4, nota ffffffffffffff08, notb fffffffffffffffc
  and f5, or ffffffffffffffff, xor ffffffffffffff0a, nota ffffffffffffff08, notb 2
  and 1, or ffffffffffffff0b, xor ffffffffffffff0a, nota f6, notb fffffffffffffffc
  and ffffffffffffff09, or ffffffffffffff09, xor 0, nota f6, notb f6
test c_tests\binfast\trw 
trw completed with great success
test c_tests\binfast\tmmap 
MAP_PRIVATE: 0x2
MAP_ANONYMOUS: 0x20
MREMAP_MAYMOVE: 0x1
PROT_READ: 0x1
PROT_WRITE: 0x2
mmap test completed with great success
test c_tests\binfast\tstr 
testing strlen
testing strchr and strrchr
testing strstr
testing memcpy and memcmp
testing printf
34 (34): stuvwxyzabcdefghijklmnopqrstuvwxyz
13 (13): efghijklmnopq
 3 ( 3): hij
50 (50): pqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklm
23 (23): yzabcdefghijklmnopqrstu
16 (16): yzabcdefghijklmn
21 (21): efghijklmnopqrstuvwxy
17 (17): lmnopqrstuvwxyzab
56 (56): zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabc
24 (24): xyzabcdefghijklmnopqrstu
55 (55): xyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
58 (58): pqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstu
18 (18): nopqrstuvwxyzabcde
22 (22): tuvwxyzabcdefghijklmno
49 (49): stuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmno
42 (42): defghijklmnopqrstuvwxyzabcdefghijklmnopqrs
62 (62): rstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyza
11 (11): xyzabcdefgh
45 (45): ijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyza
11 (11): rstuvwxyzab
testing wcslen
testing wcschr and wcsrchr
testing wcsstr
tstr completed with great success
test c_tests\binfast\fileops 
current offset: 0
result of fseek: 0
file length from ftell: 0
empty file length: 0
result of fseek: 0
result of fwrite (should be 1): 1
current offset: 8320
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length from portable_filelen: 8320
result of fseek to middle of file: 0
result of fwrite to middle of file (should be 1): 1
current offset: 0
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length: 8320
result of read at offset 0: 512
result of read at offset 512: 512
result of read at offset 1024: 512
result of read at offset 1536: 512
result of read at offset 2048: 512
result of read at offset 2560: 512
result of read at offset 3072: 512
result of read at offset 3584: 512
result of read at offset 4096: 512
result of read at offset 4608: 512
result of read at offset 5120: 512
result of read at offset 5632: 512
result of read at offset 6144: 512
result of read at offset 6656: 512
result of read at offset 7168: 512
result of read at offset 7680: 512
result of read at offset 8192: 128
testing backwards read
result of read at offset 8192: 128
result of read at offset 7680: 512
result of read at offset 7168: 512
result of read at offset 6656: 512
result of read at offset 6144: 512
result of read at offset 5632: 512
result of read at offset 5120: 512
result of read at offset 4608: 512
result of read at offset 4096: 512
result of read at offset 3584: 512
result of read at offset 3072: 512
result of read at offset 2560: 512
result of read at offset 2048: 512
result of read at offset 1536: 512
result of read at offset 1024: 512
result of read at offset 512: 512
result of read at offset 0: 512
fileops has completed with great success
test c_tests\binfast\ttime 
before TZ is set: tz: 'PacificStandardTime+8', year: 2025, month 2, day 27, hour 14, min 45, sec 16
east coast time: set tz 'TZ=EST+5' tz: 'EST+5', year: 2025, month 2, day 27, hour 17, min 45, sec 16
west coast time: set tz 'TZ=PST+8' tz: 'PST+8', year: 2025, month 2, day 27, hour 14, min 45, sec 16
TZ=<blank>: set tz 'TZ=' tz: '', year: 2025, month 2, day 27, hour 22, min 45, sec 16
test c_tests\binfast\tm 
tm has completed with great success
test c_tests\binfast\glob 
in CTest constructor
top main
value of ctest::foo: 666
end of main
in ~CTest destructor
test c_tests\binfast\tap 
starting, should tend towards 1.2020569031595942854...
  at           10 iterations: 1.19753198567419305576
  at          100 iterations: 1.20200740065967814907
  at         1000 iterations: 1.20205640365934329772
  at        10000 iterations: 1.20205689816009808624
  at       100000 iterations: 1.20205690310973234425
next implementation...
  at           10 iterations: 1.25000000000000000000
  at          100 iterations: 1.14942528735632176762
  at         1000 iterations: 1.21802679658952506259
  at        10000 iterations: 1.20293516179477921746
tap completed with great success
test c_tests\binfast\tsimplef 
float 3.141593
f1 2.500000 * f2 3.500000 = 8.750000
    div = 0.714286
    add = 6.000000
    sub = -1.000000
d1 9.720000 * d2 13.321000 = 129.480120
    div = 0.729675
    add = 23.041000
    sub = -3.601000
double from int128: 1000.000000
tsimplef completed with great success
test c_tests\binfast\tf 
float converted by floattoa: -1.23456699
float converted by floattoa: 1.23456699
float converted by floattoa: 34.56700000
float from printf: 45.678000
division result: 333.333344, square root 18.257420
float converted with floattoa: -27.108400
result of 20.2 * -1.342: -27.108400
result of 20.2 * -1.342 as a double: -27.108400
pi in radians: 0.523599
sinf of 30 degress is 0.500000
cosf of 30 degrees is 0.866025
tanf of 30 degrees is 0.577350
atanf of 1.000000 is 0.785398
atan2f of 0.3, 0.2 is 0.982794
acosf of 0.3 is 1.266104
asinf of 0.3 is 0.304693
tanhf of 2.2 is 0.304693
logf of 0.3: -1.203973
log10f of 300: 2.477121
pi has mantissa: 0.785398, exponent 2
l,le,l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,g,ge,
test tf completed with great success
test c_tests\binfast\td 
sprintf double 3.14159265358979311600
double from printf: 3.14159265358979311600
float from printf: 1.202057
double from printf r: -3.776373
sqrt of pi: 1.772454
pi in radians: 0.523599
sin of 30 degress is 0.500000
cos of 30 degrees is 0.866025
tan of 30 degrees is 0.577350
atan of 1.000000 is 0.785398
atan2 of 0.3, 0.2 is 0.982794
acos of 0.3 is 1.266104
asin of 0.3 is 0.304693
tanh of 2.2 is 0.304693
log of 0.3: -1.203973
log10 of 300: 2.477121
l,le,l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,
pi has mantissa: 0.785398, exponent 2
r should be 1.0: 1.000000
  r high point 3187071009115104228782838925952666189789578010509155762176.000000
stop
test c_tests\binfast\terrno 
errno opening a file for read that doesn't exist: 2 (2 file not found expected)
errno doing write to stdin file descriptor: 13. (13 permission denied expected)
errno opening a file for read with invalid open flags: 22 (22 invalid argument expected)
success
test c_tests\binfast\t_setjmp 
second
back in main
falling out of main
test c_tests\binfast\tex 
top of tex
I am unwound, x should be 44: 44
caught exception exceptional
attempting large allocations
caught a standard execption: std::bad_alloc
leaving main
test c_tests\binfast\mm 
float dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
float dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
float dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
float dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
float dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
float dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
float dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
float dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
float dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
float dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
float dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
float dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
float dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
float dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
float dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
float dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
float dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
float dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
float dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
float dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
double dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
double dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
double dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
double dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
double dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
double dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
double dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
double dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
double dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
double dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
double dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
double dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
double dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
double dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
double dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
double dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
double dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
double dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
double dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
double dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
ldouble_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.800, dotsum 4.0, sqrtsum 2.0
ldouble_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 5.200, dotsum 24.0, sqrtsum 14.0
ldouble_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 13.600, dotsum 71.0, sqrtsum 44.4
ldouble_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 27.600, dotsum 162.0, sqrtsum 103.5
ldouble_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 43.000, dotsum 303.0, sqrtsum 198.0
ldouble_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 64.200, dotsum 522.0, sqrtsum 341.8
ldouble_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 84.800, dotsum 815.0, sqrtsum 538.1
ldouble_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 106.400, dotsum 1215.0, sqrtsum 802.6
ldouble_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 145.000, dotsum 1725.0, sqrtsum 1140.7
ldouble_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 167.800, dotsum 2372.0, sqrtsum 1565.9
ldouble_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 212.000, dotsum 3142.0, sqrtsum 2077.6
ldouble_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 232.400, dotsum 4109.0, sqrtsum 2705.7
ldouble_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 299.000, dotsum 5225.0, sqrtsum 3437.8
ldouble_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 314.200, dotsum 6538.0, sqrtsum 4294.5
ldouble_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 360.400, dotsum 8062.0, sqrtsum 5285.0
ldouble_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 409.600, dotsum 9834.0, sqrtsum 6425.7
ldouble_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 490.400, dotsum 11806.0, sqrtsum 7704.7
ldouble_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 536.400, dotsum 14081.0, sqrtsum 9160.9
ldouble_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 609.200, dotsum 16582.0, sqrtsum 10772.7
ldouble_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 676.800, dotsum 19421.0, sqrtsum 12581.6
int8_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int8_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int8_t dim 3: sum -28.0, mag -28.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int8_t dim 4: sum -62.0, mag -62.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum -94.0, sqrtsum 95.0
int8_t dim 5: sum -117.0, mag 7.0, min, -126.0 max 110.0, fmodsum 22.000, dotsum 47.0, sqrtsum -74.0
int8_t dim 6: sum -83.0, mag -31.0, min, -119.0 max 122.0, fmodsum 31.000, dotsum 10.0, sqrtsum 21.0
int8_t dim 7: sum 40.0, mag -66.0, min, -128.0 max 127.0, fmodsum 30.000, dotsum 47.0, sqrtsum -108.0
int8_t dim 8: sum 52.0, mag 34.0, min, -126.0 max 124.0, fmodsum 8.000, dotsum -65.0, sqrtsum 34.0
int8_t dim 9: sum -127.0, mag -7.0, min, -128.0 max 127.0, fmodsum -14.000, dotsum -67.0, sqrtsum -116.0
int8_t dim 10: sum -37.0, mag -83.0, min, -125.0 max 127.0, fmodsum -26.000, dotsum 68.0, sqrtsum 4.0
int8_t dim 11: sum -108.0, mag 108.0, min, -128.0 max 127.0, fmodsum -29.000, dotsum 70.0, sqrtsum 89.0
int8_t dim 12: sum -126.0, mag 78.0, min, -127.0 max 126.0, fmodsum -35.000, dotsum 13.0, sqrtsum -37.0
int8_t dim 13: sum -69.0, mag -43.0, min, -127.0 max 126.0, fmodsum 8.000, dotsum 105.0, sqrtsum -124.0
int8_t dim 14: sum 119.0, mag 33.0, min, -125.0 max 127.0, fmodsum -17.000, dotsum -118.0, sqrtsum 71.0
int8_t dim 15: sum -78.0, mag -64.0, min, -128.0 max 127.0, fmodsum -16.000, dotsum 126.0, sqrtsum 16.0
int8_t dim 16: sum 64.0, mag 72.0, min, -128.0 max 127.0, fmodsum -42.000, dotsum 106.0, sqrtsum -14.0
int8_t dim 17: sum 20.0, mag 102.0, min, -126.0 max 127.0, fmodsum 16.000, dotsum 30.0, sqrtsum -6.0
int8_t dim 18: sum -62.0, mag -90.0, min, -128.0 max 127.0, fmodsum -12.000, dotsum 1.0, sqrtsum -25.0
int8_t dim 19: sum 14.0, mag 32.0, min, -128.0 max 127.0, fmodsum 13.000, dotsum -58.0, sqrtsum -64.0
int8_t dim 20: sum -40.0, mag 12.0, min, -128.0 max 127.0, fmodsum -15.000, dotsum -35.0, sqrtsum 55.0
uint8_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint8_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint8_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint8_t dim 4: sum 194.0, mag 194.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint8_t dim 5: sum 139.0, mag 139.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 47.0, sqrtsum 188.0
uint8_t dim 6: sum 173.0, mag 173.0, min, 18.0 max 247.0, fmodsum 45.000, dotsum 10.0, sqrtsum 54.0
uint8_t dim 7: sum 40.0, mag 40.0, min, 17.0 max 238.0, fmodsum 58.000, dotsum 47.0, sqrtsum 212.0
uint8_t dim 8: sum 52.0, mag 52.0, min, 18.0 max 250.0, fmodsum 70.000, dotsum 191.0, sqrtsum 146.0
uint8_t dim 9: sum 129.0, mag 129.0, min, 6.0 max 254.0, fmodsum 99.000, dotsum 189.0, sqrtsum 118.0
uint8_t dim 10: sum 219.0, mag 219.0, min, 1.0 max 253.0, fmodsum 113.000, dotsum 68.0, sqrtsum 64.0
uint8_t dim 11: sum 148.0, mag 148.0, min, 0.0 max 255.0, fmodsum 144.000, dotsum 70.0, sqrtsum 57.0
uint8_t dim 12: sum 130.0, mag 130.0, min, 1.0 max 255.0, fmodsum 144.000, dotsum 13.0, sqrtsum 246.0
uint8_t dim 13: sum 187.0, mag 187.0, min, 0.0 max 255.0, fmodsum 203.000, dotsum 105.0, sqrtsum 188.0
uint8_t dim 14: sum 119.0, mag 119.0, min, 1.0 max 254.0, fmodsum 196.000, dotsum 138.0, sqrtsum 185.0
uint8_t dim 15: sum 178.0, mag 178.0, min, 0.0 max 255.0, fmodsum 231.000, dotsum 126.0, sqrtsum 254.0
uint8_t dim 16: sum 64.0, mag 64.0, min, 0.0 max 254.0, fmodsum 8.000, dotsum 106.0, sqrtsum 27.0
uint8_t dim 17: sum 20.0, mag 20.0, min, 0.0 max 255.0, fmodsum 73.000, dotsum 30.0, sqrtsum 76.0
uint8_t dim 18: sum 194.0, mag 194.0, min, 0.0 max 251.0, fmodsum 100.000, dotsum 1.0, sqrtsum 161.0
uint8_t dim 19: sum 14.0, mag 14.0, min, 0.0 max 254.0, fmodsum 156.000, dotsum 198.0, sqrtsum 254.0
uint8_t dim 20: sum 216.0, mag 216.0, min, 0.0 max 255.0, fmodsum 189.000, dotsum 221.0, sqrtsum 230.0
int16_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int16_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int16_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int16_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int16_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int16_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int16_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int16_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int16_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int16_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int16_t dim 11: sum -25452.0, mag -25452.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int16_t dim 12: sum -8062.0, mag -8062.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int16_t dim 13: sum 14011.0, mag 14011.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int16_t dim 14: sum -23433.0, mag -23433.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int16_t dim 15: sum 11698.0, mag 11698.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int16_t dim 16: sum -10176.0, mag -10176.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int16_t dim 17: sum -23532.0, mag -23532.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int16_t dim 18: sum -25406.0, mag -25406.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int16_t dim 19: sum -16370.0, mag -16370.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int16_t dim 20: sum 7128.0, mag 7128.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint16_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint16_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint16_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint16_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint16_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint16_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint16_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint16_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint16_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint16_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint16_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint16_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint16_t dim 13: sum 14011.0, mag 14011.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint16_t dim 14: sum 42103.0, mag 42103.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint16_t dim 15: sum 11698.0, mag 11698.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint16_t dim 16: sum 55360.0, mag 55360.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint16_t dim 17: sum 42004.0, mag 42004.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint16_t dim 18: sum 40130.0, mag 40130.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint16_t dim 19: sum 49166.0, mag 49166.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint16_t dim 20: sum 7128.0, mag 7128.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
int32_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int32_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int32_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int32_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int32_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int32_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int32_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int32_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int32_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int32_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int32_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int32_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int32_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int32_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int32_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int32_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int32_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int32_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int32_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int32_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint32_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint32_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint32_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint32_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint32_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint32_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint32_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint32_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint32_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint32_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint32_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint32_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint32_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint32_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint32_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint32_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint32_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint32_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint32_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint32_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
int64_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
int64_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
int64_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
int64_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
int64_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
int64_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
int64_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
int64_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
int64_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
int64_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
int64_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
int64_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
int64_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
int64_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
int64_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
int64_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
int64_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
int64_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
int64_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
int64_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
uint64_t dim 1: sum 4.0, mag 4.0, min, 4.0 max 4.0, fmodsum 0.000, dotsum 4.0, sqrtsum 2.0
uint64_t dim 2: sum 50.0, mag 50.0, min, 8.0 max 18.0, fmodsum 3.000, dotsum 24.0, sqrtsum 12.0
uint64_t dim 3: sum 228.0, mag 228.0, min, 13.0 max 47.0, fmodsum 9.000, dotsum 71.0, sqrtsum 41.0
uint64_t dim 4: sum 706.0, mag 706.0, min, 19.0 max 96.0, fmodsum 18.000, dotsum 162.0, sqrtsum 95.0
uint64_t dim 5: sum 1675.0, mag 1675.0, min, 26.0 max 170.0, fmodsum 28.000, dotsum 303.0, sqrtsum 188.0
uint64_t dim 6: sum 3501.0, mag 3501.0, min, 34.0 max 274.0, fmodsum 45.000, dotsum 522.0, sqrtsum 322.0
uint64_t dim 7: sum 6440.0, mag 6440.0, min, 43.0 max 413.0, fmodsum 58.000, dotsum 815.0, sqrtsum 515.0
uint64_t dim 8: sum 11060.0, mag 11060.0, min, 53.0 max 592.0, fmodsum 70.000, dotsum 1215.0, sqrtsum 775.0
uint64_t dim 9: sum 17793.0, mag 17793.0, min, 64.0 max 816.0, fmodsum 99.000, dotsum 1725.0, sqrtsum 1101.0
uint64_t dim 10: sum 27355.0, mag 27355.0, min, 76.0 max 1090.0, fmodsum 111.000, dotsum 2372.0, sqrtsum 1520.0
uint64_t dim 11: sum 40084.0, mag 40084.0, min, 89.0 max 1419.0, fmodsum 147.000, dotsum 3142.0, sqrtsum 2015.0
uint64_t dim 12: sum 57474.0, mag 57474.0, min, 103.0 max 1808.0, fmodsum 142.000, dotsum 4109.0, sqrtsum 2639.0
uint64_t dim 13: sum 79547.0, mag 79547.0, min, 118.0 max 2262.0, fmodsum 207.000, dotsum 5225.0, sqrtsum 3358.0
uint64_t dim 14: sum 107639.0, mag 107639.0, min, 134.0 max 2786.0, fmodsum 195.000, dotsum 6538.0, sqrtsum 4196.0
uint64_t dim 15: sum 142770.0, mag 142770.0, min, 151.0 max 3385.0, fmodsum 230.000, dotsum 8062.0, sqrtsum 5182.0
uint64_t dim 16: sum 186432.0, mag 186432.0, min, 169.0 max 4064.0, fmodsum 264.000, dotsum 9834.0, sqrtsum 6299.0
uint64_t dim 17: sum 238612.0, mag 238612.0, min, 188.0 max 4828.0, fmodsum 326.000, dotsum 11806.0, sqrtsum 7566.0
uint64_t dim 18: sum 302274.0, mag 302274.0, min, 208.0 max 5682.0, fmodsum 355.000, dotsum 14081.0, sqrtsum 8999.0
uint64_t dim 19: sum 376846.0, mag 376846.0, min, 229.0 max 6631.0, fmodsum 408.000, dotsum 16582.0, sqrtsum 10597.0
uint64_t dim 20: sum 465880.0, mag 465880.0, min, 251.0 max 7680.0, fmodsum 449.000, dotsum 19421.0, sqrtsum 12388.0
matrix multiply test completed with great success
test c_tests\binfast\pis 
startingOffset128: 0, startingOffset: 0, countGenerated128 1, countGenerated 128
startInChunks: 0, limitInChunks 4
percent complete: 25.000000
percent complete: 50.000000
percent complete: 75.000000
percent complete: 100.000000
results are valid
final: 243f6a8885a308d313198a2e03707344a4093822299f31d0082efa98ec4e6c89452821e638d01377be5466cf34e90c6cc0ac29b7c97c50dd3f84d5b5b5470917
test c_tests\binfast\sleeptm 
clk_tck / number of linux ticks per second: 100
sleepy time ended with great success
test c_tests\binfast\tatomic 
test atomic completed with great success
test c_tests\binfast\lenum 
linux file system enumeration completed with great success
test c_tests\binfast\tregex 
regex test completed with great success
test c_tests\binfast\an 
a delve id
a delved i
a die veld
a dive led
a dived le
a led vied
add ive le
add le vie
addle ive
addle vie
aid delve
aide veld
ale dived
ave did le
ave id led
ave idled
dad ive le
dad le vie
dale dive
dale vied
david eel
david lee
dead evil
dead levi
dead live
dead veil
dead vile
deal dive
deal vied
dee valid
deed vial
did leave
died vale
died veal
dive lade
dive lead
dived lea
evade lid
eve id lad
id leaved
idea veld
lade vied
lead vied
test c_tests\binfast\ba 
parsing input file tp.bas
173 ms for 1 iterations
final move count 6493
exiting the basic interpreter
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.s, use registers: yes, expression optimization: yes
parsing input file tp.bas
created assembler file: tp.asm, use registers: yes, expression optimization: yes
test rust_tests\bin0\e 
testing finding e
271828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319
exiting finding e with great success
test rust_tests\bin0\ttt 
serial runtime:   18.8206ms
moves:            6493
iterations:       1
test rust_tests\bin0\fileops 
exiting fileops with great success
test rust_tests\bin0\ato 
testing atomic operations
i64
u64
i32
u32
i16
u16
i8
u8
bool
exiting atomic testing with great success
test rust_tests\bin0\tap 
starting, should tend towards 1.2020569031595942854...
first implementation...
  1.197531985674193      at 10 iterations
  1.2020074006596781     at 100 iterations
  1.2020564036593433     at 1000 iterations
  1.202056898160098      at 10000 iterations
  1.2020569031097323     at 100000 iterations
  1.202056903150321      at 1000000 iterations
second implementation...
  1.1111111111111112     at 10 iterations
  1.25                   at 100 iterations
  1.2285012285012284     at 1000 iterations
  1.1987532965715655     at 10000 iterations
  1.1989688867573887     at 100000 iterations
exiting finding ap with great success
test rust_tests\bin0\real 
testing real number operations
r32: 0.31831014
r64: 0.36787968862663156
r32 sin: 0.31296203
r64 sin: 0.3596377963109607
r32 cos: 0.9497656
r64 cos: 0.9330919866039982
r32 tan: 0.329515
r64 tan: 0.3854258759844972
r32 asin: 0.3239464
r64 asin: 0.37672777417563674
r32 acos: 1.24685
r64 acos: 1.1940685526192598
r32 atan: 0.3081693
r64 atan: 0.3525136397354091
_r32x = 2976.1567
_r64x = 2976.1192265545533
sum: = 5952.275964835803
32 total 4.101693, 64 total 4.101914337473573
exiting real number testing with great success
test rust_tests\bin0\tphi 
phi should tend towards 1.61803398874989484820458683436563811772030
  at    5 iterations: 1.625
  at   10 iterations: 1.6179775280898876
  at   15 iterations: 1.618034447821682
  at   20 iterations: 1.618033985017358
  at   25 iterations: 1.6180339887802426
  at   30 iterations: 1.6180339887496482
  at   35 iterations: 1.618033988749897
  at   40 iterations: 1.618033988749895
exiting finding phi with great success
test rust_tests\bin0\mysort 
element count in vector: 58175
element count after dedup: 58175
test rust_tests\bin1\e 
testing finding e
271828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319
exiting finding e with great success
test rust_tests\bin1\ttt 
serial runtime:   4.5748ms
moves:            6493
iterations:       1
test rust_tests\bin1\fileops 
exiting fileops with great success
test rust_tests\bin1\ato 
testing atomic operations
i64
u64
i32
u32
i16
u16
i8
u8
bool
exiting atomic testing with great success
test rust_tests\bin1\tap 
starting, should tend towards 1.2020569031595942854...
first implementation...
  1.197531985674193      at 10 iterations
  1.2020074006596781     at 100 iterations
  1.2020564036593433     at 1000 iterations
  1.202056898160098      at 10000 iterations
  1.2020569031097323     at 100000 iterations
  1.202056903150321      at 1000000 iterations
second implementation...
  1.1111111111111112     at 10 iterations
  1.25                   at 100 iterations
  1.2285012285012284     at 1000 iterations
  1.1987532965715655     at 10000 iterations
  1.1989688867573887     at 100000 iterations
exiting finding ap with great success
test rust_tests\bin1\real 
testing real number operations
r32: 0.31831014
r64: 0.36787968862663156
r32 sin: 0.31296203
r64 sin: 0.3596377963109607
r32 cos: 0.9497656
r64 cos: 0.9330919866039982
r32 tan: 0.329515
r64 tan: 0.3854258759844972
r32 asin: 0.3239464
r64 asin: 0.37672777417563674
r32 acos: 1.2468499
r64 acos: 1.1940685526192598
r32 atan: 0.3081693
r64 atan: 0.3525136397354091
_r32x = 2976.1567
_r64x = 2976.1192265545533
sum: = 5952.275964835803
32 total 4.101693, 64 total 4.101914337473573
exiting real number testing with great success
test rust_tests\bin1\tphi 
phi should tend towards 1.61803398874989484820458683436563811772030
  at    5 iterations: 1.625
  at   10 iterations: 1.6179775280898876
  at   15 iterations: 1.618034447821682
  at   20 iterations: 1.618033985017358
  at   25 iterations: 1.6180339887802426
  at   30 iterations: 1.6180339887496482
  at   35 iterations: 1.618033988749897
  at   40 iterations: 1.618033988749895
exiting finding phi with great success
test rust_tests\bin1\mysort 
element count in vector: 58175
element count after dedup: 58175
test rust_tests\bin2\e 
testing finding e
271828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319
exiting finding e with great success
test rust_tests\bin2\ttt 
serial runtime:   3.5417ms
moves:            6493
iterations:       1
test rust_tests\bin2\fileops 
exiting fileops with great success
test rust_tests\bin2\ato 
testing atomic operations
i64
u64
i32
u32
i16
u16
i8
u8
bool
exiting atomic testing with great success
test rust_tests\bin2\tap 
starting, should tend towards 1.2020569031595942854...
first implementation...
  1.197531985674193      at 10 iterations
  1.2020074006596781     at 100 iterations
  1.2020564036593433     at 1000 iterations
  1.202056898160098      at 10000 iterations
  1.2020569031097323     at 100000 iterations
  1.202056903150321      at 1000000 iterations
second implementation...
  1.1111111111111112     at 10 iterations
  1.25                   at 100 iterations
  1.2285012285012284     at 1000 iterations
  1.1987532965715655     at 10000 iterations
  1.1989688867573887     at 100000 iterations
exiting finding ap with great success
test rust_tests\bin2\real 
testing real number operations
r32: 0.31831014
r64: 0.36787968862663156
r32 sin: 0.31296203
r64 sin: 0.3596377963109607
r32 cos: 0.9497656
r64 cos: 0.9330919866039982
r32 tan: 0.329515
r64 tan: 0.3854258759844972
r32 asin: 0.3239464
r64 asin: 0.37672777417563674
r32 acos: 1.24685
r64 acos: 1.1940685526192598
r32 atan: 0.3081693
r64 atan: 0.3525136397354091
_r32x = 2976.1567
_r64x = 2976.1192265545533
sum: = 5952.275964835803
32 total 4.101693, 64 total 4.101914337473573
exiting real number testing with great success
test rust_tests\bin2\tphi 
phi should tend towards 1.61803398874989484820458683436563811772030
  at    5 iterations: 1.625
  at   10 iterations: 1.6179775280898876
  at   15 iterations: 1.618034447821682
  at   20 iterations: 1.618033985017358
  at   25 iterations: 1.6180339887802426
  at   30 iterations: 1.6180339887496482
  at   35 iterations: 1.618033988749897
  at   40 iterations: 1.618033988749895
exiting finding phi with great success
test rust_tests\bin2\mysort 
element count in vector: 58175
element count after dedup: 58175
test rust_tests\bin3\e 
testing finding e
271828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319
exiting finding e with great success
test rust_tests\bin3\ttt 
serial runtime:   2.9532ms
moves:            6493
iterations:       1
test rust_tests\bin3\fileops 
exiting fileops with great success
test rust_tests\bin3\ato 
testing atomic operations
i64
u64
i32
u32
i16
u16
i8
u8
bool
exiting atomic testing with great success
test rust_tests\bin3\tap 
starting, should tend towards 1.2020569031595942854...
first implementation...
  1.197531985674193      at 10 iterations
  1.2020074006596781     at 100 iterations
  1.2020564036593433     at 1000 iterations
  1.202056898160098      at 10000 iterations
  1.2020569031097323     at 100000 iterations
  1.202056903150321      at 1000000 iterations
second implementation...
  1.1111111111111112     at 10 iterations
  1.25                   at 100 iterations
  1.2285012285012284     at 1000 iterations
  1.1987532965715655     at 10000 iterations
  1.1989688867573887     at 100000 iterations
exiting finding ap with great success
test rust_tests\bin3\real 
testing real number operations
r32: 0.31831014
r64: 0.36787968862663156
r32 sin: 0.31296203
r64 sin: 0.3596377963109607
r32 cos: 0.9497656
r64 cos: 0.9330919866039982
r32 tan: 0.329515
r64 tan: 0.3854258759844972
r32 asin: 0.3239464
r64 asin: 0.37672777417563674
r32 acos: 1.24685
r64 acos: 1.1940685526192598
r32 atan: 0.3081693
r64 atan: 0.3525136397354091
_r32x = 2976.1567
_r64x = 2976.1192265545533
sum: = 5952.275964835803
32 total 4.101693, 64 total 4.101914337473573
exiting real number testing with great success
test rust_tests\bin3\tphi 
phi should tend towards 1.61803398874989484820458683436563811772030
  at    5 iterations: 1.625
  at   10 iterations: 1.6179775280898876
  at   15 iterations: 1.618034447821682
  at   20 iterations: 1.618033985017358
  at   25 iterations: 1.6180339887802426
  at   30 iterations: 1.6180339887496482
  at   35 iterations: 1.618033988749897
  at   40 iterations: 1.618033988749895
exiting finding phi with great success
test rust_tests\bin3\mysort 
element count in vector: 58175
element count after dedup: 58175
test ntvao 

195D 0001$
test ntvcm 
moves: 6493
iterations: 1
test ntvdm 
0.1 seconds
moves: 6493
iterations: 1
test rvos 
starting...
6493 moves
118 milliseconds
1 iterations
test armos 
starting
128887 microseconds (-6)
1 iterations
6493 moves
Thu 02/27/2025 14:45:31.21 
