Sat Mar 30 09:04:44 PDT 2024
running C test app t using brk heap
a: 0 4000000000000000
a: 4 0
ua: 0 4000000000000000
ua: 4 0
a: ffffffffffffffff ffffffffffffffff
a: ffffffffffffffff ffffffffffffffdf = -33
int8_t result: 6
uint8_t result: 6
int16_t result: 6
uint16_t result: 6
int32_t result: 6
uint32_t result: 6
int64_t result: 6
uint64_t result: 6
int128_t result: 6
uint128_t result: 6
end of the app
running C test app t using mmap heap
a: 0 4000000000000000
a: 4 0
ua: 0 4000000000000000
ua: 4 0
a: ffffffffffffffff ffffffffffffffff
a: ffffffffffffffff ffffffffffffffdf = -33
int8_t result: 6
uint8_t result: 6
int16_t result: 6
uint16_t result: 6
int32_t result: 6
uint32_t result: 6
int64_t result: 6
uint64_t result: 6
int128_t result: 6
uint128_t result: 6
end of the app
running C test app glob using brk heap
in CTest constructor
top main
value of ctest::foo: 666
end of main
in ~CTest destructor
running C test app glob using mmap heap
in CTest constructor
top main
value of ctest::foo: 666
end of main
in ~CTest destructor
running C test app tenv using brk heap
environment variable 0: 0x737d0 == 'OS=RVOS'
is RVOS: yes
pval: 0xa937ee
value: toast!
OS: 0x737d3
value: RVOS
TZ: (nil)
running C test app tenv using mmap heap
environment variable 0: 0x737d0 == 'OS=RVOS'
is RVOS: yes
pval: 0x937ee
value: toast!
OS: 0x737d3
value: RVOS
TZ: (nil)
running C test app ts using brk heap
top of app
print an int 27
print an int64_t 27
sizeof T: 1, result: ff
sizeof T: 1, result: 7f
sizeof T: 2, result: ffff
sizeof T: 2, result: 7fff
sizeof T: 4, result: ffffffff
sizeof T: 4, result: 7fffffff
sizeof T: 8, result: ffffffffffffffff
sizeof T: 8, result: 7fffffffffffffff
now test left shifts
sizeof T: 1, result: fe
sizeof T: 1, result: fe
sizeof T: 2, result: fffe
sizeof T: 2, result: fffe
sizeof T: 4, result: fffffffe
sizeof T: 4, result: fffffffe
sizeof T: 8, result: fffffffffffffffe
sizeof T: 8, result: fffffffffffffffe
now test comparisons
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
testing printf
  string: 'hello'
  char: 'h'
  int: 27, 1b
  negative int: -27, ffffffe5
  int64_t: 27, 1b
  negative int64_t: -27, ffffffffffffffe5
  float: 3.141573
  negative float: -3.141573
stop
running C test app ts using mmap heap
top of app
print an int 27
print an int64_t 27
sizeof T: 1, result: ff
sizeof T: 1, result: 7f
sizeof T: 2, result: ffff
sizeof T: 2, result: 7fff
sizeof T: 4, result: ffffffff
sizeof T: 4, result: 7fffffff
sizeof T: 8, result: ffffffffffffffff
sizeof T: 8, result: 7fffffffffffffff
now test left shifts
sizeof T: 1, result: fe
sizeof T: 1, result: fe
sizeof T: 2, result: fffe
sizeof T: 2, result: fffe
sizeof T: 4, result: fffffffe
sizeof T: 4, result: fffffffe
sizeof T: 8, result: fffffffffffffffe
sizeof T: 8, result: fffffffffffffffe
now test comparisons
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
sizeof T: 4, result: 1
testing printf
  string: 'hello'
  char: 'h'
  int: 27, 1b
  negative int: -27, ffffffe5
  int64_t: 27, 1b
  negative int64_t: -27, ffffffffffffffe5
  float: 3.141573
  negative float: -3.141573
stop
running C test app tf using brk heap
hello from printf
float from printf: 45.678000
division result: 333.333344, square root 18.257420
result of 20.2 * -1.342: -27.108400
result of 20.2 * -1.342 as a double: -27.108400
sinf of 30 degress is 0.500000
cosf of 30 degrees is 0.866025
tanf of 30 degrees is 0.577350
atanf of 1.000000 is 0.785398
atan2f of 0.3, 0.2 is 0.982794
acosf of 0.3 is 1.266104
asinf of 0.3 is 0.304693
tanhf of 2.2 is 0.304693
logf of 0.3: -1.203973
log10f of 300: 2.477121
pi has mantissa: 0.785398, exponent 2
l,le,l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,g,ge,
stop
running C test app tf using mmap heap
hello from printf
float from printf: 45.678000
division result: 333.333344, square root 18.257420
result of 20.2 * -1.342: -27.108400
result of 20.2 * -1.342 as a double: -27.108400
sinf of 30 degress is 0.500000
cosf of 30 degrees is 0.866025
tanf of 30 degrees is 0.577350
atanf of 1.000000 is 0.785398
atan2f of 0.3, 0.2 is 0.982794
acosf of 0.3 is 1.266104
asinf of 0.3 is 0.304693
tanhf of 2.2 is 0.304693
logf of 0.3: -1.203973
log10f of 300: 2.477121
pi has mantissa: 0.785398, exponent 2
l,le,l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,g,ge,
stop
running C test app tm using brk heap
success
running C test app tm using mmap heap
success
running C test app tap using brk heap
starting, should tend towards 1.2020569031595942854...
  at           10 iterations: 1.19753198567419305576
  at          100 iterations: 1.20200740065967814907
  at         1000 iterations: 1.20205640365934329772
  at        10000 iterations: 1.20205689816009808624
  at       100000 iterations: 1.20205690310973234425
next implementation...
  at           10 iterations: 1.25000000000000000000
  at          100 iterations: 1.14942528735632176762
  at         1000 iterations: 1.21802679658952506259
  at        10000 iterations: 1.20293516179477921746
done
running C test app tap using mmap heap
starting, should tend towards 1.2020569031595942854...
  at           10 iterations: 1.19753198567419305576
  at          100 iterations: 1.20200740065967814907
  at         1000 iterations: 1.20205640365934329772
  at        10000 iterations: 1.20205689816009808624
  at       100000 iterations: 1.20205690310973234425
next implementation...
  at           10 iterations: 1.25000000000000000000
  at          100 iterations: 1.14942528735632176762
  at         1000 iterations: 1.21802679658952506259
  at        10000 iterations: 1.20293516179477921746
done
running C test app ttt using brk heap
starting...
64930 moves
15.813001 milliseconds
running C test app ttt using mmap heap
starting...
64930 moves
15.765000 milliseconds
running C test app sieve using brk heap
1899 primes.
running C test app sieve using mmap heap
1899 primes.
running C test app e using brk heap
271828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319
done
running C test app e using mmap heap
271828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319
done
running C test app tpi using brk heap
314159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535
running C test app tpi using mmap heap
314159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535
running C test app tp using brk heap
start time: 09:04:45.214
6952 microseconds for 1 iterations
end time: 09:04:45.221
final move count 6493
running C test app tp using mmap heap
start time: 09:04:45.223
6937 microseconds for 1 iterations
end time: 09:04:45.230
final move count 6493
running C test app tins using brk heap
hello
test instructions is complete
running C test app tins using mmap heap
hello
test instructions is complete
running C test app td using brk heap
sprintf double 3.14159265358979311600
double from printf: 3.14159265358979311600
float from printf: 1.202057
double from printf r: -3.776373
sqrt of pi: 1.772454
pi in radians: 0.523599
sin of 30 degress is 0.500000
cos of 30 degrees is 0.866025
tan of 30 degrees is 0.577350
atan of 1.000000 is 0.785398
atan2 of 0.3, 0.2 is 0.982794
acos of 0.3 is 1.266104
asin of 0.3 is 0.304693
tanh of 2.2 is 0.304693
log of 0.3: -1.203973
log10 of 300: 2.477121
l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,g,ge,
pi has mantissa: 0.785398, exponent 2
r should be 1.0: 1.000000
  r high point 3187071009115104228782838925952666189789578010509155762176.000000
stop
running C test app td using mmap heap
sprintf double 3.14159265358979311600
double from printf: 3.14159265358979311600
float from printf: 1.202057
double from printf r: -3.776373
sqrt of pi: 1.772454
pi in radians: 0.523599
sin of 30 degress is 0.500000
cos of 30 degrees is 0.866025
tan of 30 degrees is 0.577350
atan of 1.000000 is 0.785398
atan2 of 0.3, 0.2 is 0.982794
acos of 0.3 is 1.266104
asin of 0.3 is 0.304693
tanh of 2.2 is 0.304693
log of 0.3: -1.203973
log10 of 300: 2.477121
l,le,l,le,l,le,l,le,l,le,l,le,l,le,g,ge,g,ge,g,ge,
pi has mantissa: 0.785398, exponent 2
r should be 1.0: 1.000000
  r high point 3187071009115104228782838925952666189789578010509155762176.000000
stop
running C test app tphi using brk heap
should tend towards 1.61803398874989484820458683436563811772030
  at  5 iterations: 1.6250000000000000
  at 10 iterations: 1.6179775280898876
  at 15 iterations: 1.6180344478216819
  at 20 iterations: 1.6180339850173580
  at 25 iterations: 1.6180339887802426
  at 30 iterations: 1.6180339887496482
  at 35 iterations: 1.6180339887498969
  at 40 iterations: 1.6180339887498949
done
running C test app tphi using mmap heap
should tend towards 1.61803398874989484820458683436563811772030
  at  5 iterations: 1.6250000000000000
  at 10 iterations: 1.6179775280898876
  at 15 iterations: 1.6180344478216819
  at 20 iterations: 1.6180339850173580
  at 25 iterations: 1.6180339887802426
  at 30 iterations: 1.6180339887496482
  at 35 iterations: 1.6180339887498969
  at 40 iterations: 1.6180339887498949
done
running C test app ttime using brk heap
before TZ is set: tz: '(null)', year: 2024, month 3, day 30, hour 9, min 4, sec 45
east coast time: set tz 'TZ=EST+5' tz: 'EST+5', year: 2024, month 3, day 30, hour 11, min 4, sec 45
west coast time: set tz 'TZ=PST+8' tz: 'PST+8', year: 2024, month 3, day 30, hour 8, min 4, sec 45
TZ=<blank>: set tz 'TZ=' tz: '', year: 2024, month 3, day 30, hour 16, min 4, sec 45
running C test app ttime using mmap heap
before TZ is set: tz: '(null)', year: 2024, month 3, day 30, hour 9, min 4, sec 45
east coast time: set tz 'TZ=EST+5' tz: 'EST+5', year: 2024, month 3, day 30, hour 11, min 4, sec 45
west coast time: set tz 'TZ=PST+8' tz: 'PST+8', year: 2024, month 3, day 30, hour 8, min 4, sec 45
TZ=<blank>: set tz 'TZ=' tz: '', year: 2024, month 3, day 30, hour 16, min 4, sec 45
running C test app terrno using brk heap
errno opening a file for read that doesn't exist: 2 (2 file not found expected)
errno doing write to stdin file descriptor: 13. (13 permission denied expected)
errno opening a file for read with invalid open flags: 22 (22 invalid argument expected)
success
running C test app terrno using mmap heap
errno opening a file for read that doesn't exist: 2 (2 file not found expected)
errno doing write to stdin file descriptor: 13. (13 permission denied expected)
errno opening a file for read with invalid open flags: 22 (22 invalid argument expected)
success
running C test app fileops using brk heap
fp: 486368
current offset: 0
result of fseek: 0
file length from ftell: 0
empty file length: 0
result of fseek: 0
result of fwrite (should be 1): 1
current offset: 8320
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length from portable_filelen: 8320
result of fseek to middle of file: 0
result of fwrite to middle of file (should be 1): 1
fp: 486368
current offset: 0
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length: 8320
result of read at offset 0: 512
result of read at offset 512: 512
result of read at offset 1024: 512
result of read at offset 1536: 512
result of read at offset 2048: 512
result of read at offset 2560: 512
result of read at offset 3072: 512
result of read at offset 3584: 512
result of read at offset 4096: 512
result of read at offset 4608: 512
result of read at offset 5120: 512
result of read at offset 5632: 512
result of read at offset 6144: 512
result of read at offset 6656: 512
result of read at offset 7168: 512
result of read at offset 7680: 512
result of read at offset 8192: 128
testing backwards read
result of read at offset 8192: 128
result of read at offset 7680: 512
result of read at offset 7168: 512
result of read at offset 6656: 512
result of read at offset 6144: 512
result of read at offset 5632: 512
result of read at offset 5120: 512
result of read at offset 4608: 512
result of read at offset 4096: 512
result of read at offset 3584: 512
result of read at offset 3072: 512
result of read at offset 2560: 512
result of read at offset 2048: 512
result of read at offset 1536: 512
result of read at offset 1024: 512
result of read at offset 512: 512
result of read at offset 0: 512
running C test app fileops using mmap heap
fp: 619488
current offset: 0
result of fseek: 0
file length from ftell: 0
empty file length: 0
result of fseek: 0
result of fwrite (should be 1): 1
current offset: 8320
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length from portable_filelen: 8320
result of fseek to middle of file: 0
result of fwrite to middle of file (should be 1): 1
fp: 619488
current offset: 0
result of fseek: 0
file length from ftell: 8320
8192 + 128 = 8320 file length: 8320
result of read at offset 0: 512
result of read at offset 512: 512
result of read at offset 1024: 512
result of read at offset 1536: 512
result of read at offset 2048: 512
result of read at offset 2560: 512
result of read at offset 3072: 512
result of read at offset 3584: 512
result of read at offset 4096: 512
result of read at offset 4608: 512
result of read at offset 5120: 512
result of read at offset 5632: 512
result of read at offset 6144: 512
result of read at offset 6656: 512
result of read at offset 7168: 512
result of read at offset 7680: 512
result of read at offset 8192: 128
testing backwards read
result of read at offset 8192: 128
result of read at offset 7680: 512
result of read at offset 7168: 512
result of read at offset 6656: 512
result of read at offset 6144: 512
result of read at offset 5632: 512
result of read at offset 5120: 512
result of read at offset 4608: 512
result of read at offset 4096: 512
result of read at offset 3584: 512
result of read at offset 3072: 512
result of read at offset 2560: 512
result of read at offset 2048: 512
result of read at offset 1536: 512
result of read at offset 1024: 512
result of read at offset 512: 512
result of read at offset 0: 512
running C test app t_setjmp using brk heap
second
back in main
falling out of main
running C test app t_setjmp using mmap heap
second
back in main
falling out of main
running C test app tex using brk heap
top of tex
I am unwound, x: 44
caught exception exceptional
attempting large allocations
allocation 0 succeeded 0x94250
allocation 1 succeeded 0x464b60
caught a standard execption: std::bad_alloc
leaving main
running C test app tex using mmap heap
top of tex
I am unwound, x: 44
caught exception exceptional
attempting large allocations
allocation 0 succeeded 0x1a1010
allocation 1 succeeded 0x572010
caught a standard execption: std::bad_alloc
leaving main
running C test app trw using brk heap
exiting trw
running C test app trw using mmap heap
exiting trw
running C test app empty using brk heap
yo
running C test app empty using mmap heap
yo
running C test app tmuldiv using brk heap
app start
i8 3 * 14: 42
i8 3 % 14: 3
i8 3 / 14: 0
i8 17 * 14: -18
i8 17 % 14: 3
i8 17 / 14: 1
i8 -3 * 14: -42
i8 -3 % 14: -3
i8 -3 / 14: 0
i8 -17 * 14: 18
i8 -17 % 14: -3
i8 -17 / 14: -1
i8 -3 * -14: 42
i8 -3 % -14: -3
i8 -3 / -14: 0
i8 -17 * -14: -18
i8 -17 % -14: -3
i8 -17 / -14: 1
ui8 3 * 14: 42
ui8 3 % 14: 3
ui8 3 / 14: 0
ui8 17 * 14: 238
ui8 17 % 14: 3
ui8 17 / 14: 1
ui8 253 * 14: 214
ui8 253 % 14: 1
ui8 253 / 14: 18
ui8 239 * 14: 18
ui8 239 % 14: 1
ui8 239 / 14: 17
ui8 253 * 242: 42
ui8 253 % 242: 11
ui8 253 / 242: 1
ui8 239 * 242: 238
ui8 239 % 242: 239
ui8 239 / 242: 0
i16 3 * 14: 42
i16 3 % 14: 3
i16 3 / 14: 0
i16 3700 * 14: -13736
i16 3700 % 14: 4
i16 3700 / 14: 264
i16 -3 * 14: -42
i16 -3 % 14: -3
i16 -3 / 14: 0
i16 -3700 * 14: 13736
i16 -3700 % 14: -4
i16 -3700 / 14: -264
i16 -3 * -14: 42
i16 -3 % -14: -3
i16 -3 / -14: 0
i16 -3700 * -14: -13736
i16 -3700 % -14: -4
i16 -3700 / -14: 264
ui16 3 * 14: 42
ui16 3 % 14: 3
ui16 3 / 14: 0
ui16 3700 * 14: 51800
ui16 3700 % 14: 4
ui16 3700 / 14: 264
ui16 65533 * 14: 65494
ui16 65533 % 14: 13
ui16 65533 / 14: 4680
ui16 61836 * 14: 13736
ui16 61836 % 14: 12
ui16 61836 / 14: 4416
ui16 65533 * 65522: 42
ui16 65533 % 65522: 11
ui16 65533 / 65522: 1
ui16 61836 * 65522: 51800
ui16 61836 % 65522: 61836
ui16 61836 / 65522: 0
i32 3 * 14: 42
i32 3 % 14: 3
i32 3 / 14: 0
i32 37000 * 14: 518000
i32 37000 % 14: 12
i32 37000 / 14: 2642
i32 -3 * 14: -42
i32 -3 % 14: -3
i32 -3 / 14: 0
i32 -37000 * 14: -518000
i32 -37000 % 14: -12
i32 -37000 / 14: -2642
i32 -3 * -14: 42
i32 -3 % -14: -3
i32 -3 / -14: 0
i32 -37000 * -14: 518000
i32 -37000 % -14: -12
i32 -37000 / -14: 2642
ui32 3 * 14: 42
ui32 3 % 14: 3
ui32 3 / 14: 0
ui32 37000 * 14: 518000
ui32 37000 % 14: 12
ui32 37000 / 14: 2642
ui32 4294967293 * 14: 4294967254
ui32 4294967293 % 14: 1
ui32 4294967293 / 14: 306783378
ui32 4294930296 * 14: 4294449296
ui32 4294930296 % 14: 6
ui32 4294930296 / 14: 306780735
ui32 4294967293 * 4294967282: 42
ui32 4294967293 % 4294967282: 11
ui32 4294967293 / 4294967282: 1
ui32 4294930296 * 4294967282: 518000
ui32 4294930296 % 4294967282: 4294930296
ui32 4294930296 / 4294967282: 0
i64 3 * 14: 42
i64 3 % 14: 3
i64 3 / 14: 0
i64 370000000 * 14: 5180000000
i64 370000000 % 14: 6
i64 370000000 / 14: 26428571
i64 -3 * 14: -42
i64 -3 % 14: -3
i64 -3 / 14: 0
i64 -370000000 * 14: -5180000000
i64 -370000000 % 14: -6
i64 -370000000 / 14: -26428571
i64 -3 * -14: 42
i64 -3 % -14: -3
i64 -3 / -14: 0
i64 -370000000 * -14: 5180000000
i64 -370000000 % -14: -6
i64 -370000000 / -14: 26428571
ui64 3 * 14: 42
ui64 3 % 14: 3
ui64 3 / 14: 0
ui64 370000000 * 14: 5180000000
ui64 370000000 % 14: 6
ui64 370000000 / 14: 26428571
ui64 18446744073709551613 * 14: 18446744073709551574
ui64 18446744073709551613 % 14: 13
ui64 18446744073709551613 / 14: 1317624576693539400
ui64 18446744073339551616 * 14: 18446744068529551616
ui64 18446744073339551616 % 14: 10
ui64 18446744073339551616 / 14: 1317624576667110829
ui64 18446744073709551613 * 18446744073709551602: 42
ui64 18446744073709551613 % 18446744073709551602: 11
ui64 18446744073709551613 / 18446744073709551602: 1
ui64 18446744073339551616 * 18446744073709551602: 5180000000
ui64 18446744073339551616 % 18446744073709551602: 18446744073339551616
ui64 18446744073339551616 / 18446744073709551602: 0
tmuldiv ended with great success
running C test app tmuldiv using mmap heap
app start
i8 3 * 14: 42
i8 3 % 14: 3
i8 3 / 14: 0
i8 17 * 14: -18
i8 17 % 14: 3
i8 17 / 14: 1
i8 -3 * 14: -42
i8 -3 % 14: -3
i8 -3 / 14: 0
i8 -17 * 14: 18
i8 -17 % 14: -3
i8 -17 / 14: -1
i8 -3 * -14: 42
i8 -3 % -14: -3
i8 -3 / -14: 0
i8 -17 * -14: -18
i8 -17 % -14: -3
i8 -17 / -14: 1
ui8 3 * 14: 42
ui8 3 % 14: 3
ui8 3 / 14: 0
ui8 17 * 14: 238
ui8 17 % 14: 3
ui8 17 / 14: 1
ui8 253 * 14: 214
ui8 253 % 14: 1
ui8 253 / 14: 18
ui8 239 * 14: 18
ui8 239 % 14: 1
ui8 239 / 14: 17
ui8 253 * 242: 42
ui8 253 % 242: 11
ui8 253 / 242: 1
ui8 239 * 242: 238
ui8 239 % 242: 239
ui8 239 / 242: 0
i16 3 * 14: 42
i16 3 % 14: 3
i16 3 / 14: 0
i16 3700 * 14: -13736
i16 3700 % 14: 4
i16 3700 / 14: 264
i16 -3 * 14: -42
i16 -3 % 14: -3
i16 -3 / 14: 0
i16 -3700 * 14: 13736
i16 -3700 % 14: -4
i16 -3700 / 14: -264
i16 -3 * -14: 42
i16 -3 % -14: -3
i16 -3 / -14: 0
i16 -3700 * -14: -13736
i16 -3700 % -14: -4
i16 -3700 / -14: 264
ui16 3 * 14: 42
ui16 3 % 14: 3
ui16 3 / 14: 0
ui16 3700 * 14: 51800
ui16 3700 % 14: 4
ui16 3700 / 14: 264
ui16 65533 * 14: 65494
ui16 65533 % 14: 13
ui16 65533 / 14: 4680
ui16 61836 * 14: 13736
ui16 61836 % 14: 12
ui16 61836 / 14: 4416
ui16 65533 * 65522: 42
ui16 65533 % 65522: 11
ui16 65533 / 65522: 1
ui16 61836 * 65522: 51800
ui16 61836 % 65522: 61836
ui16 61836 / 65522: 0
i32 3 * 14: 42
i32 3 % 14: 3
i32 3 / 14: 0
i32 37000 * 14: 518000
i32 37000 % 14: 12
i32 37000 / 14: 2642
i32 -3 * 14: -42
i32 -3 % 14: -3
i32 -3 / 14: 0
i32 -37000 * 14: -518000
i32 -37000 % 14: -12
i32 -37000 / 14: -2642
i32 -3 * -14: 42
i32 -3 % -14: -3
i32 -3 / -14: 0
i32 -37000 * -14: 518000
i32 -37000 % -14: -12
i32 -37000 / -14: 2642
ui32 3 * 14: 42
ui32 3 % 14: 3
ui32 3 / 14: 0
ui32 37000 * 14: 518000
ui32 37000 % 14: 12
ui32 37000 / 14: 2642
ui32 4294967293 * 14: 4294967254
ui32 4294967293 % 14: 1
ui32 4294967293 / 14: 306783378
ui32 4294930296 * 14: 4294449296
ui32 4294930296 % 14: 6
ui32 4294930296 / 14: 306780735
ui32 4294967293 * 4294967282: 42
ui32 4294967293 % 4294967282: 11
ui32 4294967293 / 4294967282: 1
ui32 4294930296 * 4294967282: 518000
ui32 4294930296 % 4294967282: 4294930296
ui32 4294930296 / 4294967282: 0
i64 3 * 14: 42
i64 3 % 14: 3
i64 3 / 14: 0
i64 370000000 * 14: 5180000000
i64 370000000 % 14: 6
i64 370000000 / 14: 26428571
i64 -3 * 14: -42
i64 -3 % 14: -3
i64 -3 / 14: 0
i64 -370000000 * 14: -5180000000
i64 -370000000 % 14: -6
i64 -370000000 / 14: -26428571
i64 -3 * -14: 42
i64 -3 % -14: -3
i64 -3 / -14: 0
i64 -370000000 * -14: 5180000000
i64 -370000000 % -14: -6
i64 -370000000 / -14: 26428571
ui64 3 * 14: 42
ui64 3 % 14: 3
ui64 3 / 14: 0
ui64 370000000 * 14: 5180000000
ui64 370000000 % 14: 6
ui64 370000000 / 14: 26428571
ui64 18446744073709551613 * 14: 18446744073709551574
ui64 18446744073709551613 % 14: 13
ui64 18446744073709551613 / 14: 1317624576693539400
ui64 18446744073339551616 * 14: 18446744068529551616
ui64 18446744073339551616 % 14: 10
ui64 18446744073339551616 / 14: 1317624576667110829
ui64 18446744073709551613 * 18446744073709551602: 42
ui64 18446744073709551613 % 18446744073709551602: 11
ui64 18446744073709551613 / 18446744073709551602: 1
ui64 18446744073339551616 * 18446744073709551602: 5180000000
ui64 18446744073339551616 % 18446744073709551602: 18446744073339551616
ui64 18446744073339551616 / 18446744073709551602: 0
tmuldiv ended with great success
running rust test app ato using brk heap
testing atomic operations
exiting atomic testing with great success
running rust test app ato using mmap heap
testing atomic operations
exiting atomic testing with great success
running rust test app real using brk heap
testing real number operations
r32: 0.31831014
r64: 0.36787968862663156
r32 sin: 0.31296203
r64 sin: 0.3596377963109607
r32 cos: 0.9497656
r64 cos: 0.9330919866039982
r32 tan: 0.329515
r64 tan: 0.3854258759844972
r32 asin: 0.3239464
r64 asin: 0.37672777417563674
r32 acos: 1.24685
r64 acos: 1.1940685526192598
r32 atan: 0.3081693
r64 atan: 0.3525136397354091
exiting real number testing with great success
running rust test app real using mmap heap
testing real number operations
r32: 0.31831014
r64: 0.36787968862663156
r32 sin: 0.31296203
r64 sin: 0.3596377963109607
r32 cos: 0.9497656
r64 cos: 0.9330919866039982
r32 tan: 0.329515
r64 tan: 0.3854258759844972
r32 asin: 0.3239464
r64 asin: 0.37672777417563674
r32 acos: 1.24685
r64 acos: 1.1940685526192598
r32 atan: 0.3081693
r64 atan: 0.3525136397354091
exiting real number testing with great success
running rust test app ttt using brk heap
serial runtime:   2.864394ms
moves:            6493
iterations:       1
running rust test app ttt using mmap heap
serial runtime:   2.744957ms
moves:            6493
iterations:       1
running rust test app e using brk heap
testing finding e
271828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319
exiting finding e with great success
running rust test app e using mmap heap
testing finding e
271828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319
exiting finding e with great success
running rust test app tap using brk heap
starting, should tend towards 1.2020569031595942854...
first implementation...
  1.197531985674193      at 10 iterations
  1.2020074006596781     at 100 iterations
  1.2020564036593433     at 1000 iterations
  1.202056898160098      at 10000 iterations
  1.2020569031097323     at 100000 iterations
  1.202056903150321      at 1000000 iterations
second implementation...
  1.1111111111111112     at 10 iterations
  1.25                   at 100 iterations
  1.2285012285012284     at 1000 iterations
  1.1987532965715655     at 10000 iterations
  1.1989688867573887     at 100000 iterations
exiting finding ap with great success
running rust test app tap using mmap heap
starting, should tend towards 1.2020569031595942854...
first implementation...
  1.197531985674193      at 10 iterations
  1.2020074006596781     at 100 iterations
  1.2020564036593433     at 1000 iterations
  1.202056898160098      at 10000 iterations
  1.2020569031097323     at 100000 iterations
  1.202056903150321      at 1000000 iterations
second implementation...
  1.1111111111111112     at 10 iterations
  1.25                   at 100 iterations
  1.2285012285012284     at 1000 iterations
  1.1987532965715655     at 10000 iterations
  1.1989688867573887     at 100000 iterations
exiting finding ap with great success
running rust test app tphi using brk heap
phi should tend towards 1.61803398874989484820458683436563811772030
  at    5 iterations: 1.625
  at   10 iterations: 1.6179775280898876
  at   15 iterations: 1.618034447821682
  at   20 iterations: 1.618033985017358
  at   25 iterations: 1.6180339887802426
  at   30 iterations: 1.6180339887496482
  at   35 iterations: 1.618033988749897
  at   40 iterations: 1.618033988749895
exiting finding phi with great success
running rust test app tphi using mmap heap
phi should tend towards 1.61803398874989484820458683436563811772030
  at    5 iterations: 1.625
  at   10 iterations: 1.6179775280898876
  at   15 iterations: 1.618034447821682
  at   20 iterations: 1.618033985017358
  at   25 iterations: 1.6180339887802426
  at   30 iterations: 1.6180339887496482
  at   35 iterations: 1.618033988749897
  at   40 iterations: 1.618033988749895
exiting finding phi with great success
running rust test app mysort using brk heap
element count in vector: 58174
element count after dedup: 58174
running rust test app mysort using mmap heap
element count in vector: 58174
element count after dedup: 58174
running rust test app fileops using brk heap
exiting fileops with great success
running rust test app fileops using mmap heap
exiting fileops with great success
tcrash ml
rvos (amd64) fatal error: memory reference prior to address space: 200
pc: 108d4 main + 268
address space 10000 to 1495000
  zero:                0,   ra:            106d4,   sp:           a94810,   gp:            6f9d0, 
    tp:            751e0,   t0:                1,   t1: 2f2f2f2f2f2f2f2f,   t2:                0, 
    s0:           a94870,   s1:                2,   a0:                0,   a1:            4ae93, 
    a2:           a94a30,   a3:                0,   a4:                a,   a5:              200, 
    a6:            6fa80,   a7: 7d127c602f43422f,   s2:           a94a18,   s3:                1, 
    s4:           a94a30,   s5:                1,   s6:            1066c,   s7:            103e0, 
    s8:                0,   s9:                0,  s10:                0,  s11:                0, 
    t3: ffffffffffffffff,   t4:            6df68,   t5:            693e6,   t6:            10000, 
Built for amd64 debug on 29 Mar 24 20:41:19 by g++ on linux

tcrash mh
rvos (amd64) fatal error: memory reference beyond address space: 2000000000000000
pc: 10824 main + 1b8
address space 10000 to 1495000
  zero:                0,   ra:            10704,   sp:           a94810,   gp:            6f9d0, 
    tp:            751e0,   t0:                1,   t1: 2f2f2f2f2f2f2f2f,   t2:                0, 
    s0:           a94870,   s1:                2,   a0:                0,   a1:            4ae9b, 
    a2:           a94a30,   a3:                0,   a4:                a,   a5: 2000000000000000, 
    a6:            6fa80,   a7: 7d127c602f47422f,   s2:           a94a18,   s3:                1, 
    s4:           a94a30,   s5:                1,   s6:            1066c,   s7:            103e0, 
    s8:                0,   s9:                0,  s10:                0,  s11:                0, 
    t3: ffffffffffffffff,   t4:            6df68,   t5:            693e6,   t6:            10000, 
Built for amd64 debug on 29 Mar 24 20:41:19 by g++ on linux

tcrash pcl
rvos (amd64) fatal error: pc is lower than memory: 200
pc: 200  + 0
address space 10000 to 1495000
  zero:                0,   ra:            10844,   sp:           a94810,   gp:            6f9d0, 
    tp:            751e0,   t0:                1,   t1: 2f2f2f2f2f2f2f2f,   t2:                0, 
    s0:           a94870,   s1:                2,   a0:                0,   a1:            4aea4, 
    a2:           a94a30,   a3:                0,   a4:                0,   a5:              200, 
    a6:            6fa80,   a7: 127c602f434c5f2f,   s2:           a94a18,   s3:                1, 
    s4:           a94a30,   s5:                1,   s6:            1066c,   s7:            103e0, 
    s8:                0,   s9:                0,  s10:                0,  s11:                0, 
    t3: ffffffffffffffff,   t4:            6df68,   t5:            693e6,   t6:            10000, 
Built for amd64 debug on 29 Mar 24 20:41:19 by g++ on linux

tcrash pch
rvos (amd64) fatal error: pc is higher than it should be: 2000000000000000
pc: 2000000000000000  + 0
address space 10000 to 1495000
  zero:                0,   ra:            1086c,   sp:           a94810,   gp:            6f9d0, 
    tp:            751e0,   t0:                1,   t1: 2f2f2f2f2f2f2f2f,   t2:                0, 
    s0:           a94870,   s1:                2,   a0:                0,   a1:            4aeac, 
    a2:           a94a30,   a3:                0,   a4:                0,   a5: 2000000000000000, 
    a6:            6fa80,   a7: 127c602f474c5f2f,   s2:           a94a18,   s3:                1, 
    s4:           a94a30,   s5:                1,   s6:            1066c,   s7:            103e0, 
    s8:                0,   s9:                0,  s10:                0,  s11:                0, 
    t3: ffffffffffffffff,   t4:            6df68,   t5:            693e6,   t6:            10000, 
Built for amd64 debug on 29 Mar 24 20:41:19 by g++ on linux

tcrash spl
rvos (amd64) fatal error: stack pointer is below stack memory: a746b0
pc: 1d1b2 __printf_buffer + c
address space 10000 to 1495000
  zero:                0,   ra:            11588,   sp:           a746b0,   gp:            6f9d0, 
    tp:            751e0,   t0:                1,   t1:           a74c80,   t2:                0, 
    s0:           a74c28,   s1:                2,   a0:           a74c28,   a1:            4ae80, 
    a2:           a74c80,   a3:                0,   a4:                0,   a5:               18, 
    a6:                0,   a7: 25252f5049490005,   s2:           a94a18,   s3:                1, 
    s4:           a94a30,   s5:                1,   s6:            1066c,   s7:            103e0, 
    s8:                0,   s9:                0,  s10:                0,  s11:                0, 
    t3: ffffffffffffffff,   t4:            6df68,   t5:            693e6,   t6:            10000, 
Built for amd64 debug on 29 Mar 24 20:41:19 by g++ on linux

tcrash sph
rvos (amd64) fatal error: stack pointer is above the top of its starting point: b94810
pc: 109dc rvos_sp_add + 4
address space 10000 to 1495000
  zero:                0,   ra:            108a4,   sp:           b94810,   gp:            6f9d0, 
    tp:            751e0,   t0:                1,   t1: 2f2f2f2f2f2f2f2f,   t2:                0, 
    s0:           a94870,   s1:                2,   a0:           100000,   a1:            4aebc, 
    a2:           a94a30,   a3:                0,   a4:                0,   a5:                1, 
    a6:            6fa80,   a7: 127c602f475f5c2f,   s2:           a94a18,   s3:                1, 
    s4:           a94a30,   s5:                1,   s6:            1066c,   s7:            103e0, 
    s8:                0,   s9:                0,  s10:                0,  s11:                0, 
    t3: ffffffffffffffff,   t4:            6df68,   t5:            693e6,   t6:            10000, 
Built for amd64 debug on 29 Mar 24 20:41:19 by g++ on linux

tcrash spm
rvos (amd64) fatal error: the stack pointer isn't 16-byte aligned: a94812
pc: 109dc rvos_sp_add + 4
address space 10000 to 1495000
  zero:                0,   ra:            108b8,   sp:           a94812,   gp:            6f9d0, 
    tp:            751e0,   t0:                1,   t1: 2f2f2f2f2f2f2f2f,   t2:                0, 
    s0:           a94870,   s1:                2,   a0:                2,   a1:            4aec4, 
    a2:           a94a30,   a3:                0,   a4:                0,   a5:                1, 
    a6:            6fa80,   a7: 127c602f425f5c2f,   s2:           a94a18,   s3:                1, 
    s4:           a94a30,   s5:                1,   s6:            1066c,   s7:            103e0, 
    s8:                0,   s9:                0,  s10:                0,  s11:                0, 
    t3: ffffffffffffffff,   t4:            6df68,   t5:            693e6,   t6:            10000, 
Built for amd64 debug on 29 Mar 24 20:41:19 by g++ on linux

tmmap test
MAP_PRIVATE: 0x2
MAP_ANONYMOUS: 0x20
MREMAP_MAYMOVE: 0x1
mmap test completed with great success
an nap
pan
ba /p /q tp.bas
Time to parse tests/tp.bas: 3.773317 ms
start time: 09:04:47.179
152 ms for 1 iterations
end time: 09:04:47.331
final move count 6493
mysort /r words.txt sorted.txt
sorting tests/words.txt ==> tests/sorted.txt
sorting
writing...
done
running ttty tests
is stdin tty:  yes
is stdout tty: no
is stdin tty:  no
is stdout tty: no
Sat Mar 30 09:04:47 PDT 2024
