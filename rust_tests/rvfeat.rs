use std::arch::is_riscv_feature_detected;

//macro_rules! is_riscv_feature_detected {
//    ("rv32i") => { ... };
//    ("zifencei") => { ... };
//    ("zihintpause") => { ... };
//    ("rv64i") => { ... };
//    ("m") => { ... };
//    ("a") => { ... };
//    ("zicsr") => { ... };
//    ("zicntr") => { ... };
//    ("zihpm") => { ... };
//    ("f") => { ... };
//    ("d") => { ... };
//    ("q") => { ... };
//    ("c") => { ... };
//    ("zfinx") => { ... };
//    ("zdinx") => { ... };
//    ("zhinx") => { ... };
//    ("zhinxmin") => { ... };
//    ("ztso") => { ... };
//    ("rv32e") => { ... };
//    ("rv128i") => { ... };
//    ("zfh") => { ... };
//    ("zfhmin") => { ... };
//    ("b") => { ... };
//    ("j") => { ... };
//    ("p") => { ... };
//    ("v") => { ... };
//    ("zam") => { ... };
//    ("s") => { ... };
//    ("svnapot") => { ... };
//    ("svpbmt") => { ... };
//    ("svinval") => { ... };
//    ("h") => { ... };
//    ("zba") => { ... };
//    ("zbb") => { ... };
//    ("zbc") => { ... };
//    ("zbs") => { ... };
//    ("zbkb") => { ... };
//    ("zbkc") => { ... };
//    ("zbkx") => { ... };
//    ("zknd") => { ... };
//    ("zkne") => { ... };
//    ("zknh") => { ... };
//    ("zksed") => { ... };
//    ("zksh") => { ... };
//    ("zkr") => { ... };
//    ("zkn") => { ... };
//    ("zks") => { ... };
//    ("zk") => { ... };
//    ("zkt") => { ... };
//    ($t:tt,) => { ... };
//    ($t:tt) => { ... };
//}

fn main()
{
    println!( "testing risc-v features" );
} //main

