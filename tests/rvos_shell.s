# This shell is for running apps generated by the BA basic compiler in the RISC-V OS emulator rvos.
# This abstraction of _start and rvos_print_text allows the same apps to run on
# physical hardware: the Kendryte K210 Sipeed Maixduino Board.

.text
.align 3

.if 1
.globl _start
.type _start, @function
_start:
        .cfi_startproc

        # The g++ c runtime tries to get values on the stack above this point.
        # I'm guessing it's to get redirected streams for input/output.

        addi    sp, sp, -256

        # rvos sets a0 and a1 to argc and argv.

        jal     main

        li      a7, 0x2003 # rvos_sys_exit
        ecall
        .cfi_endproc
.endif

.globl rvos_print_text
.type rvos_print_text, @function
rvos_print_text:
        .cfi_startproc
        addi    sp, sp, -32
        sd      ra, 16(sp)

        li      a7, 0x2004 # rvos_sys_print_text
        ecall

        ld      ra, 16(sp)
        addi    sp, sp, 32
        jr      ra
        .cfi_endproc

.globl rvos_rand
.type rvos_rand, @function
rvos_rand:
        .cfi_startproc
        addi    sp, sp, -32
        sd      ra, 16(sp)

        li      a7, 0x2000 # rvos_sys_rand
        ecall

        ld      ra, 16(sp)
        addi    sp, sp, 32
        jr      ra
        .cfi_endproc

.globl rvos_exit
.type rvos_exit, @function
rvos_exit:
        .cfi_startproc
        addi    sp, sp, -32
        sd      ra, 16(sp)

        li      a7, 0x2003 # rvos_sys_exit
        ecall

        ld      ra, 16(sp)
        addi    sp, sp, 32
        jr      ra
        .cfi_endproc

.globl rvos_print_double
.type rvos_print_double, @function
rvos_print_double:
        .cfi_startproc
        addi    sp, sp, -32
        sd      ra, 16(sp)

        li      a7, 0x2001  # rvos_sys_print_double
        ecall

        ld      ra, 16(sp)
        addi    sp, sp, 32
        jr      ra
        .cfi_endproc

.globl rvos_gettimeofday
.type rvos_gettimeofday, @function
rvos_gettimeofday:
        .cfi_startproc
        addi    sp, sp, -32
        sd      ra, 16(sp)

        li      a7, 169
        ecall

        ld      ra, 16(sp)
        addi    sp, sp, 32
        jr      ra
        .cfi_endproc

.globl rvos_trace_instructions
.type rvos_trace_instructions, @function
rvos_trace_instructions:
        .cfi_startproc
        addi    sp, sp, -32
        sd      ra, 16(sp)

        li      a7, 0x2002  # rvos_sys_trace_instructions
        ecall

        ld      ra, 16(sp)
        addi    sp, sp, 32
        jr      ra
        .cfi_endproc

